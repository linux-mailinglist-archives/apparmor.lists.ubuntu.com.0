Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from huckleberry.canonical.com (huckleberry.canonical.com [91.189.94.19])
	by mail.lfdr.de (Postfix) with ESMTPS id 4C35E2FDC9A
	for <lists+apparmor@lfdr.de>; Wed, 20 Jan 2021 23:32:50 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=huckleberry.canonical.com)
	by huckleberry.canonical.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1l2M1q-00084p-EQ; Wed, 20 Jan 2021 22:32:42 +0000
Received: from youngberry.canonical.com ([91.189.89.112])
 by huckleberry.canonical.com with esmtps
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <john.johansen@canonical.com>) id 1l2M1o-00084j-10
 for apparmor@lists.ubuntu.com; Wed, 20 Jan 2021 22:32:40 +0000
Received: from [50.53.41.238] (helo=[192.168.192.153])
 by youngberry.canonical.com with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <john.johansen@canonical.com>)
 id 1l2M1m-0006Ez-4i; Wed, 20 Jan 2021 22:32:38 +0000
To: "Eric W. Biederman" <ebiederm@xmission.com>,
 linux-security-module@vger.kernel.org
References: <87lfcn5mfz.fsf@x220.int.ebiederm.org>
From: John Johansen <john.johansen@canonical.com>
Autocrypt: addr=john.johansen@canonical.com; prefer-encrypt=mutual; keydata=
 LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkU1bXJQb0JFQURB
 azE5UHNnVmdCS2tJbW1SMmlzUFE2bzdLSmhUVEtqSmR3VmJrV1NuTm4rbzZVcDVrCm5LUDFm
 NDlFQlFsY2VXZzF5cC9Od2JSOGFkK2VTRU8vdW1hL0srUHFXdkJwdEtDOVNXRDk3Rkc0dUI0
 L2Nhb20KTEVVOTdzTFFNdG52R1dkeHJ4VlJHTTRhbnpXWU1neno1VFptSWlWVFo0M091NVZw
 YVMxVnoxWlN4UDNoL3hLTgpaci9UY1c1V1FhaTh1M1BXVm5ia2poU1pQSHYxQmdoTjY5cXhF
 UG9tckpCbTFnbXR4M1ppVm1GWGx1d1RtVGdKCk9rcEZvbDduYkowaWxuWUhyQTdTWDNDdFIx
 dXBlVXBNYS9XSWFuVk85NldkVGpISElhNDNmYmhtUXViZTR0eFMKM0ZjUUxPSlZxUXN4NmxF
 OUI3cUFwcG05aFExMHFQV3dkZlB5LyswVzZBV3ROdTVBU2lHVkNJbld6bDJIQnFZZAovWmxs
 OTN6VXErTklvQ244c0RBTTlpSCt3dGFHRGNKeXdJR0luK2VkS050SzcyQU1nQ2hUZy9qMVpv
 V0g2WmVXClBqdVVmdWJWelp0bzFGTW9HSi9TRjRNbWRRRzFpUU50ZjRzRlpiRWdYdXk5Y0dp
 MmJvbUYwenZ5QkpTQU5weGwKS05CRFlLek42S3owOUhVQWtqbEZNTmdvbUwvY2pxZ0FCdEF4
 NTlMK2RWSVpmYUYyODFwSWNVWnp3dmg1K0pvRwplT1c1dUJTTWJFN0wzOG5zem9veWtJSjVY
 ckFjaGtKeE5mejdrK0ZuUWVLRWtOekVkMkxXYzNRRjRCUVpZUlQ2ClBISGdhM1JneWtXNSsx
 d1RNcUpJTGRtdGFQYlhyRjNGdm5WMExSUGN2NHhLeDdCM2ZHbTd5Z2Rvb3dBUkFRQUIKdEIx
 S2IyaHVJRXB2YUdGdWMyVnVJRHhxYjJodVFHcHFiWGd1Ym1WMFBva0NPZ1FUQVFvQUpBSWJB
 d1VMQ1FnSApBd1VWQ2drSUN3VVdBZ01CQUFJZUFRSVhnQVVDVG8wWVZ3SVpBUUFLQ1JBRkx6
 WndHTlhEMkx4SkQvOVRKWkNwCndsbmNUZ1llcmFFTWVEZmtXdjhjMUlzTTFqMEFtRTRWdEwr
 ZkU3ODBaVlA5Z2tqZ2tkWVN4dDdlY0VUUFRLTWEKWlNpc3JsMVJ3cVUwb29nWGRYUVNweHJH
 SDAxaWN1LzJuMGpjWVNxWUtnZ1B4eTc4QkdzMkxacTRYUGZKVFptSApaR25YR3EvZURyL21T
 bmowYWF2QkptTVo2amJpUHo2eUh0QllQWjlmZG84YnRjendQNDFZZVdvSXUyNi84SUk2CmYw
 WG0zVkM1b0FhOHY3UmQrUldaYThUTXdsaHpIRXh4ZWwzanRJN0l6ek9zbm1FOS84RG0wQVJE
 NWlUTENYd1IKMWN3SS9KOUJGL1MxWHY4UE4xaHVUM0l0Q05kYXRncDh6cW9Ka2dQVmptdnlM
 NjRRM2ZFa1liZkhPV3NhYmE5LwprQVZ0Qk56OVJURmg3SUhEZkVDVmFUb3VqQmQ3QnRQcXIr
 cUlqV0ZhZEpEM0k1ZUxDVkp2VnJyb2xyQ0FUbEZ0Ck4zWWtRczZKbjFBaUlWSVUzYkhSOEdq
 ZXZnejVMbDZTQ0dIZ1Jya3lScG5TWWFVL3VMZ24zN042QVl4aS9RQUwKK2J5M0N5RUZManpX
 QUV2eVE4YnEzSXVjbjdKRWJoUy9KLy9kVXFMb2VVZjh0c0dpMDB6bXJJVFpZZUZZQVJoUQpN
 dHNmaXpJclZEdHoxaVBmL1pNcDVnUkJuaXlqcFhuMTMxY20zTTNndjZIclFzQUdubjhBSnJ1
 OEdEaTVYSllJCmNvLzEreC9xRWlOMm5DbGFBT3BiaHpOMmVVdlBEWTVXMHEzYkEvWnAybWZH
 NTJ2YlJJK3RRMEJyMUhkL3ZzbnQKVUhPOTAzbU1aZXAyTnpOM0JaNXFFdlB2RzRyVzVacTJE
 cHliV2JRclNtOW9iaUJLYjJoaGJuTmxiaUE4YW05bwpiaTVxYjJoaGJuTmxia0JqWVc1dmJt
 bGpZV3d1WTI5dFBva0NOd1FUQVFvQUlRVUNUbzBYV2dJYkF3VUxDUWdICkF3VVZDZ2tJQ3dV
 V0FnTUJBQUllQVFJWGdBQUtDUkFGTHpad0dOWEQySXRNRC85anliYzg3ZE00dUFIazZ5Tk0K
 TjBZL0JGbW10VFdWc09CaHFPbm9iNGkzOEJyRE8yQzFoUUNQQ1FlNExMczEvNHB0ZW92UXQ4
 QjJGeXJQVmp3Zwo3alpUSE5LNzRyNmxDQ1Z4eDN5dTFCN1U5UG80VlRrY3NsVmIxL3FtV3V4
 OFhXY040eXZrVHFsTCtHeHB5Sm45CjlaWmZmWEpjNk9oNlRtT2ZiS0d2TXV1djVhclNJQTNK
 SEZMZjlhTHZadEExaXNKVXI3cFM5YXBnOXVUVUdVcDcKd2ZWMFdUNlQzZUczbXRVVTJ1cDVK
 VjQ4NTBMMDVqSFM2dVdpZS9ZK3lmSk9iaXlyeE4vNlpxVzVHb25oTEJxLwptc3pjVjV2QlQz
 QkRWZTNSdkY2WGRNOU9oUG4xK1k4MXg1NCt2UTExM044aUx3RjdHR2ExNFp5SVZBTlpEMEkw
 CkhqUnZhMmsvUnFJUlR6S3l1UEg1cGtsY0tIVlBFRk1tT3pNVCtGT294Tmp2Uys3K3dHMktN
 RFlFbUhQcjFQSkIKWlNaZUh6SzE5dGZhbFBNcHBGeGkrc3lZTGFnTjBtQjdKSFF3WTdjclV1
 T0RoeWNxNjBZVnoxdGFFeWd1M1l2MgoyL0kxRUNHSHZLSEc2d2M5MG80M0MvZWxIRUNYbkVo
 N3RLcGxEY3BJQytPQ21NeEtIaFI0NitYY1p2Z3c0RGdiCjdjYTgzZVFSM0NHODlMdlFwVzJM
 TEtFRUJEajdoWmhrTGJra1BSWm0zdzhKWTQ0YXc4VnRneFdkblNFTUNMeEwKSU9OaDZ1Wjcv
 L0RZVnRjSWFNSllrZWJhWnRHZENwMElnVVpiMjQvVmR2WkNZYk82MkhrLzNWbzFuWHdIVUVz
 Mwo2RC92MWJUMFJaRmk2OUxnc0NjT2N4NGdZTGtDRFFST1pxejZBUkFBb3F3NmtrQmhXeU0x
 ZnZnYW1BVmplWjZuCktFZm5SV2JrQzk0TDFFc0pMdXAzV2IyWDBBQk5PSFNrYlNENHBBdUMy
 dEtGL0VHQnQ1Q1A3UWRWS1JHY1F6QWQKNmIyYzFJZHk5Ukx3Nnc0Z2krbm4vZDFQbTFra1lo
 a1NpNXpXYUlnMG01UlFVaytFbDh6a2Y1dGNFLzFOMFo1TwpLMkpoandGdTViWDBhMGw0Y0ZH
 V1ZRRWNpVk1ES1J0eE1qRXRrM1N4RmFsbTZaZFEycHAyODIyY2xucTR6WjltCld1MWQyd2F4
 aXorYjVJYTR3ZURZYTduNDFVUmNCRVViSkFnbmljSmtKdENUd3lJeElXMktuVnlPcmp2a1F6
 SUIKdmFQMEZkUDJ2dlpvUE1kbENJek9sSWtQTGd4RTBJV3VlVFhlQkpoTnMwMXBiOGJMcW1U
 SU1sdTRMdkJFTEEvdgplaWFqajVzOHk1NDJIL2FIc2ZCZjRNUVVoSHhPL0JaVjdoMDZLU1Vm
 SWFZN09nQWdLdUdOQjNVaWFJVVM1K2E5CmduRU9RTER4S1J5L2E3UTF2OVMrTnZ4KzdqOGlI
 M2prUUpoeFQ2WkJoWkdSeDBna0gzVCtGMG5ORG01TmFKVXMKYXN3Z0pycUZaa1VHZDJNcm0x
 cW5Ld1hpQXQ4U0ljRU5kcTMzUjBLS0tSQzgwWGd3ajhKbjMwdlhMU0crTk8xRwpIMFVNY0F4
 TXd5L3B2azZMVTVKR2paUjczSjVVTFZoSDRNTGJEZ2dEM21QYWlHOCtmb3RUckpVUHFxaGc5
 aHlVCkVQcFlHN3NxdDc0WG43OStDRVpjakxIenlsNnZBRkUyVzBreGxMdFF0VVpVSE8zNmFm
 RnY4cUdwTzNacVB2akIKVXVhdFhGNnR2VVFDd2YzSDZYTUFFUUVBQVlrQ0h3UVlBUW9BQ1FV
 Q1RtYXMrZ0liREFBS0NSQUZMelp3R05YRAoyRC9YRC8wZGRNLzRhaTFiK1RsMWp6bkthalgz
 a0crTWVFWWVJNGY0MHZjbzNyT0xyblJHRk9jYnl5ZlZGNjlNCktlcGllNE93b0kxamNUVTBB
 RGVjbmJXbkROSHByMFNjenhCTXJvM2Juckxoc212anVuVFlJdnNzQlp0QjRhVkoKanVMSUxQ
 VWxuaEZxYTdmYlZxMFpRamJpVi9ydDJqQkVOZG05cGJKWjZHam5wWUljQWJQQ0NhL2ZmTDQv
 U1FSUwpZSFhvaEdpaVM0eTVqQlRtSzVsdGZld0xPdzAyZmtleEgrSUpGcnJHQlhEU2c2bjJT
 Z3hubisrTkYzNGZYY205CnBpYXczbUtzSUNtKzBoZE5oNGFmR1o2SVdWOFBHMnRlb29WRHA0
 ZFlpaCsreFgvWFM4ekJDYzFPOXc0bnpsUDIKZ0t6bHFTV2JoaVdwaWZSSkJGYTRXdEFlSlRk
 WFlkMzdqL0JJNFJXV2hueXc3YUFQTkdqMzN5dEdITlVmNlJvMgovanRqNHRGMXkvUUZYcWpK
 Ry93R2pwZHRSZmJ0VWpxTEhJc3ZmUE5OSnEvOTU4cDc0bmRBQ2lkbFdTSHpqK09wCjI2S3Bi
 Rm5td05PMHBzaVVzbmh2SEZ3UE8vdkFibDNSc1I1KzBSbytodnMyY0VtUXV2OXIvYkRsQ2Zw
 enAydDMKY0srcmh4VXFpc094OERaZnoxQm5rYW9DUkZidnZ2ays3TC9mb21QbnRHUGtxSmNp
 WUU4VEdIa1p3MWhPa3UrNApPb00yR0I1bkVEbGorMlRGL2pMUStFaXBYOVBrUEpZdnhmUmxD
 NmRLOFBLS2ZYOUtkZm1BSWNnSGZuVjFqU24rCjh5SDJkakJQdEtpcVcwSjY5YUlzeXg3aVYv
 MDNwYVBDakpoN1hxOXZBenlkTjVVL1VBPT0KPTZQL2IKLS0tLS1FTkQgUEdQIFBVQkxJQyBL
 RVkgQkxPQ0stLS0tLQo=
Organization: Canonical
Message-ID: <c887b7f1-7c50-cd9d-fd97-b89274c2765c@canonical.com>
Date: Wed, 20 Jan 2021 14:32:35 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <87lfcn5mfz.fsf@x220.int.ebiederm.org>
Content-Language: en-US
Subject: Re: [apparmor] [RFC][PATCH] apparmor: Enforce progressively tighter
 permissions for no_new_privs
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Cc: Kees Cook <keescook@chromium.org>, apparmor@lists.ubuntu.com,
 linux-kernel@vger.kernel.org, Andy Lutomirski <luto@amacapital.net>,
 James Morris <james.l.morris@oracle.com>, James Morris <jmorris@namei.org>,
 Linus Torvalds <torvalds@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>

T24gMS8yMC8yMSAxOjI2IFBNLCBFcmljIFcuIEJpZWRlcm1hbiB3cm90ZToKPiAKPiBUaGUgY3Vy
cmVudCB1bmRlcnN0YW5kaW5nIG9mIGFwcGFybW9yIHdpdGggcmVzcGVjdCB0byBub19uZXdfcHJp
dnMgaXMgYXQKPiBvZGRzIHdpdGggaG93IG5vX25ld19wcml2cyBpcyBpbXBsZW1lbnRlZCBhbmQg
dW5kZXJzdG9vZCBieSB0aGUgcmVzdCBvZgo+IHRoZSBrZXJuZWwuCj4gCj4gVGhlIGRvY3VtZW50
YXRpb24gb2Ygbm9fbmV3X3ByaXZzIHN0YXRlczoKPj4gV2l0aCBgYG5vX25ld19wcml2c2BgIHNl
dCwgYGBleGVjdmUoKWBgIHByb21pc2VzIG5vdCB0byBncmFudCB0aGUKPj4gcHJpdmlsZWdlIHRv
IGRvIGFueXRoaW5nIHRoYXQgY291bGQgbm90IGhhdmUgYmVlbiBkb25lIHdpdGhvdXQgdGhlCj4+
IGV4ZWN2ZSBjYWxsLgo+IAo+IEFuZCByZWFkaW5nIHRocm91Z2ggdGhlIGtlcm5lbCBleGNlcHQg
Zm9yIGFwcGFybW9yIHRoYXQgZGVzY3JpcHRpb24KPiBtYXRjaGVzIHdoYXQgaXMgaW1wbGVtZW50
ZWQuCj4gCgpUaGF0IGlzIG5vdCBjb3JyZWN0LgoKY29tbWl0IDdiMGQwYjQwY2Q3OCAoInNlbGlu
dXg6IFBlcm1pdCBib3VuZGVkIHRyYW5zaXRpb25zIHVuZGVyCiAgICBOT19ORVdfUFJJVlMgb3Ig
Tk9TVUlELiIpCgpBbGxvd3MgZm9yIGJvdW5kIHRyYW5zaXRpb25zIHVuZGVyIHNlbGludXgKYW5k
Cgpjb21taXQgYWY2M2Y0MTkzZjlmIHNlbGludXg6IEdlbmVyYWxpemUgc3VwcG9ydCBmb3IgTk5Q
L25vc3VpZCBTRUxpbnV4CiAgICBkb21haW4gdHJhbnNpdGlvbnMKCmdvZXMgZnVydGhlciBhbmQg
IkRlY291cGxlIE5OUC9ub3N1aWQgZnJvbSBTRUxpbnV4IHRyYW5zaXRpb25zIi4gCgo+IFRoZXJl
IGFyZSB0d28gbWFqb3IgZGl2ZXJnZW5jZXMgb2YgYXBwYXJtb3IgZnJvbSB0aGlzIGRlZmluaXRp
b246Cj4gLSBwcm9jX3NldGF0dHIgZW5mb3JjZXMgbGltaXRhdGlvbnMgd2hlbiBub19uZXdfcHJp
dnMgYXJlIHNldC4KPiAtIHRoZSBsaW1pdGF0aW9uIGlzIGVuZm9yY2VkIGZyb20gdGhlIGFwcGFy
ZW50IHRpbWUgd2hlbiBub19uZXdfcHJpdnMgaXMKPiAgIHNldCBpbnN0ZWFkIG9mIGd1YXJhbnRl
ZWluZyB0aGF0IGVhY2ggZXhlY3ZlIGhhcyBwcm9ncmVzc2l2ZWx5IG1vcmUKPiAgIG5hcnJvdyBw
ZXJtaXNzaW9ucy4KPiAKPiBUaGUgY29kZSBpbiBhcHBhcm1vciB0aGF0IGF0dGVtcHRzIHRvIGRp
c2NvdmVyIHRoZSBhcHBhcm1vciBsYWJlbCBhdCB0aGUKPiBwb2ludCB3aGVyZSBub19uZXdfcHJp
dnMgaXMgc2V0IGlzIG5vdCByb2J1c3QuICBUaGUgY2FwdHVyZSBoYXBwZW5zIGEKPiBsb25nIHRp
bWUgYWZ0ZXIgbm9fbmV3X3ByaXZzIGlzIHNldC4KPiAKCnllcywgYnV0IHRoYXQgc2hvdWxkbid0
IG1hdHRlci4gQXMgYXBwYXJtb3IgaGFzIG5vdCBjaGFuZ2VkIGl0cyBsYWJlbAphdCBhbnkgcG9p
bnQgYmV0d2VlbiB3aGVuIG5vX25ld19wcml2cyB3YXMgc2V0IGFuZCB3aGVuIHRoZSBjaGVjayBp
cwpkb25lLiBBcHBBcm1vciBpcyBhdHRlbXB0aW5nIHRvIGNoYW5nZSBpdCBsYWJlbCwgYW5kIGlm
IGl0IGZpbmRzIE5OUApoYXMgYmVlbiBzZXQgd2UgY2FwdHVyZSB3aGF0IHRoZSBjb25maW5lbWVu
dCB3YXMuCgo+IENhcHR1cmluZyB0aGUgbGFiZWwgYXQgdGhlIHBvaW50IHdoZXJlIG5vX25ld19w
cml2cyBpcyBzZXQgaXMKPiBwcmFjdGljYWxseSBpbXBvc3NpYmxlIHRvIGltcGxlbWVudCByb2J1
c3RseS4gIFRvZGF5IHRoZSBydWxlIGlzIHN0cnVjdAo+IGNyZWQgY2FuIG9ubHkgYmUgY2hhbmdl
ZCBieSBpdCdzIGN1cnJlbnQgdGFzay4gIFRvZGF5CgpyaWdodCwgYW5kIGFwcGFybW9yIG9ubHkg
ZXZlciBoYXMgdGhlIHRhc2sgdXBkYXRlIGl0cyBvd24gbGFiZWwuCgo+IFNFQ0NPTVBfRklMVEVS
X0ZMQUdfVFNZTkMgc2V0cyBub19uZXdfcHJpdnMgZnJvbSBhbm90aGVyIHRocmVhZC4gIEEKPiBy
b2J1c3QgaW1wbGVtZW50YXRpb24gd291bGQgcmVxdWlyZSBjaGFuZ2luZyBzb21ldGhpbmcgZnVu
ZGFtZW50YWwgaW4KPiBob3cgY3JlZHMgYXJlIG1hbmFnZWQgZm9yIFNFQ0NPTVBfRklMVEVSX0ZM
QUdfVFNZTkMgdG8gYmUgYWJsZSB0bwo+IGNhcHR1cmUgdGhlIGNyZWQgYXQgdGhlIHBvaW50IGl0
IGlzIHNldC4KPiAKSSBhbSBvcGVuIHRvIHN1cHBvcnRpbmcgc29tZXRoaW5nIGxpa2UgdGhhdC4K
Cj4gRnV0aGVybW9yZSBnaXZlbiB0aGUgY29uc2lzdGVudCBkb2N1bWVudGF0aW9uIGFuZCBob3cg
ZXZlcnl0aGluZyBlbHNlCj4gaW1wbGVtZW50cyBub19uZXdfcHJpdnMsIG5vdCBoYXZpbmcgdGhl
IHBlcm1pc3Npb25zIGdldCBwcm9ncmVzc2l2ZWx5CgpBZ2FpbiBzZWUgYWJvdmUKCj4gdGlnaHRl
ciBpcyBhIGZvb3RndW4gYWltZWQgYXQgdXNlcnNwYWNlLiAgSSBmdWxseSBleHBlY3QgaXQgdG8g
YnJlYWsgYW55Cgp0aWdodGVyIGlzIHNvbWV3aGF0IHJlbGF0aXZlLCBub3IgaXMgaXQgb25seSBw
cm9ncmVzc2l2ZWx5IHRpZ2h0ZXIgaXQKaXMgYm91bmRlZCBhZ2FpbnN0IHRoZSBzbmFwc2hvdCBv
ZiB0aGUgbGFiZWwgdGhhdCB3YXMgb24gdGhlIHRhc2suCgo+IHNlY3VyaXR5IHNlbnNpdGl2ZSBz
b2Z0d2FyZSB0aGF0IHVzZXMgbm9fbmV3X3ByaXZzIGFuZCB3YXMgbm90Cj4gZGVsaWJlcmF0ZWx5
IGRlc2lnbmVkIGFuZCB0ZXN0ZWQgYWdhaW5zdCBhcHBhcm1vci4KPiAKCkN1cnJlbnRseSB0aGUg
c2l0dWF0aW9uIGhhcyBiZWNvbWUgZWl0aGVyIGFuIGVpdGhlciBvciBjaG9pY2UgYmV0d2Vlbgp0
aGUgTFNNIGFuZCBOTlAuIFdlIGFyZSB0cnlpbmcgdG8gd2FsayBhIGJhbGFuY2UuIElkZWFsbHkg
YXBwYXJtb3IKd291bGQgbGlrZSB0byBkbyBzb21ldGhpbmcgc2ltaWxhciB0byBzZWxpbnV4IGFu
ZCBkZWNvdXBsZSB0aGUgbGFiZWwKdHJhbnNpdGlvbiBmcm9tIE5OUCBhbmQgbm9zdWlkIHZpYSBh
biBpbnRlcm5hbCBjYXBhYmlsaXR5LCBidXQgd2UKaGF2ZSBub3QgZ29uZSB0aGVyZSB5ZXQuCgo+
IEF2b2lkIHRoZSBxdWVzdGlvbmFibGUgYW5kIGhhcmQgdG8gZml4IGltcGxlbWVudGF0aW9uIGFu
ZCB0aGUKPiBwb3RlbnRpYWwgdG8gY29uZnVzZSB1c2Vyc3BhY2UgYnkgaGF2aW5nIG5vX25ld19w
cml2cyBlbmZvcmNlCj4gcHJvZ3Jlc3NpbnZlbHkgdGlnaHRlciBwZXJtaXNzaW9ucy4KPiAKClRo
aXMgd291bGQgY29tcGxldGVseSBicmVhayBzZXZlcmFsIHVzZSBjYXNlcy4KCj4gRml4ZXM6IDlm
Y2Y3OGNjYTE5OCAoImFwcGFybW9yOiB1cGRhdGUgZG9tYWluIHRyYW5zaXRpb25zIHRoYXQgYXJl
IHN1YnNldHMgb2YgY29uZmluZW1lbnQgYXQgbm5wIikKPiBTaWduZWQtb2ZmLWJ5OiBFcmljIFcu
IEJpZWRlcm1hbiA8ZWJpZWRlcm1AeG1pc3Npb24uY29tPgo+IC0tLQo+IAo+IEkgY2FtZSBhY2Ny
b3NzIHRoaXMgd2hpbGUgZXhhbWluaW5nIHRoZSBwbGFjZXMgY3JlZF9ndWFyZF9tdXRleCBpcwo+
IHVzZWQgYW5kIHRyeWluZyB0byBmaW5kIGEgd2F5IHRvIG1ha2UgdGhvc2UgY29kZSBwYXRocyBs
ZXNzIGluc2FuZS4KPiAKPiBJZiBpdCB3b3VsZCBiZSBtb3JlIHBhbGxhdGFibGUgSSB3b3VsZCBu
b3QgbWluZCByZW1vdmluZyB0aGUKPiB0YXNrX25vX25ld19wcml2cyB0ZXN0IGVudGlyZWx5IGZy
b20gYWFfY2hhbmdlX2hhdCBhbmQgYWFfY2hhbmdlX3Byb2ZpbGUKPiBhcyB0aG9zZSBhcmUgbm90
IHBhcnQgb2YgZXhlYywgc28gYXJndWFibHkgbm9fbmV3X3ByaXZzIHNob3VsZCBub3QgY2FyZQo+
IGFib3V0IHRoZW0gYXQgYWxsLgo+IAo+IENhbiB3ZSBwbGVhc2UgZ2V0IHJpZCBvZiB0aGUgaHVn
ZSBzZW1hbnRpYyB3YXJ0IGFuZCBwYWluIGluIHRoZSBpbXBsZW1lbnRhdGlvbj8KPiAKPiAgc2Vj
dXJpdHkvYXBwYXJtb3IvZG9tYWluLmMgICAgICAgfCAzOSArKysrLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQo+ICBzZWN1cml0eS9hcHBhcm1vci9pbmNsdWRlL3Rhc2suaCB8ICA0IC0tLS0K
PiAgc2VjdXJpdHkvYXBwYXJtb3IvdGFzay5jICAgICAgICAgfCAgNyAtLS0tLS0KPiAgMyBmaWxl
cyBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDQ2IGRlbGV0aW9ucygtKQo+IAo+IGRpZmYgLS1n
aXQgYS9zZWN1cml0eS9hcHBhcm1vci9kb21haW4uYyBiL3NlY3VyaXR5L2FwcGFybW9yL2RvbWFp
bi5jCj4gaW5kZXggZjkxOWViZDA0MmZkLi44Zjc3MDU5YmY4OTAgMTAwNjQ0Cj4gLS0tIGEvc2Vj
dXJpdHkvYXBwYXJtb3IvZG9tYWluLmMKPiArKysgYi9zZWN1cml0eS9hcHBhcm1vci9kb21haW4u
Ywo+IEBAIC04NjksMTcgKzg2OSw2IEBAIGludCBhcHBhcm1vcl9icHJtX2NyZWRzX2Zvcl9leGVj
KHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0pCj4gIAo+ICAJbGFiZWwgPSBhYV9nZXRfbmV3ZXN0
X2xhYmVsKGNyZWRfbGFiZWwoYnBybS0+Y3JlZCkpOwo+ICAKPiAtCS8qCj4gLQkgKiBEZXRlY3Qg
bm8gbmV3IHByaXZzIGJlaW5nIHNldCwgYW5kIHN0b3JlIHRoZSBsYWJlbCBpdAo+IC0JICogb2Nj
dXJyZWQgdW5kZXIuIElkZWFsbHkgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiBubnAKPiAtCSAqIGlz
IHNldCBidXQgdGhlcmUgaXNuJ3QgYSBnb29kIHdheSB0byBkbyB0aGF0IHlldC4KPiAtCSAqCj4g
LQkgKiBUZXN0aW5nIGZvciB1bmNvbmZpbmVkIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHN1YnNl
dCB0ZXN0Cj4gLQkgKi8KPiAtCWlmICgoYnBybS0+dW5zYWZlICYgTFNNX1VOU0FGRV9OT19ORVdf
UFJJVlMpICYmICF1bmNvbmZpbmVkKGxhYmVsKSAmJgo+IC0JICAgICFjdHgtPm5ucCkKPiAtCQlj
dHgtPm5ucCA9IGFhX2dldF9sYWJlbChsYWJlbCk7Cj4gLQo+ICAJLyogYnVmZmVyIGZyZWVkIGJl
bG93LCBuYW1lIGlzIHBvaW50ZXIgaW50byBidWZmZXIgKi8KPiAgCWJ1ZmZlciA9IGFhX2dldF9i
dWZmZXIoZmFsc2UpOwo+ICAJaWYgKCFidWZmZXIpIHsKPiBAQCAtOTE1LDcgKzkwNCw3IEBAIGlu
dCBhcHBhcm1vcl9icHJtX2NyZWRzX2Zvcl9leGVjKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0p
Cj4gIAkgKi8KPiAgCWlmICgoYnBybS0+dW5zYWZlICYgTFNNX1VOU0FGRV9OT19ORVdfUFJJVlMp
ICYmCj4gIAkgICAgIXVuY29uZmluZWQobGFiZWwpICYmCj4gLQkgICAgIWFhX2xhYmVsX2lzX3Vu
Y29uZmluZWRfc3Vic2V0KG5ldywgY3R4LT5ubnApKSB7Cj4gKwkgICAgIWFhX2xhYmVsX2lzX3Vu
Y29uZmluZWRfc3Vic2V0KG5ldywgbGFiZWwpKSB7Cj4gIAkJZXJyb3IgPSAtRVBFUk07Cj4gIAkJ
aW5mbyA9ICJubyBuZXcgcHJpdnMiOwo+ICAJCWdvdG8gYXVkaXQ7Cj4gQEAgLTExNTgsMTYgKzEx
NDcsNiBAQCBpbnQgYWFfY2hhbmdlX2hhdChjb25zdCBjaGFyICpoYXRzW10sIGludCBjb3VudCwg
dTY0IHRva2VuLCBpbnQgZmxhZ3MpCj4gIAlsYWJlbCA9IGFhX2dldF9uZXdlc3RfY3JlZF9sYWJl
bChjcmVkKTsKPiAgCXByZXZpb3VzID0gYWFfZ2V0X25ld2VzdF9sYWJlbChjdHgtPnByZXZpb3Vz
KTsKPiAgCj4gLQkvKgo+IC0JICogRGV0ZWN0IG5vIG5ldyBwcml2cyBiZWluZyBzZXQsIGFuZCBz
dG9yZSB0aGUgbGFiZWwgaXQKPiAtCSAqIG9jY3VycmVkIHVuZGVyLiBJZGVhbGx5IHRoaXMgd291
bGQgaGFwcGVuIHdoZW4gbm5wCj4gLQkgKiBpcyBzZXQgYnV0IHRoZXJlIGlzbid0IGEgZ29vZCB3
YXkgdG8gZG8gdGhhdCB5ZXQuCj4gLQkgKgo+IC0JICogVGVzdGluZyBmb3IgdW5jb25maW5lZCBt
dXN0IGJlIGRvbmUgYmVmb3JlIHRoZSBzdWJzZXQgdGVzdAo+IC0JICovCj4gLQlpZiAodGFza19u
b19uZXdfcHJpdnMoY3VycmVudCkgJiYgIXVuY29uZmluZWQobGFiZWwpICYmICFjdHgtPm5ucCkK
PiAtCQljdHgtPm5ucCA9IGFhX2dldF9sYWJlbChsYWJlbCk7Cj4gLQo+ICAJaWYgKHVuY29uZmlu
ZWQobGFiZWwpKSB7Cj4gIAkJaW5mbyA9ICJ1bmNvbmZpbmVkIGNhbiBub3QgY2hhbmdlX2hhdCI7
Cj4gIAkJZXJyb3IgPSAtRVBFUk07Cj4gQEAgLTExOTMsNyArMTE3Miw3IEBAIGludCBhYV9jaGFu
Z2VfaGF0KGNvbnN0IGNoYXIgKmhhdHNbXSwgaW50IGNvdW50LCB1NjQgdG9rZW4sIGludCBmbGFn
cykKPiAgCQkgKiByZWR1Y2UgcmVzdHJpY3Rpb25zLgo+ICAJCSAqLwo+ICAJCWlmICh0YXNrX25v
X25ld19wcml2cyhjdXJyZW50KSAmJiAhdW5jb25maW5lZChsYWJlbCkgJiYKPiAtCQkgICAgIWFh
X2xhYmVsX2lzX3VuY29uZmluZWRfc3Vic2V0KG5ldywgY3R4LT5ubnApKSB7Cj4gKwkJICAgICFh
YV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNldChuZXcsIGxhYmVsKSkgewo+ICAJCQkvKiBub3Qg
YW4gYXBwYXJtb3IgZGVuaWFsIHBlciBzZSwgc28gZG9uJ3QgbG9nIGl0ICovCj4gIAkJCUFBX0RF
QlVHKCJub19uZXdfcHJpdnMgLSBjaGFuZ2VfaGF0IGRlbmllZCIpOwo+ICAJCQllcnJvciA9IC1F
UEVSTTsKPiBAQCAtMTIxNCw3ICsxMTkzLDcgQEAgaW50IGFhX2NoYW5nZV9oYXQoY29uc3QgY2hh
ciAqaGF0c1tdLCBpbnQgY291bnQsIHU2NCB0b2tlbiwgaW50IGZsYWdzKQo+ICAJCSAqIHJlZHVj
ZSByZXN0cmljdGlvbnMuCj4gIAkJICovCj4gIAkJaWYgKHRhc2tfbm9fbmV3X3ByaXZzKGN1cnJl
bnQpICYmICF1bmNvbmZpbmVkKGxhYmVsKSAmJgo+IC0JCSAgICAhYWFfbGFiZWxfaXNfdW5jb25m
aW5lZF9zdWJzZXQocHJldmlvdXMsIGN0eC0+bm5wKSkgewo+ICsJCSAgICAhYWFfbGFiZWxfaXNf
dW5jb25maW5lZF9zdWJzZXQocHJldmlvdXMsIGxhYmVsKSkgewo+ICAJCQkvKiBub3QgYW4gYXBw
YXJtb3IgZGVuaWFsIHBlciBzZSwgc28gZG9uJ3QgbG9nIGl0ICovCj4gIAkJCUFBX0RFQlVHKCJu
b19uZXdfcHJpdnMgLSBjaGFuZ2VfaGF0IGRlbmllZCIpOwo+ICAJCQllcnJvciA9IC1FUEVSTTsK
PiBAQCAtMTMwMywxNiArMTI4Miw2IEBAIGludCBhYV9jaGFuZ2VfcHJvZmlsZShjb25zdCBjaGFy
ICpmcW5hbWUsIGludCBmbGFncykKPiAgCj4gIAlsYWJlbCA9IGFhX2dldF9jdXJyZW50X2xhYmVs
KCk7Cj4gIAo+IC0JLyoKPiAtCSAqIERldGVjdCBubyBuZXcgcHJpdnMgYmVpbmcgc2V0LCBhbmQg
c3RvcmUgdGhlIGxhYmVsIGl0Cj4gLQkgKiBvY2N1cnJlZCB1bmRlci4gSWRlYWxseSB0aGlzIHdv
dWxkIGhhcHBlbiB3aGVuIG5ucAo+IC0JICogaXMgc2V0IGJ1dCB0aGVyZSBpc24ndCBhIGdvb2Qg
d2F5IHRvIGRvIHRoYXQgeWV0Lgo+IC0JICoKPiAtCSAqIFRlc3RpbmcgZm9yIHVuY29uZmluZWQg
bXVzdCBiZSBkb25lIGJlZm9yZSB0aGUgc3Vic2V0IHRlc3QKPiAtCSAqLwo+IC0JaWYgKHRhc2tf
bm9fbmV3X3ByaXZzKGN1cnJlbnQpICYmICF1bmNvbmZpbmVkKGxhYmVsKSAmJiAhY3R4LT5ubnAp
Cj4gLQkJY3R4LT5ubnAgPSBhYV9nZXRfbGFiZWwobGFiZWwpOwo+IC0KPiAgCWlmICghZnFuYW1l
IHx8ICEqZnFuYW1lKSB7Cj4gIAkJYWFfcHV0X2xhYmVsKGxhYmVsKTsKPiAgCQlBQV9ERUJVRygi
bm8gcHJvZmlsZSBuYW1lIik7Cj4gQEAgLTE0MDksNyArMTM3OCw3IEBAIGludCBhYV9jaGFuZ2Vf
cHJvZmlsZShjb25zdCBjaGFyICpmcW5hbWUsIGludCBmbGFncykKPiAgCQkgKiByZWR1Y2UgcmVz
dHJpY3Rpb25zLgo+ICAJCSAqLwo+ICAJCWlmICh0YXNrX25vX25ld19wcml2cyhjdXJyZW50KSAm
JiAhdW5jb25maW5lZChsYWJlbCkgJiYKPiAtCQkgICAgIWFhX2xhYmVsX2lzX3VuY29uZmluZWRf
c3Vic2V0KG5ldywgY3R4LT5ubnApKSB7Cj4gKwkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVk
X3N1YnNldChuZXcsIGxhYmVsKSkgewo+ICAJCQkvKiBub3QgYW4gYXBwYXJtb3IgZGVuaWFsIHBl
ciBzZSwgc28gZG9uJ3QgbG9nIGl0ICovCj4gIAkJCUFBX0RFQlVHKCJub19uZXdfcHJpdnMgLSBj
aGFuZ2VfaGF0IGRlbmllZCIpOwo+ICAJCQllcnJvciA9IC1FUEVSTTsKPiBkaWZmIC0tZ2l0IGEv
c2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmggYi9zZWN1cml0eS9hcHBhcm1vci9pbmNs
dWRlL3Rhc2suaAo+IGluZGV4IGYxM2QxMjM3M2IyNS4uOGE5YzI1OGUyMDE4IDEwMDY0NAo+IC0t
LSBhL3NlY3VyaXR5L2FwcGFybW9yL2luY2x1ZGUvdGFzay5oCj4gKysrIGIvc2VjdXJpdHkvYXBw
YXJtb3IvaW5jbHVkZS90YXNrLmgKPiBAQCAtMTcsMTMgKzE3LDExIEBAIHN0YXRpYyBpbmxpbmUg
c3RydWN0IGFhX3Rhc2tfY3R4ICp0YXNrX2N0eChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCj4g
IAo+ICAvKgo+ICAgKiBzdHJ1Y3QgYWFfdGFza19jdHggLSBpbmZvcm1hdGlvbiBmb3IgY3VycmVu
dCB0YXNrIGxhYmVsIGNoYW5nZQo+IC0gKiBAbm5wOiBzbmFwc2hvdCBvZiBsYWJlbCBhdCB0aW1l
IG9mIG5vX25ld19wcml2cwo+ICAgKiBAb25leGVjOiBwcm9maWxlIHRvIHRyYW5zaXRpb24gdG8g
b24gbmV4dCBleGVjICAoTUFZIEJFIE5VTEwpCj4gICAqIEBwcmV2aW91czogcHJvZmlsZSB0aGUg
dGFzayBtYXkgcmV0dXJuIHRvICAgICAoTUFZIEJFIE5VTEwpCj4gICAqIEB0b2tlbjogbWFnaWMg
dmFsdWUgdGhlIHRhc2sgbXVzdCBrbm93IGZvciByZXR1cm5pbmcgdG8gQHByZXZpb3VzX3Byb2Zp
bGUKPiAgICovCj4gIHN0cnVjdCBhYV90YXNrX2N0eCB7Cj4gLQlzdHJ1Y3QgYWFfbGFiZWwgKm5u
cDsKPiAgCXN0cnVjdCBhYV9sYWJlbCAqb25leGVjOwo+ICAJc3RydWN0IGFhX2xhYmVsICpwcmV2
aW91czsKPiAgCXU2NCB0b2tlbjsKPiBAQCAtNDIsNyArNDAsNiBAQCBzdHJ1Y3QgYWFfbGFiZWwg
KmFhX2dldF90YXNrX2xhYmVsKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzayk7Cj4gIHN0YXRpYyBp
bmxpbmUgdm9pZCBhYV9mcmVlX3Rhc2tfY3R4KHN0cnVjdCBhYV90YXNrX2N0eCAqY3R4KQo+ICB7
Cj4gIAlpZiAoY3R4KSB7Cj4gLQkJYWFfcHV0X2xhYmVsKGN0eC0+bm5wKTsKPiAgCQlhYV9wdXRf
bGFiZWwoY3R4LT5wcmV2aW91cyk7Cj4gIAkJYWFfcHV0X2xhYmVsKGN0eC0+b25leGVjKTsKPiAg
CX0KPiBAQCAtNTcsNyArNTQsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgYWFfZHVwX3Rhc2tfY3R4
KHN0cnVjdCBhYV90YXNrX2N0eCAqbmV3LAo+ICAJCQkJICAgY29uc3Qgc3RydWN0IGFhX3Rhc2tf
Y3R4ICpvbGQpCj4gIHsKPiAgCSpuZXcgPSAqb2xkOwo+IC0JYWFfZ2V0X2xhYmVsKG5ldy0+bm5w
KTsKPiAgCWFhX2dldF9sYWJlbChuZXctPnByZXZpb3VzKTsKPiAgCWFhX2dldF9sYWJlbChuZXct
Pm9uZXhlYyk7Cj4gIH0KPiBkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJtb3IvdGFzay5jIGIv
c2VjdXJpdHkvYXBwYXJtb3IvdGFzay5jCj4gaW5kZXggZDE3MTMwZWU2Nzk1Li40YjllYzM3MGEx
NzEgMTAwNjQ0Cj4gLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvdGFzay5jCj4gKysrIGIvc2VjdXJp
dHkvYXBwYXJtb3IvdGFzay5jCj4gQEAgLTQxLDcgKzQxLDYgQEAgc3RydWN0IGFhX2xhYmVsICph
YV9nZXRfdGFza19sYWJlbChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCj4gIGludCBhYV9yZXBs
YWNlX2N1cnJlbnRfbGFiZWwoc3RydWN0IGFhX2xhYmVsICpsYWJlbCkKPiAgewo+ICAJc3RydWN0
IGFhX2xhYmVsICpvbGQgPSBhYV9jdXJyZW50X3Jhd19sYWJlbCgpOwo+IC0Jc3RydWN0IGFhX3Rh
c2tfY3R4ICpjdHggPSB0YXNrX2N0eChjdXJyZW50KTsKPiAgCXN0cnVjdCBjcmVkICpuZXc7Cj4g
IAo+ICAJQUFfQlVHKCFsYWJlbCk7Cj4gQEAgLTU2LDEyICs1NSw2IEBAIGludCBhYV9yZXBsYWNl
X2N1cnJlbnRfbGFiZWwoc3RydWN0IGFhX2xhYmVsICpsYWJlbCkKPiAgCWlmICghbmV3KQo+ICAJ
CXJldHVybiAtRU5PTUVNOwo+ICAKPiAtCWlmIChjdHgtPm5ucCAmJiBsYWJlbF9pc19zdGFsZShj
dHgtPm5ucCkpIHsKPiAtCQlzdHJ1Y3QgYWFfbGFiZWwgKnRtcCA9IGN0eC0+bm5wOwo+IC0KPiAt
CQljdHgtPm5ucCA9IGFhX2dldF9uZXdlc3RfbGFiZWwodG1wKTsKPiAtCQlhYV9wdXRfbGFiZWwo
dG1wKTsKPiAtCX0KPiAgCWlmICh1bmNvbmZpbmVkKGxhYmVsKSB8fCAobGFiZWxzX25zKG9sZCkg
IT0gbGFiZWxzX25zKGxhYmVsKSkpCj4gIAkJLyoKPiAgCQkgKiBpZiBzd2l0Y2hpbmcgdG8gdW5j
b25maW5lZCBvciBhIGRpZmZlcmVudCBsYWJlbCBuYW1lc3BhY2UKPiAKCgotLSAKQXBwQXJtb3Ig
bWFpbGluZyBsaXN0CkFwcEFybW9yQGxpc3RzLnVidW50dS5jb20KTW9kaWZ5IHNldHRpbmdzIG9y
IHVuc3Vic2NyaWJlIGF0OiBodHRwczovL2xpc3RzLnVidW50dS5jb20vbWFpbG1hbi9saXN0aW5m
by9hcHBhcm1vcgo=
