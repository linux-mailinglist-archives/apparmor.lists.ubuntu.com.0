Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from huckleberry.canonical.com (huckleberry.canonical.com [91.189.94.19])
	by mail.lfdr.de (Postfix) with ESMTPS id BF6232FDBF7
	for <lists+apparmor@lfdr.de>; Wed, 20 Jan 2021 22:39:27 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=huckleberry.canonical.com)
	by huckleberry.canonical.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1l2LCE-0004uX-5I; Wed, 20 Jan 2021 21:39:22 +0000
Received: from out02.mta.xmission.com ([166.70.13.232])
 by huckleberry.canonical.com with esmtps
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <ebiederm@xmission.com>) id 1l2LCC-0004uQ-MR
 for apparmor@lists.ubuntu.com; Wed, 20 Jan 2021 21:39:20 +0000
Received: from in02.mta.xmission.com ([166.70.13.52])
 by out02.mta.xmission.com with esmtps (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2LC9-0034Ap-3R; Wed, 20 Jan 2021 14:39:17 -0700
Received: from ip68-227-160-95.om.om.cox.net ([68.227.160.95]
 helo=x220.xmission.com)
 by in02.mta.xmission.com with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2LC7-00GWBM-Sq; Wed, 20 Jan 2021 14:39:16 -0700
From: ebiederm@xmission.com (Eric W. Biederman)
To: linux-security-module@vger.kernel.org
References: <87lfcn5mfz.fsf@x220.int.ebiederm.org>
Date: Wed, 20 Jan 2021 15:38:05 -0600
In-Reply-To: <87lfcn5mfz.fsf@x220.int.ebiederm.org> (Eric W. Biederman's
 message of "Wed, 20 Jan 2021 15:26:56 -0600")
Message-ID: <87eeif5lxe.fsf@x220.int.ebiederm.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
X-XM-SPF: eid=1l2LC7-00GWBM-Sq; ; ; mid=<87eeif5lxe.fsf@x220.int.ebiederm.org>;
 ; ; hst=in02.mta.xmission.com; ; ; ip=68.227.160.95; ; ;
 frm=ebiederm@xmission.com; ; ; spf=neutral
X-XM-AID: U2FsdGVkX19JxT8+vqmhKq7/a7+VJ6sST9427zsCsPM=
X-SA-Exim-Connect-IP: 68.227.160.95
X-SA-Exim-Mail-From: ebiederm@xmission.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on sa01.xmission.com
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=8.0 tests=ALL_TRUSTED,BAYES_50,
 DCC_CHECK_NEGATIVE,TR_Symld_Words,T_TM2_M_HEADER_IN_MSG,XMSubLong
 autolearn=disabled version=3.4.2
X-Spam-Virus: No
X-Spam-Report: * -1.0 ALL_TRUSTED Passed through trusted hosts only via SMTP
 *  0.8 BAYES_50 BODY: Bayes spam probability is 40 to 60%
 *      [score: 0.5000] *  0.7 XMSubLong Long Subject
 *  1.5 TR_Symld_Words too many words that have symbols inside
 *  0.0 T_TM2_M_HEADER_IN_MSG BODY: No description available.
 * -0.0 DCC_CHECK_NEGATIVE Not listed in DCC
 *      [sa01 1397; Body=1 Fuz1=1 Fuz2=1]
X-Spam-DCC: XMission; sa01 1397; Body=1 Fuz1=1 Fuz2=1 
X-Spam-Combo: **;linux-security-module@vger.kernel.org
X-Spam-Relay-Country: 
X-Spam-Timing: total 654 ms - load_scoreonly_sql: 0.04 (0.0%),
 signal_user_changed: 4.4 (0.7%), b_tie_ro: 3.0 (0.5%), parse: 1.40
 (0.2%), extract_message_metadata: 13 (2.0%), get_uri_detail_list: 4.7
 (0.7%), tests_pri_-1000: 10 (1.6%), tests_pri_-950: 1.02 (0.2%),
 tests_pri_-900: 0.80 (0.1%), tests_pri_-90: 89 (13.6%), check_bayes:
 87 (13.4%), b_tokenize: 12 (1.9%), b_tok_get_all: 12 (1.8%),
 b_comp_prob: 3.5 (0.5%), b_tok_touch_all: 57 (8.7%), b_finish: 0.75
 (0.1%), tests_pri_0: 524 (80.1%), check_dkim_signature: 0.46 (0.1%),
 check_dkim_adsp: 2.3 (0.4%), poll_dns_idle: 1.02 (0.2%), tests_pri_10:
 1.68 (0.3%), tests_pri_500: 5 (0.8%), rewrite_mail: 0.00 (0.0%)
X-SA-Exim-Version: 4.2.1 (built Sat, 08 Feb 2020 21:53:50 +0000)
X-SA-Exim-Scanned: Yes (on in02.mta.xmission.com)
Subject: Re: [apparmor] [RFC][PATCH] apparmor: Enforce progressively tighter
	permissions for no_new_privs
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Cc: Kees Cook <keescook@chromium.org>, apparmor@lists.ubuntu.com,
 linux-kernel@vger.kernel.org, James Morris <jmorris@namei.org>,
 Andy Lutomirski <luto@amacapital.net>,
 Linus Torvalds <torvalds@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>

ClRoaXMgc2hvdWxkIG5vdyBDYyB0aGUgY29ycmVjdCBlbWFpbCBhZGRyZXNzIGZvciBKYW1lcyBN
b3JyaXMuCgplYmllZGVybUB4bWlzc2lvbi5jb20gKEVyaWMgVy4gQmllZGVybWFuKSB3cml0ZXM6
Cgo+IFRoZSBjdXJyZW50IHVuZGVyc3RhbmRpbmcgb2YgYXBwYXJtb3Igd2l0aCByZXNwZWN0IHRv
IG5vX25ld19wcml2cyBpcyBhdAo+IG9kZHMgd2l0aCBob3cgbm9fbmV3X3ByaXZzIGlzIGltcGxl
bWVudGVkIGFuZCB1bmRlcnN0b29kIGJ5IHRoZSByZXN0IG9mCj4gdGhlIGtlcm5lbC4KPgo+IFRo
ZSBkb2N1bWVudGF0aW9uIG9mIG5vX25ld19wcml2cyBzdGF0ZXM6Cj4+IFdpdGggYGBub19uZXdf
cHJpdnNgYCBzZXQsIGBgZXhlY3ZlKClgYCBwcm9taXNlcyBub3QgdG8gZ3JhbnQgdGhlCj4+IHBy
aXZpbGVnZSB0byBkbyBhbnl0aGluZyB0aGF0IGNvdWxkIG5vdCBoYXZlIGJlZW4gZG9uZSB3aXRo
b3V0IHRoZQo+PiBleGVjdmUgY2FsbC4KPgo+IEFuZCByZWFkaW5nIHRocm91Z2ggdGhlIGtlcm5l
bCBleGNlcHQgZm9yIGFwcGFybW9yIHRoYXQgZGVzY3JpcHRpb24KPiBtYXRjaGVzIHdoYXQgaXMg
aW1wbGVtZW50ZWQuCj4KPiBUaGVyZSBhcmUgdHdvIG1ham9yIGRpdmVyZ2VuY2VzIG9mIGFwcGFy
bW9yIGZyb20gdGhpcyBkZWZpbml0aW9uOgo+IC0gcHJvY19zZXRhdHRyIGVuZm9yY2VzIGxpbWl0
YXRpb25zIHdoZW4gbm9fbmV3X3ByaXZzIGFyZSBzZXQuCj4gLSB0aGUgbGltaXRhdGlvbiBpcyBl
bmZvcmNlZCBmcm9tIHRoZSBhcHBhcmVudCB0aW1lIHdoZW4gbm9fbmV3X3ByaXZzIGlzCj4gICBz
ZXQgaW5zdGVhZCBvZiBndWFyYW50ZWVpbmcgdGhhdCBlYWNoIGV4ZWN2ZSBoYXMgcHJvZ3Jlc3Np
dmVseSBtb3JlCj4gICBuYXJyb3cgcGVybWlzc2lvbnMuCj4KPiBUaGUgY29kZSBpbiBhcHBhcm1v
ciB0aGF0IGF0dGVtcHRzIHRvIGRpc2NvdmVyIHRoZSBhcHBhcm1vciBsYWJlbCBhdCB0aGUKPiBw
b2ludCB3aGVyZSBub19uZXdfcHJpdnMgaXMgc2V0IGlzIG5vdCByb2J1c3QuICBUaGUgY2FwdHVy
ZSBoYXBwZW5zIGEKPiBsb25nIHRpbWUgYWZ0ZXIgbm9fbmV3X3ByaXZzIGlzIHNldC4KPgo+IENh
cHR1cmluZyB0aGUgbGFiZWwgYXQgdGhlIHBvaW50IHdoZXJlIG5vX25ld19wcml2cyBpcyBzZXQg
aXMKPiBwcmFjdGljYWxseSBpbXBvc3NpYmxlIHRvIGltcGxlbWVudCByb2J1c3RseS4gIFRvZGF5
IHRoZSBydWxlIGlzIHN0cnVjdAo+IGNyZWQgY2FuIG9ubHkgYmUgY2hhbmdlZCBieSBpdCdzIGN1
cnJlbnQgdGFzay4gIFRvZGF5Cj4gU0VDQ09NUF9GSUxURVJfRkxBR19UU1lOQyBzZXRzIG5vX25l
d19wcml2cyBmcm9tIGFub3RoZXIgdGhyZWFkLiAgQQo+IHJvYnVzdCBpbXBsZW1lbnRhdGlvbiB3
b3VsZCByZXF1aXJlIGNoYW5naW5nIHNvbWV0aGluZyBmdW5kYW1lbnRhbCBpbgo+IGhvdyBjcmVk
cyBhcmUgbWFuYWdlZCBmb3IgU0VDQ09NUF9GSUxURVJfRkxBR19UU1lOQyB0byBiZSBhYmxlIHRv
Cj4gY2FwdHVyZSB0aGUgY3JlZCBhdCB0aGUgcG9pbnQgaXQgaXMgc2V0Lgo+Cj4gRnV0aGVybW9y
ZSBnaXZlbiB0aGUgY29uc2lzdGVudCBkb2N1bWVudGF0aW9uIGFuZCBob3cgZXZlcnl0aGluZyBl
bHNlCj4gaW1wbGVtZW50cyBub19uZXdfcHJpdnMsIG5vdCBoYXZpbmcgdGhlIHBlcm1pc3Npb25z
IGdldCBwcm9ncmVzc2l2ZWx5Cj4gdGlnaHRlciBpcyBhIGZvb3RndW4gYWltZWQgYXQgdXNlcnNw
YWNlLiAgSSBmdWxseSBleHBlY3QgaXQgdG8gYnJlYWsgYW55Cj4gc2VjdXJpdHkgc2Vuc2l0aXZl
IHNvZnR3YXJlIHRoYXQgdXNlcyBub19uZXdfcHJpdnMgYW5kIHdhcyBub3QKPiBkZWxpYmVyYXRl
bHkgZGVzaWduZWQgYW5kIHRlc3RlZCBhZ2FpbnN0IGFwcGFybW9yLgo+Cj4gQXZvaWQgdGhlIHF1
ZXN0aW9uYWJsZSBhbmQgaGFyZCB0byBmaXggaW1wbGVtZW50YXRpb24gYW5kIHRoZQo+IHBvdGVu
dGlhbCB0byBjb25mdXNlIHVzZXJzcGFjZSBieSBoYXZpbmcgbm9fbmV3X3ByaXZzIGVuZm9yY2UK
PiBwcm9ncmVzc2ludmVseSB0aWdodGVyIHBlcm1pc3Npb25zLgo+Cj4gRml4ZXM6IDlmY2Y3OGNj
YTE5OCAoImFwcGFybW9yOiB1cGRhdGUgZG9tYWluIHRyYW5zaXRpb25zIHRoYXQgYXJlIHN1YnNl
dHMgb2YgY29uZmluZW1lbnQgYXQgbm5wIikKPiBTaWduZWQtb2ZmLWJ5OiBFcmljIFcuIEJpZWRl
cm1hbiA8ZWJpZWRlcm1AeG1pc3Npb24uY29tPgo+IC0tLQo+Cj4gSSBjYW1lIGFjY3Jvc3MgdGhp
cyB3aGlsZSBleGFtaW5pbmcgdGhlIHBsYWNlcyBjcmVkX2d1YXJkX211dGV4IGlzCj4gdXNlZCBh
bmQgdHJ5aW5nIHRvIGZpbmQgYSB3YXkgdG8gbWFrZSB0aG9zZSBjb2RlIHBhdGhzIGxlc3MgaW5z
YW5lLgo+Cj4gSWYgaXQgd291bGQgYmUgbW9yZSBwYWxsYXRhYmxlIEkgd291bGQgbm90IG1pbmQg
cmVtb3ZpbmcgdGhlCj4gdGFza19ub19uZXdfcHJpdnMgdGVzdCBlbnRpcmVseSBmcm9tIGFhX2No
YW5nZV9oYXQgYW5kIGFhX2NoYW5nZV9wcm9maWxlCj4gYXMgdGhvc2UgYXJlIG5vdCBwYXJ0IG9m
IGV4ZWMsIHNvIGFyZ3VhYmx5IG5vX25ld19wcml2cyBzaG91bGQgbm90IGNhcmUKPiBhYm91dCB0
aGVtIGF0IGFsbC4KPgo+IENhbiB3ZSBwbGVhc2UgZ2V0IHJpZCBvZiB0aGUgaHVnZSBzZW1hbnRp
YyB3YXJ0IGFuZCBwYWluIGluIHRoZSBpbXBsZW1lbnRhdGlvbj8KPgo+ICBzZWN1cml0eS9hcHBh
cm1vci9kb21haW4uYyAgICAgICB8IDM5ICsrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
Cj4gIHNlY3VyaXR5L2FwcGFybW9yL2luY2x1ZGUvdGFzay5oIHwgIDQgLS0tLQo+ICBzZWN1cml0
eS9hcHBhcm1vci90YXNrLmMgICAgICAgICB8ICA3IC0tLS0tLQo+ICAzIGZpbGVzIGNoYW5nZWQs
IDQgaW5zZXJ0aW9ucygrKSwgNDYgZGVsZXRpb25zKC0pCj4KPiBkaWZmIC0tZ2l0IGEvc2VjdXJp
dHkvYXBwYXJtb3IvZG9tYWluLmMgYi9zZWN1cml0eS9hcHBhcm1vci9kb21haW4uYwo+IGluZGV4
IGY5MTllYmQwNDJmZC4uOGY3NzA1OWJmODkwIDEwMDY0NAo+IC0tLSBhL3NlY3VyaXR5L2FwcGFy
bW9yL2RvbWFpbi5jCj4gKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvZG9tYWluLmMKPiBAQCAtODY5
LDE3ICs4NjksNiBAQCBpbnQgYXBwYXJtb3JfYnBybV9jcmVkc19mb3JfZXhlYyhzdHJ1Y3QgbGlu
dXhfYmlucHJtICpicHJtKQo+ICAKPiAgCWxhYmVsID0gYWFfZ2V0X25ld2VzdF9sYWJlbChjcmVk
X2xhYmVsKGJwcm0tPmNyZWQpKTsKPiAgCj4gLQkvKgo+IC0JICogRGV0ZWN0IG5vIG5ldyBwcml2
cyBiZWluZyBzZXQsIGFuZCBzdG9yZSB0aGUgbGFiZWwgaXQKPiAtCSAqIG9jY3VycmVkIHVuZGVy
LiBJZGVhbGx5IHRoaXMgd291bGQgaGFwcGVuIHdoZW4gbm5wCj4gLQkgKiBpcyBzZXQgYnV0IHRo
ZXJlIGlzbid0IGEgZ29vZCB3YXkgdG8gZG8gdGhhdCB5ZXQuCj4gLQkgKgo+IC0JICogVGVzdGlu
ZyBmb3IgdW5jb25maW5lZCBtdXN0IGJlIGRvbmUgYmVmb3JlIHRoZSBzdWJzZXQgdGVzdAo+IC0J
ICovCj4gLQlpZiAoKGJwcm0tPnVuc2FmZSAmIExTTV9VTlNBRkVfTk9fTkVXX1BSSVZTKSAmJiAh
dW5jb25maW5lZChsYWJlbCkgJiYKPiAtCSAgICAhY3R4LT5ubnApCj4gLQkJY3R4LT5ubnAgPSBh
YV9nZXRfbGFiZWwobGFiZWwpOwo+IC0KPiAgCS8qIGJ1ZmZlciBmcmVlZCBiZWxvdywgbmFtZSBp
cyBwb2ludGVyIGludG8gYnVmZmVyICovCj4gIAlidWZmZXIgPSBhYV9nZXRfYnVmZmVyKGZhbHNl
KTsKPiAgCWlmICghYnVmZmVyKSB7Cj4gQEAgLTkxNSw3ICs5MDQsNyBAQCBpbnQgYXBwYXJtb3Jf
YnBybV9jcmVkc19mb3JfZXhlYyhzdHJ1Y3QgbGludXhfYmlucHJtICpicHJtKQo+ICAJICovCj4g
IAlpZiAoKGJwcm0tPnVuc2FmZSAmIExTTV9VTlNBRkVfTk9fTkVXX1BSSVZTKSAmJgo+ICAJICAg
ICF1bmNvbmZpbmVkKGxhYmVsKSAmJgo+IC0JICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1
YnNldChuZXcsIGN0eC0+bm5wKSkgewo+ICsJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1
YnNldChuZXcsIGxhYmVsKSkgewo+ICAJCWVycm9yID0gLUVQRVJNOwo+ICAJCWluZm8gPSAibm8g
bmV3IHByaXZzIjsKPiAgCQlnb3RvIGF1ZGl0Owo+IEBAIC0xMTU4LDE2ICsxMTQ3LDYgQEAgaW50
IGFhX2NoYW5nZV9oYXQoY29uc3QgY2hhciAqaGF0c1tdLCBpbnQgY291bnQsIHU2NCB0b2tlbiwg
aW50IGZsYWdzKQo+ICAJbGFiZWwgPSBhYV9nZXRfbmV3ZXN0X2NyZWRfbGFiZWwoY3JlZCk7Cj4g
IAlwcmV2aW91cyA9IGFhX2dldF9uZXdlc3RfbGFiZWwoY3R4LT5wcmV2aW91cyk7Cj4gIAo+IC0J
LyoKPiAtCSAqIERldGVjdCBubyBuZXcgcHJpdnMgYmVpbmcgc2V0LCBhbmQgc3RvcmUgdGhlIGxh
YmVsIGl0Cj4gLQkgKiBvY2N1cnJlZCB1bmRlci4gSWRlYWxseSB0aGlzIHdvdWxkIGhhcHBlbiB3
aGVuIG5ucAo+IC0JICogaXMgc2V0IGJ1dCB0aGVyZSBpc24ndCBhIGdvb2Qgd2F5IHRvIGRvIHRo
YXQgeWV0Lgo+IC0JICoKPiAtCSAqIFRlc3RpbmcgZm9yIHVuY29uZmluZWQgbXVzdCBiZSBkb25l
IGJlZm9yZSB0aGUgc3Vic2V0IHRlc3QKPiAtCSAqLwo+IC0JaWYgKHRhc2tfbm9fbmV3X3ByaXZz
KGN1cnJlbnQpICYmICF1bmNvbmZpbmVkKGxhYmVsKSAmJiAhY3R4LT5ubnApCj4gLQkJY3R4LT5u
bnAgPSBhYV9nZXRfbGFiZWwobGFiZWwpOwo+IC0KPiAgCWlmICh1bmNvbmZpbmVkKGxhYmVsKSkg
ewo+ICAJCWluZm8gPSAidW5jb25maW5lZCBjYW4gbm90IGNoYW5nZV9oYXQiOwo+ICAJCWVycm9y
ID0gLUVQRVJNOwo+IEBAIC0xMTkzLDcgKzExNzIsNyBAQCBpbnQgYWFfY2hhbmdlX2hhdChjb25z
dCBjaGFyICpoYXRzW10sIGludCBjb3VudCwgdTY0IHRva2VuLCBpbnQgZmxhZ3MpCj4gIAkJICog
cmVkdWNlIHJlc3RyaWN0aW9ucy4KPiAgCQkgKi8KPiAgCQlpZiAodGFza19ub19uZXdfcHJpdnMo
Y3VycmVudCkgJiYgIXVuY29uZmluZWQobGFiZWwpICYmCj4gLQkJICAgICFhYV9sYWJlbF9pc191
bmNvbmZpbmVkX3N1YnNldChuZXcsIGN0eC0+bm5wKSkgewo+ICsJCSAgICAhYWFfbGFiZWxfaXNf
dW5jb25maW5lZF9zdWJzZXQobmV3LCBsYWJlbCkpIHsKPiAgCQkJLyogbm90IGFuIGFwcGFybW9y
IGRlbmlhbCBwZXIgc2UsIHNvIGRvbid0IGxvZyBpdCAqLwo+ICAJCQlBQV9ERUJVRygibm9fbmV3
X3ByaXZzIC0gY2hhbmdlX2hhdCBkZW5pZWQiKTsKPiAgCQkJZXJyb3IgPSAtRVBFUk07Cj4gQEAg
LTEyMTQsNyArMTE5Myw3IEBAIGludCBhYV9jaGFuZ2VfaGF0KGNvbnN0IGNoYXIgKmhhdHNbXSwg
aW50IGNvdW50LCB1NjQgdG9rZW4sIGludCBmbGFncykKPiAgCQkgKiByZWR1Y2UgcmVzdHJpY3Rp
b25zLgo+ICAJCSAqLwo+ICAJCWlmICh0YXNrX25vX25ld19wcml2cyhjdXJyZW50KSAmJiAhdW5j
b25maW5lZChsYWJlbCkgJiYKPiAtCQkgICAgIWFhX2xhYmVsX2lzX3VuY29uZmluZWRfc3Vic2V0
KHByZXZpb3VzLCBjdHgtPm5ucCkpIHsKPiArCQkgICAgIWFhX2xhYmVsX2lzX3VuY29uZmluZWRf
c3Vic2V0KHByZXZpb3VzLCBsYWJlbCkpIHsKPiAgCQkJLyogbm90IGFuIGFwcGFybW9yIGRlbmlh
bCBwZXIgc2UsIHNvIGRvbid0IGxvZyBpdCAqLwo+ICAJCQlBQV9ERUJVRygibm9fbmV3X3ByaXZz
IC0gY2hhbmdlX2hhdCBkZW5pZWQiKTsKPiAgCQkJZXJyb3IgPSAtRVBFUk07Cj4gQEAgLTEzMDMs
MTYgKzEyODIsNiBAQCBpbnQgYWFfY2hhbmdlX3Byb2ZpbGUoY29uc3QgY2hhciAqZnFuYW1lLCBp
bnQgZmxhZ3MpCj4gIAo+ICAJbGFiZWwgPSBhYV9nZXRfY3VycmVudF9sYWJlbCgpOwo+ICAKPiAt
CS8qCj4gLQkgKiBEZXRlY3Qgbm8gbmV3IHByaXZzIGJlaW5nIHNldCwgYW5kIHN0b3JlIHRoZSBs
YWJlbCBpdAo+IC0JICogb2NjdXJyZWQgdW5kZXIuIElkZWFsbHkgdGhpcyB3b3VsZCBoYXBwZW4g
d2hlbiBubnAKPiAtCSAqIGlzIHNldCBidXQgdGhlcmUgaXNuJ3QgYSBnb29kIHdheSB0byBkbyB0
aGF0IHlldC4KPiAtCSAqCj4gLQkgKiBUZXN0aW5nIGZvciB1bmNvbmZpbmVkIG11c3QgYmUgZG9u
ZSBiZWZvcmUgdGhlIHN1YnNldCB0ZXN0Cj4gLQkgKi8KPiAtCWlmICh0YXNrX25vX25ld19wcml2
cyhjdXJyZW50KSAmJiAhdW5jb25maW5lZChsYWJlbCkgJiYgIWN0eC0+bm5wKQo+IC0JCWN0eC0+
bm5wID0gYWFfZ2V0X2xhYmVsKGxhYmVsKTsKPiAtCj4gIAlpZiAoIWZxbmFtZSB8fCAhKmZxbmFt
ZSkgewo+ICAJCWFhX3B1dF9sYWJlbChsYWJlbCk7Cj4gIAkJQUFfREVCVUcoIm5vIHByb2ZpbGUg
bmFtZSIpOwo+IEBAIC0xNDA5LDcgKzEzNzgsNyBAQCBpbnQgYWFfY2hhbmdlX3Byb2ZpbGUoY29u
c3QgY2hhciAqZnFuYW1lLCBpbnQgZmxhZ3MpCj4gIAkJICogcmVkdWNlIHJlc3RyaWN0aW9ucy4K
PiAgCQkgKi8KPiAgCQlpZiAodGFza19ub19uZXdfcHJpdnMoY3VycmVudCkgJiYgIXVuY29uZmlu
ZWQobGFiZWwpICYmCj4gLQkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNldChuZXcs
IGN0eC0+bm5wKSkgewo+ICsJCSAgICAhYWFfbGFiZWxfaXNfdW5jb25maW5lZF9zdWJzZXQobmV3
LCBsYWJlbCkpIHsKPiAgCQkJLyogbm90IGFuIGFwcGFybW9yIGRlbmlhbCBwZXIgc2UsIHNvIGRv
bid0IGxvZyBpdCAqLwo+ICAJCQlBQV9ERUJVRygibm9fbmV3X3ByaXZzIC0gY2hhbmdlX2hhdCBk
ZW5pZWQiKTsKPiAgCQkJZXJyb3IgPSAtRVBFUk07Cj4gZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2Fw
cGFybW9yL2luY2x1ZGUvdGFzay5oIGIvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmgK
PiBpbmRleCBmMTNkMTIzNzNiMjUuLjhhOWMyNThlMjAxOCAxMDA2NDQKPiAtLS0gYS9zZWN1cml0
eS9hcHBhcm1vci9pbmNsdWRlL3Rhc2suaAo+ICsrKyBiL3NlY3VyaXR5L2FwcGFybW9yL2luY2x1
ZGUvdGFzay5oCj4gQEAgLTE3LDEzICsxNywxMSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBhYV90
YXNrX2N0eCAqdGFza19jdHgoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQo+ICAKPiAgLyoKPiAg
ICogc3RydWN0IGFhX3Rhc2tfY3R4IC0gaW5mb3JtYXRpb24gZm9yIGN1cnJlbnQgdGFzayBsYWJl
bCBjaGFuZ2UKPiAtICogQG5ucDogc25hcHNob3Qgb2YgbGFiZWwgYXQgdGltZSBvZiBub19uZXdf
cHJpdnMKPiAgICogQG9uZXhlYzogcHJvZmlsZSB0byB0cmFuc2l0aW9uIHRvIG9uIG5leHQgZXhl
YyAgKE1BWSBCRSBOVUxMKQo+ICAgKiBAcHJldmlvdXM6IHByb2ZpbGUgdGhlIHRhc2sgbWF5IHJl
dHVybiB0byAgICAgKE1BWSBCRSBOVUxMKQo+ICAgKiBAdG9rZW46IG1hZ2ljIHZhbHVlIHRoZSB0
YXNrIG11c3Qga25vdyBmb3IgcmV0dXJuaW5nIHRvIEBwcmV2aW91c19wcm9maWxlCj4gICAqLwo+
ICBzdHJ1Y3QgYWFfdGFza19jdHggewo+IC0Jc3RydWN0IGFhX2xhYmVsICpubnA7Cj4gIAlzdHJ1
Y3QgYWFfbGFiZWwgKm9uZXhlYzsKPiAgCXN0cnVjdCBhYV9sYWJlbCAqcHJldmlvdXM7Cj4gIAl1
NjQgdG9rZW47Cj4gQEAgLTQyLDcgKzQwLDYgQEAgc3RydWN0IGFhX2xhYmVsICphYV9nZXRfdGFz
a19sYWJlbChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spOwo+ICBzdGF0aWMgaW5saW5lIHZvaWQg
YWFfZnJlZV90YXNrX2N0eChzdHJ1Y3QgYWFfdGFza19jdHggKmN0eCkKPiAgewo+ICAJaWYgKGN0
eCkgewo+IC0JCWFhX3B1dF9sYWJlbChjdHgtPm5ucCk7Cj4gIAkJYWFfcHV0X2xhYmVsKGN0eC0+
cHJldmlvdXMpOwo+ICAJCWFhX3B1dF9sYWJlbChjdHgtPm9uZXhlYyk7Cj4gIAl9Cj4gQEAgLTU3
LDcgKzU0LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIGFhX2R1cF90YXNrX2N0eChzdHJ1Y3QgYWFf
dGFza19jdHggKm5ldywKPiAgCQkJCSAgIGNvbnN0IHN0cnVjdCBhYV90YXNrX2N0eCAqb2xkKQo+
ICB7Cj4gIAkqbmV3ID0gKm9sZDsKPiAtCWFhX2dldF9sYWJlbChuZXctPm5ucCk7Cj4gIAlhYV9n
ZXRfbGFiZWwobmV3LT5wcmV2aW91cyk7Cj4gIAlhYV9nZXRfbGFiZWwobmV3LT5vbmV4ZWMpOwo+
ICB9Cj4gZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYyBiL3NlY3VyaXR5L2Fw
cGFybW9yL3Rhc2suYwo+IGluZGV4IGQxNzEzMGVlNjc5NS4uNGI5ZWMzNzBhMTcxIDEwMDY0NAo+
IC0tLSBhL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYwo+ICsrKyBiL3NlY3VyaXR5L2FwcGFybW9y
L3Rhc2suYwo+IEBAIC00MSw3ICs0MSw2IEBAIHN0cnVjdCBhYV9sYWJlbCAqYWFfZ2V0X3Rhc2tf
bGFiZWwoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQo+ICBpbnQgYWFfcmVwbGFjZV9jdXJyZW50
X2xhYmVsKHN0cnVjdCBhYV9sYWJlbCAqbGFiZWwpCj4gIHsKPiAgCXN0cnVjdCBhYV9sYWJlbCAq
b2xkID0gYWFfY3VycmVudF9yYXdfbGFiZWwoKTsKPiAtCXN0cnVjdCBhYV90YXNrX2N0eCAqY3R4
ID0gdGFza19jdHgoY3VycmVudCk7Cj4gIAlzdHJ1Y3QgY3JlZCAqbmV3Owo+ICAKPiAgCUFBX0JV
RyghbGFiZWwpOwo+IEBAIC01NiwxMiArNTUsNiBAQCBpbnQgYWFfcmVwbGFjZV9jdXJyZW50X2xh
YmVsKHN0cnVjdCBhYV9sYWJlbCAqbGFiZWwpCj4gIAlpZiAoIW5ldykKPiAgCQlyZXR1cm4gLUVO
T01FTTsKPiAgCj4gLQlpZiAoY3R4LT5ubnAgJiYgbGFiZWxfaXNfc3RhbGUoY3R4LT5ubnApKSB7
Cj4gLQkJc3RydWN0IGFhX2xhYmVsICp0bXAgPSBjdHgtPm5ucDsKPiAtCj4gLQkJY3R4LT5ubnAg
PSBhYV9nZXRfbmV3ZXN0X2xhYmVsKHRtcCk7Cj4gLQkJYWFfcHV0X2xhYmVsKHRtcCk7Cj4gLQl9
Cj4gIAlpZiAodW5jb25maW5lZChsYWJlbCkgfHwgKGxhYmVsc19ucyhvbGQpICE9IGxhYmVsc19u
cyhsYWJlbCkpKQo+ICAJCS8qCj4gIAkJICogaWYgc3dpdGNoaW5nIHRvIHVuY29uZmluZWQgb3Ig
YSBkaWZmZXJlbnQgbGFiZWwgbmFtZXNwYWNlCgotLSAKQXBwQXJtb3IgbWFpbGluZyBsaXN0CkFw
cEFybW9yQGxpc3RzLnVidW50dS5jb20KTW9kaWZ5IHNldHRpbmdzIG9yIHVuc3Vic2NyaWJlIGF0
OiBodHRwczovL2xpc3RzLnVidW50dS5jb20vbWFpbG1hbi9saXN0aW5mby9hcHBhcm1vcgo=
