Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from huckleberry.canonical.com (huckleberry.canonical.com [91.189.94.19])
	by mail.lfdr.de (Postfix) with ESMTPS id 58AF72FDBD9
	for <lists+apparmor@lfdr.de>; Wed, 20 Jan 2021 22:28:29 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=huckleberry.canonical.com)
	by huckleberry.canonical.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1l2L1T-0004B6-J7; Wed, 20 Jan 2021 21:28:15 +0000
Received: from out02.mta.xmission.com ([166.70.13.232])
 by huckleberry.canonical.com with esmtps
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <ebiederm@xmission.com>) id 1l2L1P-00049z-UL
 for apparmor@lists.ubuntu.com; Wed, 20 Jan 2021 21:28:12 +0000
Received: from in02.mta.xmission.com ([166.70.13.52])
 by out02.mta.xmission.com with esmtps (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2L1M-0033EK-MM; Wed, 20 Jan 2021 14:28:08 -0700
Received: from ip68-227-160-95.om.om.cox.net ([68.227.160.95]
 helo=x220.xmission.com)
 by in02.mta.xmission.com with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2L1L-00GTsr-HM; Wed, 20 Jan 2021 14:28:08 -0700
From: ebiederm@xmission.com (Eric W. Biederman)
To: linux-security-module@vger.kernel.org
Date: Wed, 20 Jan 2021 15:26:56 -0600
Message-ID: <87lfcn5mfz.fsf@x220.int.ebiederm.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
X-XM-SPF: eid=1l2L1L-00GTsr-HM; ; ; mid=<87lfcn5mfz.fsf@x220.int.ebiederm.org>;
 ; ; hst=in02.mta.xmission.com; ; ; ip=68.227.160.95; ; ;
 frm=ebiederm@xmission.com; ; ; spf=neutral
X-XM-AID: U2FsdGVkX19zAIKo2/H39lizTedLFYbGqIxscrEV5Lo=
X-SA-Exim-Connect-IP: 68.227.160.95
X-SA-Exim-Mail-From: ebiederm@xmission.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on sa01.xmission.com
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=8.0 tests=ALL_TRUSTED,BAYES_50,
 DCC_CHECK_NEGATIVE,TR_Symld_Words,T_TM2_M_HEADER_IN_MSG,XMSubLong
 autolearn=disabled version=3.4.2
X-Spam-Virus: No
X-Spam-Report: * -1.0 ALL_TRUSTED Passed through trusted hosts only via SMTP
 *  0.8 BAYES_50 BODY: Bayes spam probability is 40 to 60%
 *      [score: 0.5000] *  0.7 XMSubLong Long Subject
 *  1.5 TR_Symld_Words too many words that have symbols inside
 *  0.0 T_TM2_M_HEADER_IN_MSG BODY: No description available.
 * -0.0 DCC_CHECK_NEGATIVE Not listed in DCC
 *      [sa01 1397; Body=1 Fuz1=1 Fuz2=1]
X-Spam-DCC: XMission; sa01 1397; Body=1 Fuz1=1 Fuz2=1 
X-Spam-Combo: **;linux-security-module@vger.kernel.org
X-Spam-Relay-Country: 
X-Spam-Timing: total 609 ms - load_scoreonly_sql: 0.03 (0.0%),
 signal_user_changed: 3.6 (0.6%), b_tie_ro: 2.4 (0.4%), parse: 1.26
 (0.2%), extract_message_metadata: 16 (2.6%), get_uri_detail_list: 6
 (0.9%), tests_pri_-1000: 15 (2.4%), tests_pri_-950: 1.47 (0.2%),
 tests_pri_-900: 1.13 (0.2%), tests_pri_-90: 63 (10.3%), check_bayes:
 61 (10.1%), b_tokenize: 12 (1.9%), b_tok_get_all: 13 (2.1%),
 b_comp_prob: 4.0 (0.7%), b_tok_touch_all: 30 (5.0%), b_finish: 0.62
 (0.1%), tests_pri_0: 497 (81.6%), check_dkim_signature: 0.44 (0.1%),
 check_dkim_adsp: 2.2 (0.4%), poll_dns_idle: 0.80 (0.1%), tests_pri_10:
 1.71 (0.3%), tests_pri_500: 5 (0.9%), rewrite_mail: 0.00 (0.0%)
X-SA-Exim-Version: 4.2.1 (built Sat, 08 Feb 2020 21:53:50 +0000)
X-SA-Exim-Scanned: Yes (on in02.mta.xmission.com)
Subject: [apparmor] [RFC][PATCH] apparmor: Enforce progressively tighter
	permissions for no_new_privs
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Cc: Kees Cook <keescook@chromium.org>, apparmor@lists.ubuntu.com,
 linux-kernel@vger.kernel.org, Andy Lutomirski <luto@amacapital.net>,
 James Morris <james.l.morris@oracle.com>,
 Linus Torvalds <torvalds@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>

ClRoZSBjdXJyZW50IHVuZGVyc3RhbmRpbmcgb2YgYXBwYXJtb3Igd2l0aCByZXNwZWN0IHRvIG5v
X25ld19wcml2cyBpcyBhdApvZGRzIHdpdGggaG93IG5vX25ld19wcml2cyBpcyBpbXBsZW1lbnRl
ZCBhbmQgdW5kZXJzdG9vZCBieSB0aGUgcmVzdCBvZgp0aGUga2VybmVsLgoKVGhlIGRvY3VtZW50
YXRpb24gb2Ygbm9fbmV3X3ByaXZzIHN0YXRlczoKPiBXaXRoIGBgbm9fbmV3X3ByaXZzYGAgc2V0
LCBgYGV4ZWN2ZSgpYGAgcHJvbWlzZXMgbm90IHRvIGdyYW50IHRoZQo+IHByaXZpbGVnZSB0byBk
byBhbnl0aGluZyB0aGF0IGNvdWxkIG5vdCBoYXZlIGJlZW4gZG9uZSB3aXRob3V0IHRoZQo+IGV4
ZWN2ZSBjYWxsLgoKQW5kIHJlYWRpbmcgdGhyb3VnaCB0aGUga2VybmVsIGV4Y2VwdCBmb3IgYXBw
YXJtb3IgdGhhdCBkZXNjcmlwdGlvbgptYXRjaGVzIHdoYXQgaXMgaW1wbGVtZW50ZWQuCgpUaGVy
ZSBhcmUgdHdvIG1ham9yIGRpdmVyZ2VuY2VzIG9mIGFwcGFybW9yIGZyb20gdGhpcyBkZWZpbml0
aW9uOgotIHByb2Nfc2V0YXR0ciBlbmZvcmNlcyBsaW1pdGF0aW9ucyB3aGVuIG5vX25ld19wcml2
cyBhcmUgc2V0LgotIHRoZSBsaW1pdGF0aW9uIGlzIGVuZm9yY2VkIGZyb20gdGhlIGFwcGFyZW50
IHRpbWUgd2hlbiBub19uZXdfcHJpdnMgaXMKICBzZXQgaW5zdGVhZCBvZiBndWFyYW50ZWVpbmcg
dGhhdCBlYWNoIGV4ZWN2ZSBoYXMgcHJvZ3Jlc3NpdmVseSBtb3JlCiAgbmFycm93IHBlcm1pc3Np
b25zLgoKVGhlIGNvZGUgaW4gYXBwYXJtb3IgdGhhdCBhdHRlbXB0cyB0byBkaXNjb3ZlciB0aGUg
YXBwYXJtb3IgbGFiZWwgYXQgdGhlCnBvaW50IHdoZXJlIG5vX25ld19wcml2cyBpcyBzZXQgaXMg
bm90IHJvYnVzdC4gIFRoZSBjYXB0dXJlIGhhcHBlbnMgYQpsb25nIHRpbWUgYWZ0ZXIgbm9fbmV3
X3ByaXZzIGlzIHNldC4KCkNhcHR1cmluZyB0aGUgbGFiZWwgYXQgdGhlIHBvaW50IHdoZXJlIG5v
X25ld19wcml2cyBpcyBzZXQgaXMKcHJhY3RpY2FsbHkgaW1wb3NzaWJsZSB0byBpbXBsZW1lbnQg
cm9idXN0bHkuICBUb2RheSB0aGUgcnVsZSBpcyBzdHJ1Y3QKY3JlZCBjYW4gb25seSBiZSBjaGFu
Z2VkIGJ5IGl0J3MgY3VycmVudCB0YXNrLiAgVG9kYXkKU0VDQ09NUF9GSUxURVJfRkxBR19UU1lO
QyBzZXRzIG5vX25ld19wcml2cyBmcm9tIGFub3RoZXIgdGhyZWFkLiAgQQpyb2J1c3QgaW1wbGVt
ZW50YXRpb24gd291bGQgcmVxdWlyZSBjaGFuZ2luZyBzb21ldGhpbmcgZnVuZGFtZW50YWwgaW4K
aG93IGNyZWRzIGFyZSBtYW5hZ2VkIGZvciBTRUNDT01QX0ZJTFRFUl9GTEFHX1RTWU5DIHRvIGJl
IGFibGUgdG8KY2FwdHVyZSB0aGUgY3JlZCBhdCB0aGUgcG9pbnQgaXQgaXMgc2V0LgoKRnV0aGVy
bW9yZSBnaXZlbiB0aGUgY29uc2lzdGVudCBkb2N1bWVudGF0aW9uIGFuZCBob3cgZXZlcnl0aGlu
ZyBlbHNlCmltcGxlbWVudHMgbm9fbmV3X3ByaXZzLCBub3QgaGF2aW5nIHRoZSBwZXJtaXNzaW9u
cyBnZXQgcHJvZ3Jlc3NpdmVseQp0aWdodGVyIGlzIGEgZm9vdGd1biBhaW1lZCBhdCB1c2Vyc3Bh
Y2UuICBJIGZ1bGx5IGV4cGVjdCBpdCB0byBicmVhayBhbnkKc2VjdXJpdHkgc2Vuc2l0aXZlIHNv
ZnR3YXJlIHRoYXQgdXNlcyBub19uZXdfcHJpdnMgYW5kIHdhcyBub3QKZGVsaWJlcmF0ZWx5IGRl
c2lnbmVkIGFuZCB0ZXN0ZWQgYWdhaW5zdCBhcHBhcm1vci4KCkF2b2lkIHRoZSBxdWVzdGlvbmFi
bGUgYW5kIGhhcmQgdG8gZml4IGltcGxlbWVudGF0aW9uIGFuZCB0aGUKcG90ZW50aWFsIHRvIGNv
bmZ1c2UgdXNlcnNwYWNlIGJ5IGhhdmluZyBub19uZXdfcHJpdnMgZW5mb3JjZQpwcm9ncmVzc2lu
dmVseSB0aWdodGVyIHBlcm1pc3Npb25zLgoKRml4ZXM6IDlmY2Y3OGNjYTE5OCAoImFwcGFybW9y
OiB1cGRhdGUgZG9tYWluIHRyYW5zaXRpb25zIHRoYXQgYXJlIHN1YnNldHMgb2YgY29uZmluZW1l
bnQgYXQgbm5wIikKU2lnbmVkLW9mZi1ieTogRXJpYyBXLiBCaWVkZXJtYW4gPGViaWVkZXJtQHht
aXNzaW9uLmNvbT4KLS0tCgpJIGNhbWUgYWNjcm9zcyB0aGlzIHdoaWxlIGV4YW1pbmluZyB0aGUg
cGxhY2VzIGNyZWRfZ3VhcmRfbXV0ZXggaXMKdXNlZCBhbmQgdHJ5aW5nIHRvIGZpbmQgYSB3YXkg
dG8gbWFrZSB0aG9zZSBjb2RlIHBhdGhzIGxlc3MgaW5zYW5lLgoKSWYgaXQgd291bGQgYmUgbW9y
ZSBwYWxsYXRhYmxlIEkgd291bGQgbm90IG1pbmQgcmVtb3ZpbmcgdGhlCnRhc2tfbm9fbmV3X3By
aXZzIHRlc3QgZW50aXJlbHkgZnJvbSBhYV9jaGFuZ2VfaGF0IGFuZCBhYV9jaGFuZ2VfcHJvZmls
ZQphcyB0aG9zZSBhcmUgbm90IHBhcnQgb2YgZXhlYywgc28gYXJndWFibHkgbm9fbmV3X3ByaXZz
IHNob3VsZCBub3QgY2FyZQphYm91dCB0aGVtIGF0IGFsbC4KCkNhbiB3ZSBwbGVhc2UgZ2V0IHJp
ZCBvZiB0aGUgaHVnZSBzZW1hbnRpYyB3YXJ0IGFuZCBwYWluIGluIHRoZSBpbXBsZW1lbnRhdGlv
bj8KCiBzZWN1cml0eS9hcHBhcm1vci9kb21haW4uYyAgICAgICB8IDM5ICsrKystLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCiBzZWN1cml0eS9hcHBhcm1vci9pbmNsdWRlL3Rhc2suaCB8ICA0
IC0tLS0KIHNlY3VyaXR5L2FwcGFybW9yL3Rhc2suYyAgICAgICAgIHwgIDcgLS0tLS0tCiAzIGZp
bGVzIGNoYW5nZWQsIDQgaW5zZXJ0aW9ucygrKSwgNDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvc2VjdXJpdHkvYXBwYXJtb3IvZG9tYWluLmMgYi9zZWN1cml0eS9hcHBhcm1vci9kb21haW4u
YwppbmRleCBmOTE5ZWJkMDQyZmQuLjhmNzcwNTliZjg5MCAxMDA2NDQKLS0tIGEvc2VjdXJpdHkv
YXBwYXJtb3IvZG9tYWluLmMKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvZG9tYWluLmMKQEAgLTg2
OSwxNyArODY5LDYgQEAgaW50IGFwcGFybW9yX2Jwcm1fY3JlZHNfZm9yX2V4ZWMoc3RydWN0IGxp
bnV4X2JpbnBybSAqYnBybSkKIAogCWxhYmVsID0gYWFfZ2V0X25ld2VzdF9sYWJlbChjcmVkX2xh
YmVsKGJwcm0tPmNyZWQpKTsKIAotCS8qCi0JICogRGV0ZWN0IG5vIG5ldyBwcml2cyBiZWluZyBz
ZXQsIGFuZCBzdG9yZSB0aGUgbGFiZWwgaXQKLQkgKiBvY2N1cnJlZCB1bmRlci4gSWRlYWxseSB0
aGlzIHdvdWxkIGhhcHBlbiB3aGVuIG5ucAotCSAqIGlzIHNldCBidXQgdGhlcmUgaXNuJ3QgYSBn
b29kIHdheSB0byBkbyB0aGF0IHlldC4KLQkgKgotCSAqIFRlc3RpbmcgZm9yIHVuY29uZmluZWQg
bXVzdCBiZSBkb25lIGJlZm9yZSB0aGUgc3Vic2V0IHRlc3QKLQkgKi8KLQlpZiAoKGJwcm0tPnVu
c2FmZSAmIExTTV9VTlNBRkVfTk9fTkVXX1BSSVZTKSAmJiAhdW5jb25maW5lZChsYWJlbCkgJiYK
LQkgICAgIWN0eC0+bm5wKQotCQljdHgtPm5ucCA9IGFhX2dldF9sYWJlbChsYWJlbCk7Ci0KIAkv
KiBidWZmZXIgZnJlZWQgYmVsb3csIG5hbWUgaXMgcG9pbnRlciBpbnRvIGJ1ZmZlciAqLwogCWJ1
ZmZlciA9IGFhX2dldF9idWZmZXIoZmFsc2UpOwogCWlmICghYnVmZmVyKSB7CkBAIC05MTUsNyAr
OTA0LDcgQEAgaW50IGFwcGFybW9yX2Jwcm1fY3JlZHNfZm9yX2V4ZWMoc3RydWN0IGxpbnV4X2Jp
bnBybSAqYnBybSkKIAkgKi8KIAlpZiAoKGJwcm0tPnVuc2FmZSAmIExTTV9VTlNBRkVfTk9fTkVX
X1BSSVZTKSAmJgogCSAgICAhdW5jb25maW5lZChsYWJlbCkgJiYKLQkgICAgIWFhX2xhYmVsX2lz
X3VuY29uZmluZWRfc3Vic2V0KG5ldywgY3R4LT5ubnApKSB7CisJICAgICFhYV9sYWJlbF9pc191
bmNvbmZpbmVkX3N1YnNldChuZXcsIGxhYmVsKSkgewogCQllcnJvciA9IC1FUEVSTTsKIAkJaW5m
byA9ICJubyBuZXcgcHJpdnMiOwogCQlnb3RvIGF1ZGl0OwpAQCAtMTE1OCwxNiArMTE0Nyw2IEBA
IGludCBhYV9jaGFuZ2VfaGF0KGNvbnN0IGNoYXIgKmhhdHNbXSwgaW50IGNvdW50LCB1NjQgdG9r
ZW4sIGludCBmbGFncykKIAlsYWJlbCA9IGFhX2dldF9uZXdlc3RfY3JlZF9sYWJlbChjcmVkKTsK
IAlwcmV2aW91cyA9IGFhX2dldF9uZXdlc3RfbGFiZWwoY3R4LT5wcmV2aW91cyk7CiAKLQkvKgot
CSAqIERldGVjdCBubyBuZXcgcHJpdnMgYmVpbmcgc2V0LCBhbmQgc3RvcmUgdGhlIGxhYmVsIGl0
Ci0JICogb2NjdXJyZWQgdW5kZXIuIElkZWFsbHkgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiBubnAK
LQkgKiBpcyBzZXQgYnV0IHRoZXJlIGlzbid0IGEgZ29vZCB3YXkgdG8gZG8gdGhhdCB5ZXQuCi0J
ICoKLQkgKiBUZXN0aW5nIGZvciB1bmNvbmZpbmVkIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHN1
YnNldCB0ZXN0Ci0JICovCi0JaWYgKHRhc2tfbm9fbmV3X3ByaXZzKGN1cnJlbnQpICYmICF1bmNv
bmZpbmVkKGxhYmVsKSAmJiAhY3R4LT5ubnApCi0JCWN0eC0+bm5wID0gYWFfZ2V0X2xhYmVsKGxh
YmVsKTsKLQogCWlmICh1bmNvbmZpbmVkKGxhYmVsKSkgewogCQlpbmZvID0gInVuY29uZmluZWQg
Y2FuIG5vdCBjaGFuZ2VfaGF0IjsKIAkJZXJyb3IgPSAtRVBFUk07CkBAIC0xMTkzLDcgKzExNzIs
NyBAQCBpbnQgYWFfY2hhbmdlX2hhdChjb25zdCBjaGFyICpoYXRzW10sIGludCBjb3VudCwgdTY0
IHRva2VuLCBpbnQgZmxhZ3MpCiAJCSAqIHJlZHVjZSByZXN0cmljdGlvbnMuCiAJCSAqLwogCQlp
ZiAodGFza19ub19uZXdfcHJpdnMoY3VycmVudCkgJiYgIXVuY29uZmluZWQobGFiZWwpICYmCi0J
CSAgICAhYWFfbGFiZWxfaXNfdW5jb25maW5lZF9zdWJzZXQobmV3LCBjdHgtPm5ucCkpIHsKKwkJ
ICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNldChuZXcsIGxhYmVsKSkgewogCQkJLyog
bm90IGFuIGFwcGFybW9yIGRlbmlhbCBwZXIgc2UsIHNvIGRvbid0IGxvZyBpdCAqLwogCQkJQUFf
REVCVUcoIm5vX25ld19wcml2cyAtIGNoYW5nZV9oYXQgZGVuaWVkIik7CiAJCQllcnJvciA9IC1F
UEVSTTsKQEAgLTEyMTQsNyArMTE5Myw3IEBAIGludCBhYV9jaGFuZ2VfaGF0KGNvbnN0IGNoYXIg
KmhhdHNbXSwgaW50IGNvdW50LCB1NjQgdG9rZW4sIGludCBmbGFncykKIAkJICogcmVkdWNlIHJl
c3RyaWN0aW9ucy4KIAkJICovCiAJCWlmICh0YXNrX25vX25ld19wcml2cyhjdXJyZW50KSAmJiAh
dW5jb25maW5lZChsYWJlbCkgJiYKLQkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNl
dChwcmV2aW91cywgY3R4LT5ubnApKSB7CisJCSAgICAhYWFfbGFiZWxfaXNfdW5jb25maW5lZF9z
dWJzZXQocHJldmlvdXMsIGxhYmVsKSkgewogCQkJLyogbm90IGFuIGFwcGFybW9yIGRlbmlhbCBw
ZXIgc2UsIHNvIGRvbid0IGxvZyBpdCAqLwogCQkJQUFfREVCVUcoIm5vX25ld19wcml2cyAtIGNo
YW5nZV9oYXQgZGVuaWVkIik7CiAJCQllcnJvciA9IC1FUEVSTTsKQEAgLTEzMDMsMTYgKzEyODIs
NiBAQCBpbnQgYWFfY2hhbmdlX3Byb2ZpbGUoY29uc3QgY2hhciAqZnFuYW1lLCBpbnQgZmxhZ3Mp
CiAKIAlsYWJlbCA9IGFhX2dldF9jdXJyZW50X2xhYmVsKCk7CiAKLQkvKgotCSAqIERldGVjdCBu
byBuZXcgcHJpdnMgYmVpbmcgc2V0LCBhbmQgc3RvcmUgdGhlIGxhYmVsIGl0Ci0JICogb2NjdXJy
ZWQgdW5kZXIuIElkZWFsbHkgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiBubnAKLQkgKiBpcyBzZXQg
YnV0IHRoZXJlIGlzbid0IGEgZ29vZCB3YXkgdG8gZG8gdGhhdCB5ZXQuCi0JICoKLQkgKiBUZXN0
aW5nIGZvciB1bmNvbmZpbmVkIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHN1YnNldCB0ZXN0Ci0J
ICovCi0JaWYgKHRhc2tfbm9fbmV3X3ByaXZzKGN1cnJlbnQpICYmICF1bmNvbmZpbmVkKGxhYmVs
KSAmJiAhY3R4LT5ubnApCi0JCWN0eC0+bm5wID0gYWFfZ2V0X2xhYmVsKGxhYmVsKTsKLQogCWlm
ICghZnFuYW1lIHx8ICEqZnFuYW1lKSB7CiAJCWFhX3B1dF9sYWJlbChsYWJlbCk7CiAJCUFBX0RF
QlVHKCJubyBwcm9maWxlIG5hbWUiKTsKQEAgLTE0MDksNyArMTM3OCw3IEBAIGludCBhYV9jaGFu
Z2VfcHJvZmlsZShjb25zdCBjaGFyICpmcW5hbWUsIGludCBmbGFncykKIAkJICogcmVkdWNlIHJl
c3RyaWN0aW9ucy4KIAkJICovCiAJCWlmICh0YXNrX25vX25ld19wcml2cyhjdXJyZW50KSAmJiAh
dW5jb25maW5lZChsYWJlbCkgJiYKLQkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNl
dChuZXcsIGN0eC0+bm5wKSkgeworCQkgICAgIWFhX2xhYmVsX2lzX3VuY29uZmluZWRfc3Vic2V0
KG5ldywgbGFiZWwpKSB7CiAJCQkvKiBub3QgYW4gYXBwYXJtb3IgZGVuaWFsIHBlciBzZSwgc28g
ZG9uJ3QgbG9nIGl0ICovCiAJCQlBQV9ERUJVRygibm9fbmV3X3ByaXZzIC0gY2hhbmdlX2hhdCBk
ZW5pZWQiKTsKIAkJCWVycm9yID0gLUVQRVJNOwpkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJt
b3IvaW5jbHVkZS90YXNrLmggYi9zZWN1cml0eS9hcHBhcm1vci9pbmNsdWRlL3Rhc2suaAppbmRl
eCBmMTNkMTIzNzNiMjUuLjhhOWMyNThlMjAxOCAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvYXBwYXJt
b3IvaW5jbHVkZS90YXNrLmgKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmgK
QEAgLTE3LDEzICsxNywxMSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBhYV90YXNrX2N0eCAqdGFz
a19jdHgoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQogCiAvKgogICogc3RydWN0IGFhX3Rhc2tf
Y3R4IC0gaW5mb3JtYXRpb24gZm9yIGN1cnJlbnQgdGFzayBsYWJlbCBjaGFuZ2UKLSAqIEBubnA6
IHNuYXBzaG90IG9mIGxhYmVsIGF0IHRpbWUgb2Ygbm9fbmV3X3ByaXZzCiAgKiBAb25leGVjOiBw
cm9maWxlIHRvIHRyYW5zaXRpb24gdG8gb24gbmV4dCBleGVjICAoTUFZIEJFIE5VTEwpCiAgKiBA
cHJldmlvdXM6IHByb2ZpbGUgdGhlIHRhc2sgbWF5IHJldHVybiB0byAgICAgKE1BWSBCRSBOVUxM
KQogICogQHRva2VuOiBtYWdpYyB2YWx1ZSB0aGUgdGFzayBtdXN0IGtub3cgZm9yIHJldHVybmlu
ZyB0byBAcHJldmlvdXNfcHJvZmlsZQogICovCiBzdHJ1Y3QgYWFfdGFza19jdHggewotCXN0cnVj
dCBhYV9sYWJlbCAqbm5wOwogCXN0cnVjdCBhYV9sYWJlbCAqb25leGVjOwogCXN0cnVjdCBhYV9s
YWJlbCAqcHJldmlvdXM7CiAJdTY0IHRva2VuOwpAQCAtNDIsNyArNDAsNiBAQCBzdHJ1Y3QgYWFf
bGFiZWwgKmFhX2dldF90YXNrX2xhYmVsKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzayk7CiBzdGF0
aWMgaW5saW5lIHZvaWQgYWFfZnJlZV90YXNrX2N0eChzdHJ1Y3QgYWFfdGFza19jdHggKmN0eCkK
IHsKIAlpZiAoY3R4KSB7Ci0JCWFhX3B1dF9sYWJlbChjdHgtPm5ucCk7CiAJCWFhX3B1dF9sYWJl
bChjdHgtPnByZXZpb3VzKTsKIAkJYWFfcHV0X2xhYmVsKGN0eC0+b25leGVjKTsKIAl9CkBAIC01
Nyw3ICs1NCw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBhYV9kdXBfdGFza19jdHgoc3RydWN0IGFh
X3Rhc2tfY3R4ICpuZXcsCiAJCQkJICAgY29uc3Qgc3RydWN0IGFhX3Rhc2tfY3R4ICpvbGQpCiB7
CiAJKm5ldyA9ICpvbGQ7Ci0JYWFfZ2V0X2xhYmVsKG5ldy0+bm5wKTsKIAlhYV9nZXRfbGFiZWwo
bmV3LT5wcmV2aW91cyk7CiAJYWFfZ2V0X2xhYmVsKG5ldy0+b25leGVjKTsKIH0KZGlmZiAtLWdp
dCBhL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYyBiL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYwpp
bmRleCBkMTcxMzBlZTY3OTUuLjRiOWVjMzcwYTE3MSAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvYXBw
YXJtb3IvdGFzay5jCisrKyBiL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYwpAQCAtNDEsNyArNDEs
NiBAQCBzdHJ1Y3QgYWFfbGFiZWwgKmFhX2dldF90YXNrX2xhYmVsKHN0cnVjdCB0YXNrX3N0cnVj
dCAqdGFzaykKIGludCBhYV9yZXBsYWNlX2N1cnJlbnRfbGFiZWwoc3RydWN0IGFhX2xhYmVsICps
YWJlbCkKIHsKIAlzdHJ1Y3QgYWFfbGFiZWwgKm9sZCA9IGFhX2N1cnJlbnRfcmF3X2xhYmVsKCk7
Ci0Jc3RydWN0IGFhX3Rhc2tfY3R4ICpjdHggPSB0YXNrX2N0eChjdXJyZW50KTsKIAlzdHJ1Y3Qg
Y3JlZCAqbmV3OwogCiAJQUFfQlVHKCFsYWJlbCk7CkBAIC01NiwxMiArNTUsNiBAQCBpbnQgYWFf
cmVwbGFjZV9jdXJyZW50X2xhYmVsKHN0cnVjdCBhYV9sYWJlbCAqbGFiZWwpCiAJaWYgKCFuZXcp
CiAJCXJldHVybiAtRU5PTUVNOwogCi0JaWYgKGN0eC0+bm5wICYmIGxhYmVsX2lzX3N0YWxlKGN0
eC0+bm5wKSkgewotCQlzdHJ1Y3QgYWFfbGFiZWwgKnRtcCA9IGN0eC0+bm5wOwotCi0JCWN0eC0+
bm5wID0gYWFfZ2V0X25ld2VzdF9sYWJlbCh0bXApOwotCQlhYV9wdXRfbGFiZWwodG1wKTsKLQl9
CiAJaWYgKHVuY29uZmluZWQobGFiZWwpIHx8IChsYWJlbHNfbnMob2xkKSAhPSBsYWJlbHNfbnMo
bGFiZWwpKSkKIAkJLyoKIAkJICogaWYgc3dpdGNoaW5nIHRvIHVuY29uZmluZWQgb3IgYSBkaWZm
ZXJlbnQgbGFiZWwgbmFtZXNwYWNlCi0tIAoyLjIwLjEKCkVyaWMKCi0tIApBcHBBcm1vciBtYWls
aW5nIGxpc3QKQXBwQXJtb3JAbGlzdHMudWJ1bnR1LmNvbQpNb2RpZnkgc2V0dGluZ3Mgb3IgdW5z
dWJzY3JpYmUgYXQ6IGh0dHBzOi8vbGlzdHMudWJ1bnR1LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2Fw
cGFybW9yCg==
