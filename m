Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from lists.ubuntu.com (lists.ubuntu.com [185.125.189.65])
	by mail.lfdr.de (Postfix) with ESMTPS id EF9638209D2
	for <lists+apparmor@lfdr.de>; Sun, 31 Dec 2023 06:41:49 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.ubuntu.com)
	by lists.ubuntu.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1rJoZu-0007ai-4w; Sun, 31 Dec 2023 05:41:38 +0000
Received: from stravinsky.debian.org ([82.195.75.108])
 by lists.ubuntu.com with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
 (Exim 4.86_2) (envelope-from <gibmat@debian.org>) id 1rJnNk-0002Pc-0J
 for apparmor@lists.ubuntu.com; Sun, 31 Dec 2023 04:25:00 +0000
Received: from authenticated user by stravinsky.debian.org with esmtpsa
 (TLS1.3:ECDHE_SECP256R1__RSA_PSS_RSAE_SHA256__AES_256_GCM:256)
 (Exim 4.94.2) (envelope-from <gibmat@debian.org>)
 id 1rJnNg-00AMI8-Ij; Sun, 31 Dec 2023 04:24:56 +0000
Message-ID: <9d6a5b2368016e2ef7b11c64b7c9db69419318ec.camel@debian.org>
From: Mathias Gibbens <gibmat@debian.org>
To: Salvatore Bonaccorso <carnil@debian.org>, 1050256@bugs.debian.org, John
 Johansen <john.johansen@canonical.com>, John Johansen <john@apparmor.net>
Date: Sun, 31 Dec 2023 04:24:47 +0000
In-Reply-To: <ZZA69zQAzpzPojD5@eldamar.lan>
References: <ZPMX8Wo1+2ICj8+K@debian.org>
 <d5a0d568-8666-4f4a-a426-757d68215724@debian.org>
 <aea599a6-219c-4158-850f-d7168a595d21@debian.org>
 <da160344-8135-4eab-9261-bb1552238ad3@debian.org>
 <8f68c83b-1856-4fa2-8408-06ae36696698@debian.org>
 <8f68c83b-1856-4fa2-8408-06ae36696698@debian.org>
 <169271330498.34427.2191706613553030083.reportbug@pluto.milchstrasse.xx>
 <38461b24-1b42-45f7-98d6-e6e353c0d203@debian.org>
 <169271330498.34427.2191706613553030083.reportbug@pluto.milchstrasse.xx>
 <ZXDsAecCKiSuHsO2@eldamar.lan> <ZZA69zQAzpzPojD5@eldamar.lan>
Content-Type: multipart/signed; micalg="pgp-sha512";
 protocol="application/pgp-signature"; boundary="=-HSr67mYslDupqiOqt9Ip"
User-Agent: Evolution 3.46.4-2 
MIME-Version: 1.0
X-Debian-User: gibmat
X-Mailman-Approved-At: Sun, 31 Dec 2023 05:41:27 +0000
Subject: Re: [apparmor] Bug#1050256: AppArmor breaks locking non-fs Unix
	sockets
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Cc: pkg-systemd-maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>,
 apparmor@lists.ubuntu.com, Antonio Terceiro <terceiro@debian.org>,
 Harald Dunkel <harri@afaics.de>, Paul Gevers <elbrus@debian.org>
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>


--=-HSr67mYslDupqiOqt9Ip
Content-Type: multipart/mixed; boundary="=-NsEHkOL9wZGf/iPwXBxJ"

--=-NsEHkOL9wZGf/iPwXBxJ
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Sat, 2023-12-30 at 16:44 +0100, Salvatore Bonaccorso wrote:
> John, did you had a chance to work on this backport for 6.1.y stable
> upstream so we could pick it downstream in Debian in one of the next
> stable imports? Cherry-picking 1cf26c3d2c4c ("apparmor: fix apparmor
> mediating locking non-fs unix sockets") does not work, if not
> havinging the work around e2967ede2297 ("apparmor: compute policydb
> permission on profile load") AFAICS, so that needs a 6.1.y specific
> backport submitted to stable@vger.kernel.org=C2=A0?
>=20
> I think we could have people from this bug as well providing a
> Tested-by when necessary. I'm not feeling confident enough to be able
> to provide myself such a patch to sent to stable (and you only giving
> an Acked-by/Reviewed-by), so if you can help out here with your
> upstream hat on that would be more than appreciated and welcome :)
>=20
> Thanks a lot for your work!

  I played around with this a bit the past week as well, and came to
the same conclusion as Salvatore did that commits e2967ede2297 and
1cf26c3d2c4c need to be cherry-picked back to the 6.1 stable tree.

  I've attached the two commits rebased onto 6.1.y as patches to this
message. Commit e2967ede2297 needed a little bit of touchup to apply
cleanly, and 1cf26c3d2c4c just needed adjustments for line number
changes. I included some comments at the top of each patch.

  With these two commits cherry-picked on top of the 6.1.69 kernel, I
can boot a bookworm system and successfully start a service within a
container that utilizes `PrivateNetwork=3Dyes`. Rebooting back into an
unpatched vanilla 6.1.69 kernel continues to show the problem.

  While I didn't see any immediate issues (ie, `aa-status` and log
files looked OK), I don't understand the changes in the first commit
well enough to be confident in sending these patches for inclusion in
the upstream stable tree on my own.

Mathias

--=-NsEHkOL9wZGf/iPwXBxJ
Content-Disposition: attachment; filename="rebase-01-e2967ed.patch"
Content-Type: text/x-patch; name="rebase-01-e2967ed.patch"; charset="UTF-8"
Content-Transfer-Encoding: base64

VGhpcyBpcyBhIHJlYmFzZSBvZiBjb21taXQgZTI5NjdlZGUyMjk3ICgiYXBwYXJtb3I6IGNvbXB1
dGUgcG9saWN5ZGIgcGVybWlzc2lvbgpvbiBwcm9maWxlIGxvYWQiKSBvbnRvIHRoZSA2LjEuNjkg
a2VybmVsIHJlbGVhc2UuCgpUaGUgb3JpZ2luYWwgY29tbWl0IGhhZCBhIGxpbmUgdGhhdCBjaGFu
Z2VkIGBrdnphbGxvYygpYCAtPiBga3ZjYWxsb2MoKWAgaW4Kc2VjdXJpdHkvYXBwYXJtb3IvcG9s
aWN5X3VucGFjay5jLCBidXQgdGhhdCBjb2RlIGRvZXNuJ3QgYXBwZWFyIGluIHRoZSA2LjEgdHJl
ZSwKc28gSSBkcm9wcGVkIGl0LgoKQWxzbyBpbmNsdWRlZCBpcyB0aGUgb25lLWxpbmUgZGVjbGFy
YXRpb24gb2YgYHN0cnVjdCBhYV9wZXJtcyBkZWZhdWx0X3Blcm1zYCBpbgpzZWN1cml0eS9hcHBh
cm1vci9maWxlLmMgd2hpY2ggd2FzIGludHJvZHVjZWQgaW4gY29tbWl0IDQwOGQ1M2U5MjNiZCAo
ImFwcGFybW9yOgpjb21wdXRlIGZpbGUgcGVybWlzc2lvbnMgb24gcHJvZmlsZSBsb2FkIikuCgpU
ZXN0ZWQtYnk6IE1hdGhpYXMgR2liYmVucyA8Z2libWF0QGRlYmlhbi5vcmc+CgpkaWZmIC0tZ2l0
IGEvc2VjdXJpdHkvYXBwYXJtb3IvYXBwYXJtb3Jmcy5jIGIvc2VjdXJpdHkvYXBwYXJtb3IvYXBw
YXJtb3Jmcy5jCmluZGV4IDcxNjBlN2FhNS4uYWFiYTkzNmUxIDEwMDY0NAotLS0gYS9zZWN1cml0
eS9hcHBhcm1vci9hcHBhcm1vcmZzLmMKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvYXBwYXJtb3Jm
cy5jCkBAIC02MzMsNyArNjMzLDcgQEAgc3RhdGljIHZvaWQgcHJvZmlsZV9xdWVyeV9jYihzdHJ1
Y3QgYWFfcHJvZmlsZSAqcHJvZmlsZSwgc3RydWN0IGFhX3Blcm1zICpwZXJtcywKIAkJc3RhdGUg
PSBhYV9kZmFfbWF0Y2hfbGVuKGRmYSwgcHJvZmlsZS0+cG9saWN5LnN0YXJ0WzBdLAogCQkJCQkg
bWF0Y2hfc3RyLCBtYXRjaF9sZW4pOwogCQlpZiAoc3RhdGUpCi0JCQlhYV9jb21wdXRlX3Blcm1z
KGRmYSwgc3RhdGUsICZ0bXApOworCQkJdG1wID0gKmFhX2xvb2t1cF9wZXJtcyhwcm9maWxlLT5w
b2xpY3kucGVybXMsIHN0YXRlKTsKIAl9CiAJYWFfYXBwbHlfbW9kZXNfdG9fcGVybXMocHJvZmls
ZSwgJnRtcCk7CiAJYWFfcGVybXNfYWNjdW1fcmF3KHBlcm1zLCAmdG1wKTsKZGlmZiAtLWdpdCBh
L3NlY3VyaXR5L2FwcGFybW9yL2ZpbGUuYyBiL3NlY3VyaXR5L2FwcGFybW9yL2ZpbGUuYwppbmRl
eCBlMWI3ZTkzNjAuLjhjZjYxMGEyMiAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvZmls
ZS5jCisrKyBiL3NlY3VyaXR5L2FwcGFybW9yL2ZpbGUuYwpAQCAtMjEyLDYgKzIxMiw3IEBAIHN0
YXRpYyB1MzIgbWFwX29sZF9wZXJtcyh1MzIgb2xkKQogICoKICAqIFJldHVybnM6IGNvbXB1dGVk
IHBlcm1pc3Npb24gc2V0CiAgKi8KK3N0cnVjdCBhYV9wZXJtcyBkZWZhdWx0X3Blcm1zID0ge307
CiBzdHJ1Y3QgYWFfcGVybXMgYWFfY29tcHV0ZV9mcGVybXMoc3RydWN0IGFhX2RmYSAqZGZhLCB1
bnNpZ25lZCBpbnQgc3RhdGUsCiAJCQkJICBzdHJ1Y3QgcGF0aF9jb25kICpjb25kKQogewpkaWZm
IC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS9wZXJtcy5oIGIvc2VjdXJpdHkvYXBw
YXJtb3IvaW5jbHVkZS9wZXJtcy5oCmluZGV4IDEzZjIwYzU5OC4uZGU5NjMxZWRiIDEwMDY0NAot
LS0gYS9zZWN1cml0eS9hcHBhcm1vci9pbmNsdWRlL3Blcm1zLmgKKysrIGIvc2VjdXJpdHkvYXBw
YXJtb3IvaW5jbHVkZS9wZXJtcy5oCkBAIC0xMzMsNiArMTMzLDE3IEBAIGV4dGVybiBzdHJ1Y3Qg
YWFfcGVybXMgYWxscGVybXM7CiAJeGNoZWNrKGZuX2Zvcl9lYWNoKChMMSksIChQKSwgKEZOMSkp
LCBmbl9mb3JfZWFjaCgoTDIpLCAoUCksIChGTjIpKSkKIAogCitleHRlcm4gc3RydWN0IGFhX3Bl
cm1zIGRlZmF1bHRfcGVybXM7CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGFhX3Blcm1zICphYV9s
b29rdXBfcGVybXMoc3RydWN0IGFhX3Blcm1zICpwZXJtcywKKwkJCQkJICAgICAgIHVuc2lnbmVk
IGludCBzdGF0ZSkKK3sKKwlpZiAoIShwZXJtcykpCisJCXJldHVybiAmZGVmYXVsdF9wZXJtczsK
KworCXJldHVybiAmKHBlcm1zW3N0YXRlXSk7Cit9CisKIHZvaWQgYWFfcGVybV9tYXNrX3RvX3N0
cihjaGFyICpzdHIsIHNpemVfdCBzdHJfc2l6ZSwgY29uc3QgY2hhciAqY2hycywKIAkJCSB1MzIg
bWFzayk7CiB2b2lkIGFhX2F1ZGl0X3Blcm1fbmFtZXMoc3RydWN0IGF1ZGl0X2J1ZmZlciAqYWIs
IGNvbnN0IGNoYXIgKiBjb25zdCAqbmFtZXMsCkBAIC0xNDEsOCArMTUyLDYgQEAgdm9pZCBhYV9h
dWRpdF9wZXJtX21hc2soc3RydWN0IGF1ZGl0X2J1ZmZlciAqYWIsIHUzMiBtYXNrLCBjb25zdCBj
aGFyICpjaHJzLAogCQkJdTMyIGNocnNtYXNrLCBjb25zdCBjaGFyICogY29uc3QgKm5hbWVzLCB1
MzIgbmFtZXNtYXNrKTsKIHZvaWQgYWFfYXBwbHlfbW9kZXNfdG9fcGVybXMoc3RydWN0IGFhX3By
b2ZpbGUgKnByb2ZpbGUsCiAJCQkgICAgIHN0cnVjdCBhYV9wZXJtcyAqcGVybXMpOwotdm9pZCBh
YV9jb21wdXRlX3Blcm1zKHN0cnVjdCBhYV9kZmEgKmRmYSwgdW5zaWduZWQgaW50IHN0YXRlLAot
CQkgICAgICBzdHJ1Y3QgYWFfcGVybXMgKnBlcm1zKTsKIHZvaWQgYWFfcGVybXNfYWNjdW0oc3Ry
dWN0IGFhX3Blcm1zICphY2N1bSwgc3RydWN0IGFhX3Blcm1zICphZGRlbmQpOwogdm9pZCBhYV9w
ZXJtc19hY2N1bV9yYXcoc3RydWN0IGFhX3Blcm1zICphY2N1bSwgc3RydWN0IGFhX3Blcm1zICph
ZGRlbmQpOwogdm9pZCBhYV9wcm9maWxlX21hdGNoX2xhYmVsKHN0cnVjdCBhYV9wcm9maWxlICpw
cm9maWxlLCBzdHJ1Y3QgYWFfbGFiZWwgKmxhYmVsLApkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBw
YXJtb3IvaW5jbHVkZS9wb2xpY3kuaCBiL3NlY3VyaXR5L2FwcGFybW9yL2luY2x1ZGUvcG9saWN5
LmgKaW5kZXggNjM5YjViMjQ4Li4yMzBlZjUwMDcgMTAwNjQ0Ci0tLSBhL3NlY3VyaXR5L2FwcGFy
bW9yL2luY2x1ZGUvcG9saWN5LmgKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS9wb2xp
Y3kuaApAQCAtNzcsNiArNzcsNyBAQCBlbnVtIHByb2ZpbGVfbW9kZSB7CiBzdHJ1Y3QgYWFfcG9s
aWN5ZGIgewogCS8qIEdlbmVyaWMgcG9saWN5IERGQSBzcGVjaWZpYyBydWxlIHR5cGVzIHdpbGwg
YmUgc3Vic2VjdGlvbnMgb2YgaXQgKi8KIAlzdHJ1Y3QgYWFfZGZhICpkZmE7CisJc3RydWN0IGFh
X3Blcm1zICpwZXJtczsKIAl1bnNpZ25lZCBpbnQgc3RhcnRbQUFfQ0xBU1NfTEFTVCArIDFdOwog
CiB9OwpkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJtb3IvbGFiZWwuYyBiL3NlY3VyaXR5L2Fw
cGFybW9yL2xhYmVsLmMKaW5kZXggYTY3YzU4OTdlLi4yZmM1OGJhMTUgMTAwNjQ0Ci0tLSBhL3Nl
Y3VyaXR5L2FwcGFybW9yL2xhYmVsLmMKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvbGFiZWwuYwpA
QCAtMTMzMCw3ICsxMzMwLDcgQEAgc3RhdGljIGludCBsYWJlbF9jb21wb3VuZF9tYXRjaChzdHJ1
Y3QgYWFfcHJvZmlsZSAqcHJvZmlsZSwKIAkJaWYgKCFzdGF0ZSkKIAkJCWdvdG8gZmFpbDsKIAl9
Ci0JYWFfY29tcHV0ZV9wZXJtcyhwcm9maWxlLT5wb2xpY3kuZGZhLCBzdGF0ZSwgcGVybXMpOwor
CSpwZXJtcyA9ICphYV9sb29rdXBfcGVybXMocHJvZmlsZS0+cG9saWN5LnBlcm1zLCBzdGF0ZSk7
CiAJYWFfYXBwbHlfbW9kZXNfdG9fcGVybXMocHJvZmlsZSwgcGVybXMpOwogCWlmICgocGVybXMt
PmFsbG93ICYgcmVxdWVzdCkgIT0gcmVxdWVzdCkKIAkJcmV0dXJuIC1FQUNDRVM7CkBAIC0xMzgx
LDcgKzEzODEsNyBAQCBzdGF0aWMgaW50IGxhYmVsX2NvbXBvbmVudHNfbWF0Y2goc3RydWN0IGFh
X3Byb2ZpbGUgKnByb2ZpbGUsCiAJcmV0dXJuIDA7CiAKIG5leHQ6Ci0JYWFfY29tcHV0ZV9wZXJt
cyhwcm9maWxlLT5wb2xpY3kuZGZhLCBzdGF0ZSwgJnRtcCk7CisJdG1wID0gKmFhX2xvb2t1cF9w
ZXJtcyhwcm9maWxlLT5wb2xpY3kucGVybXMsIHN0YXRlKTsKIAlhYV9hcHBseV9tb2Rlc190b19w
ZXJtcyhwcm9maWxlLCAmdG1wKTsKIAlhYV9wZXJtc19hY2N1bShwZXJtcywgJnRtcCk7CiAJbGFi
ZWxfZm9yX2VhY2hfY29udChpLCBsYWJlbCwgdHApIHsKQEAgLTEzOTAsNyArMTM5MCw3IEBAIHN0
YXRpYyBpbnQgbGFiZWxfY29tcG9uZW50c19tYXRjaChzdHJ1Y3QgYWFfcHJvZmlsZSAqcHJvZmls
ZSwKIAkJc3RhdGUgPSBtYXRjaF9jb21wb25lbnQocHJvZmlsZSwgdHAsIHN0YXJ0KTsKIAkJaWYg
KCFzdGF0ZSkKIAkJCWdvdG8gZmFpbDsKLQkJYWFfY29tcHV0ZV9wZXJtcyhwcm9maWxlLT5wb2xp
Y3kuZGZhLCBzdGF0ZSwgJnRtcCk7CisJCXRtcCA9ICphYV9sb29rdXBfcGVybXMocHJvZmlsZS0+
cG9saWN5LnBlcm1zLCBzdGF0ZSk7CiAJCWFhX2FwcGx5X21vZGVzX3RvX3Blcm1zKHByb2ZpbGUs
ICZ0bXApOwogCQlhYV9wZXJtc19hY2N1bShwZXJtcywgJnRtcCk7CiAJfQpkaWZmIC0tZ2l0IGEv
c2VjdXJpdHkvYXBwYXJtb3IvbGliLmMgYi9zZWN1cml0eS9hcHBhcm1vci9saWIuYwppbmRleCAx
YzcyYTYxMTAuLjUwNWVmNTg0OCAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvbGliLmMK
KysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvbGliLmMKQEAgLTMxNSw0OCArMzE1LDYgQEAgdm9pZCBh
YV9hcHBseV9tb2Rlc190b19wZXJtcyhzdHJ1Y3QgYWFfcHJvZmlsZSAqcHJvZmlsZSwgc3RydWN0
IGFhX3Blcm1zICpwZXJtcykKICAqLwogfQogCi1zdGF0aWMgdTMyIG1hcF9vdGhlcih1MzIgeCkK
LXsKLQlyZXR1cm4gKCh4ICYgMHgzKSA8PCA4KSB8CS8qIFNFVEFUVFIvR0VUQVRUUiAqLwotCQko
KHggJiAweDFjKSA8PCAxOCkgfAkvKiBBQ0NFUFQvQklORC9MSVNURU4gKi8KLQkJKCh4ICYgMHg2
MCkgPDwgMTkpOwkvKiBTRVRPUFQvR0VUT1BUICovCi19Ci0KLXN0YXRpYyB1MzIgbWFwX3hiaXRz
KHUzMiB4KQotewotCXJldHVybiAoKHggJiAweDEpIDw8IDcpIHwKLQkJKCh4ICYgMHg3ZSkgPDwg
OSk7Ci19Ci0KLXZvaWQgYWFfY29tcHV0ZV9wZXJtcyhzdHJ1Y3QgYWFfZGZhICpkZmEsIHVuc2ln
bmVkIGludCBzdGF0ZSwKLQkJICAgICAgc3RydWN0IGFhX3Blcm1zICpwZXJtcykKLXsKLQkvKiBU
aGlzIG1hcHBpbmcgaXMgY29udnVsYXRlZCBkdWUgdG8gaGlzdG9yeS4KLQkgKiB2MS12NDogb25s
eSBmaWxlIHBlcm1zCi0JICogdjU6IGFkZGVkIHBvbGljeWRiIHdoaWNoIGRyb3BwZWQgaW4gcGVy
bSB1c2VyIGNvbmRpdGlvbmFsIHRvCi0JICogICAgIGdhaW4gbmV3IHBlcm0gYml0cywgYnV0IGhh
ZCB0byBtYXAgYXJvdW5kIHRoZSB4Yml0cyBiZWNhdXNlCi0JICogICAgIHRoZSB1c2Vyc3BhY2Ug
Y29tcGlsZXIgd2FzIHN0aWxsIG11bmdpbmcgdGhlbS4KLQkgKiB2OTogYWRkcyB1c2luZyB0aGUg
eGJpdHMgaW4gcG9saWN5ZGIgYmVjYXVzZSB0aGUgY29tcGlsZXIgbm93Ci0JICogICAgIHN1cHBv
cnRzIHRyZWF0aW5nIHBvbGljeWRiIHBlcm1pc3Npb24gYml0cyBkaWZmZXJlbnQuCi0JICogICAg
IFVuZm9ydHVuYXRlbHkgdGhlcmUgaXMgbm90IHdheSB0byBmb3JjZSBhdWRpdGluZyBvbiB0aGUK
LQkgKiAgICAgcGVybXMgcmVwcmVzZW50ZWQgYnkgdGhlIHhiaXRzCi0JICovCi0JKnBlcm1zID0g
KHN0cnVjdCBhYV9wZXJtcykgewotCQkuYWxsb3cgPSBkZmFfdXNlcl9hbGxvdyhkZmEsIHN0YXRl
KSB8Ci0JCQkgbWFwX3hiaXRzKGRmYV91c2VyX3hiaXRzKGRmYSwgc3RhdGUpKSwKLQkJLmF1ZGl0
ID0gZGZhX3VzZXJfYXVkaXQoZGZhLCBzdGF0ZSksCi0JCS5xdWlldCA9IGRmYV91c2VyX3F1aWV0
KGRmYSwgc3RhdGUpIHwKLQkJCSBtYXBfeGJpdHMoZGZhX290aGVyX3hiaXRzKGRmYSwgc3RhdGUp
KSwKLQl9OwotCi0JLyogZm9yIHY1LXY5IHBlcm0gbWFwcGluZyBpbiB0aGUgcG9saWN5ZGIsIHRo
ZSBvdGhlciBzZXQgaXMgdXNlZAotCSAqIHRvIGV4dGVuZCB0aGUgZ2VuZXJhbCBwZXJtIHNldAot
CSAqLwotCXBlcm1zLT5hbGxvdyB8PSBtYXBfb3RoZXIoZGZhX290aGVyX2FsbG93KGRmYSwgc3Rh
dGUpKTsKLQlwZXJtcy0+YXVkaXQgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9hdWRpdChkZmEsIHN0
YXRlKSk7Ci0JcGVybXMtPnF1aWV0IHw9IG1hcF9vdGhlcihkZmFfb3RoZXJfcXVpZXQoZGZhLCBz
dGF0ZSkpOwotfQotCiAvKioKICAqIGFhX3Blcm1zX2FjY3VtX3JhdyAtIGFjY3VtdWxhdGUgcGVy
bXMgd2l0aCBvdXQgbWFza2luZyBvZmYgb3ZlcmxhcHBpbmcgcGVybXMKICAqIEBhY2N1bSAtIHBl
cm1zIHN0cnVjdCB0byBhY2N1bXVsYXRlIGludG8KZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFy
bW9yL21vdW50LmMgYi9zZWN1cml0eS9hcHBhcm1vci9tb3VudC5jCmluZGV4IGY2MTI0NzI0MS4u
MWU5NzhjMmIxIDEwMDY0NAotLS0gYS9zZWN1cml0eS9hcHBhcm1vci9tb3VudC5jCisrKyBiL3Nl
Y3VyaXR5L2FwcGFybW9yL21vdW50LmMKQEAgLTIwMywyNSArMjAzLDYgQEAgc3RhdGljIHVuc2ln
bmVkIGludCBtYXRjaF9tbnRfZmxhZ3Moc3RydWN0IGFhX2RmYSAqZGZhLCB1bnNpZ25lZCBpbnQg
c3RhdGUsCiAJcmV0dXJuIHN0YXRlOwogfQogCi0vKioKLSAqIGNvbXB1dGVfbW50X3Blcm1zIC0g
Y29tcHV0ZSBtb3VudCBwZXJtaXNzaW9uIGFzc29jaWF0ZWQgd2l0aCBAc3RhdGUKLSAqIEBkZmE6
IGRmYSB0byBtYXRjaCBhZ2FpbnN0IChOT1QgTlVMTCkKLSAqIEBzdGF0ZTogc3RhdGUgbWF0Y2gg
ZmluaXNoZWQgaW4KLSAqCi0gKiBSZXR1cm5zOiBtb3VudCBwZXJtaXNzaW9ucwotICovCi1zdGF0
aWMgc3RydWN0IGFhX3Blcm1zIGNvbXB1dGVfbW50X3Blcm1zKHN0cnVjdCBhYV9kZmEgKmRmYSwK
LQkJCQkJICAgdW5zaWduZWQgaW50IHN0YXRlKQotewotCXN0cnVjdCBhYV9wZXJtcyBwZXJtcyA9
IHsKLQkJLmFsbG93ID0gZGZhX3VzZXJfYWxsb3coZGZhLCBzdGF0ZSksCi0JCS5hdWRpdCA9IGRm
YV91c2VyX2F1ZGl0KGRmYSwgc3RhdGUpLAotCQkucXVpZXQgPSBkZmFfdXNlcl9xdWlldChkZmEs
IHN0YXRlKSwKLQl9OwotCi0JcmV0dXJuIHBlcm1zOwotfQotCiBzdGF0aWMgY29uc3QgY2hhciAq
IGNvbnN0IG1udF9pbmZvX3RhYmxlW10gPSB7CiAJIm1hdGNoIHN1Y2NlZWRlZCIsCiAJImZhaWxl
ZCBtbnRwbnQgbWF0Y2giLApAQCAtMjM2LDUwICsyMTcsNTIgQEAgc3RhdGljIGNvbnN0IGNoYXIg
KiBjb25zdCBtbnRfaW5mb190YWJsZVtdID0gewogICogUmV0dXJucyAwIG9uIHN1Y2Nlc3MgZWxz
ZSBlbGVtZW50IHRoYXQgbWF0Y2ggZmFpbGVkIGluLCB0aGlzIGlzIHRoZQogICogaW5kZXggaW50
byB0aGUgbW50X2luZm9fdGFibGUgYWJvdmUKICAqLwotc3RhdGljIGludCBkb19tYXRjaF9tbnQo
c3RydWN0IGFhX2RmYSAqZGZhLCB1bnNpZ25lZCBpbnQgc3RhcnQsCitzdGF0aWMgaW50IGRvX21h
dGNoX21udChzdHJ1Y3QgYWFfcG9saWN5ZGIgKnBvbGljeSwgdW5zaWduZWQgaW50IHN0YXJ0LAog
CQkJY29uc3QgY2hhciAqbW50cG50LCBjb25zdCBjaGFyICpkZXZuYW1lLAogCQkJY29uc3QgY2hh
ciAqdHlwZSwgdW5zaWduZWQgbG9uZyBmbGFncywKIAkJCXZvaWQgKmRhdGEsIGJvb2wgYmluYXJ5
LCBzdHJ1Y3QgYWFfcGVybXMgKnBlcm1zKQogewogCXVuc2lnbmVkIGludCBzdGF0ZTsKIAotCUFB
X0JVRyghZGZhKTsKKwlBQV9CVUcoIXBvbGljeSk7CisJQUFfQlVHKCFwb2xpY3ktPmRmYSk7CisJ
QUFfQlVHKCFwb2xpY3ktPnBlcm1zKTsKIAlBQV9CVUcoIXBlcm1zKTsKIAotCXN0YXRlID0gYWFf
ZGZhX21hdGNoKGRmYSwgc3RhcnQsIG1udHBudCk7Ci0Jc3RhdGUgPSBhYV9kZmFfbnVsbF90cmFu
c2l0aW9uKGRmYSwgc3RhdGUpOworCXN0YXRlID0gYWFfZGZhX21hdGNoKHBvbGljeS0+ZGZhLCBz
dGFydCwgbW50cG50KTsKKwlzdGF0ZSA9IGFhX2RmYV9udWxsX3RyYW5zaXRpb24ocG9saWN5LT5k
ZmEsIHN0YXRlKTsKIAlpZiAoIXN0YXRlKQogCQlyZXR1cm4gMTsKIAogCWlmIChkZXZuYW1lKQot
CQlzdGF0ZSA9IGFhX2RmYV9tYXRjaChkZmEsIHN0YXRlLCBkZXZuYW1lKTsKLQlzdGF0ZSA9IGFh
X2RmYV9udWxsX3RyYW5zaXRpb24oZGZhLCBzdGF0ZSk7CisJCXN0YXRlID0gYWFfZGZhX21hdGNo
KHBvbGljeS0+ZGZhLCBzdGF0ZSwgZGV2bmFtZSk7CisJc3RhdGUgPSBhYV9kZmFfbnVsbF90cmFu
c2l0aW9uKHBvbGljeS0+ZGZhLCBzdGF0ZSk7CiAJaWYgKCFzdGF0ZSkKIAkJcmV0dXJuIDI7CiAK
IAlpZiAodHlwZSkKLQkJc3RhdGUgPSBhYV9kZmFfbWF0Y2goZGZhLCBzdGF0ZSwgdHlwZSk7Ci0J
c3RhdGUgPSBhYV9kZmFfbnVsbF90cmFuc2l0aW9uKGRmYSwgc3RhdGUpOworCQlzdGF0ZSA9IGFh
X2RmYV9tYXRjaChwb2xpY3ktPmRmYSwgc3RhdGUsIHR5cGUpOworCXN0YXRlID0gYWFfZGZhX251
bGxfdHJhbnNpdGlvbihwb2xpY3ktPmRmYSwgc3RhdGUpOwogCWlmICghc3RhdGUpCiAJCXJldHVy
biAzOwogCi0Jc3RhdGUgPSBtYXRjaF9tbnRfZmxhZ3MoZGZhLCBzdGF0ZSwgZmxhZ3MpOworCXN0
YXRlID0gbWF0Y2hfbW50X2ZsYWdzKHBvbGljeS0+ZGZhLCBzdGF0ZSwgZmxhZ3MpOwogCWlmICgh
c3RhdGUpCiAJCXJldHVybiA0OwotCSpwZXJtcyA9IGNvbXB1dGVfbW50X3Blcm1zKGRmYSwgc3Rh
dGUpOworCSpwZXJtcyA9ICphYV9sb29rdXBfcGVybXMocG9saWN5LT5wZXJtcywgc3RhdGUpOwog
CWlmIChwZXJtcy0+YWxsb3cgJiBBQV9NQVlfTU9VTlQpCiAJCXJldHVybiAwOwogCiAJLyogb25s
eSBtYXRjaCBkYXRhIGlmIG5vdCBiaW5hcnkgYW5kIHRoZSBERkEgZmxhZ3MgZGF0YSBpcyBleHBl
Y3RlZCAqLwogCWlmIChkYXRhICYmICFiaW5hcnkgJiYgKHBlcm1zLT5hbGxvdyAmIEFBX01OVF9D
T05UX01BVENIKSkgewotCQlzdGF0ZSA9IGFhX2RmYV9udWxsX3RyYW5zaXRpb24oZGZhLCBzdGF0
ZSk7CisJCXN0YXRlID0gYWFfZGZhX251bGxfdHJhbnNpdGlvbihwb2xpY3ktPmRmYSwgc3RhdGUp
OwogCQlpZiAoIXN0YXRlKQogCQkJcmV0dXJuIDQ7CiAKLQkJc3RhdGUgPSBhYV9kZmFfbWF0Y2go
ZGZhLCBzdGF0ZSwgZGF0YSk7CisJCXN0YXRlID0gYWFfZGZhX21hdGNoKHBvbGljeS0+ZGZhLCBz
dGF0ZSwgZGF0YSk7CiAJCWlmICghc3RhdGUpCiAJCQlyZXR1cm4gNTsKLQkJKnBlcm1zID0gY29t
cHV0ZV9tbnRfcGVybXMoZGZhLCBzdGF0ZSk7CisJCSpwZXJtcyA9ICphYV9sb29rdXBfcGVybXMo
cG9saWN5LT5wZXJtcywgc3RhdGUpOwogCQlpZiAocGVybXMtPmFsbG93ICYgQUFfTUFZX01PVU5U
KQogCQkJcmV0dXJuIDA7CiAJfQpAQCAtMzQxLDcgKzMyNCw3IEBAIHN0YXRpYyBpbnQgbWF0Y2hf
bW50X3BhdGhfc3RyKHN0cnVjdCBhYV9wcm9maWxlICpwcm9maWxlLAogCX0KIAogCWVycm9yID0g
LUVBQ0NFUzsKLQlwb3MgPSBkb19tYXRjaF9tbnQocHJvZmlsZS0+cG9saWN5LmRmYSwKKwlwb3Mg
PSBkb19tYXRjaF9tbnQoJnByb2ZpbGUtPnBvbGljeSwKIAkJCSAgIHByb2ZpbGUtPnBvbGljeS5z
dGFydFtBQV9DTEFTU19NT1VOVF0sCiAJCQkgICBtbnRwbnQsIGRldm5hbWUsIHR5cGUsIGZsYWdz
LCBkYXRhLCBiaW5hcnksICZwZXJtcyk7CiAJaWYgKHBvcykgewpAQCAtNjAxLDcgKzU4NCw3IEBA
IHN0YXRpYyBpbnQgcHJvZmlsZV91bW91bnQoc3RydWN0IGFhX3Byb2ZpbGUgKnByb2ZpbGUsIGNv
bnN0IHN0cnVjdCBwYXRoICpwYXRoLAogCXN0YXRlID0gYWFfZGZhX21hdGNoKHByb2ZpbGUtPnBv
bGljeS5kZmEsCiAJCQkgICAgIHByb2ZpbGUtPnBvbGljeS5zdGFydFtBQV9DTEFTU19NT1VOVF0s
CiAJCQkgICAgIG5hbWUpOwotCXBlcm1zID0gY29tcHV0ZV9tbnRfcGVybXMocHJvZmlsZS0+cG9s
aWN5LmRmYSwgc3RhdGUpOworCXBlcm1zID0gKmFhX2xvb2t1cF9wZXJtcyhwcm9maWxlLT5wb2xp
Y3kucGVybXMsIHN0YXRlKTsKIAlpZiAoQUFfTUFZX1VNT1VOVCAmIH5wZXJtcy5hbGxvdykKIAkJ
ZXJyb3IgPSAtRUFDQ0VTOwogCkBAIC02NzIsNyArNjU1LDcgQEAgc3RhdGljIHN0cnVjdCBhYV9s
YWJlbCAqYnVpbGRfcGl2b3Ryb290KHN0cnVjdCBhYV9wcm9maWxlICpwcm9maWxlLAogCQkJICAg
ICBuZXdfbmFtZSk7CiAJc3RhdGUgPSBhYV9kZmFfbnVsbF90cmFuc2l0aW9uKHByb2ZpbGUtPnBv
bGljeS5kZmEsIHN0YXRlKTsKIAlzdGF0ZSA9IGFhX2RmYV9tYXRjaChwcm9maWxlLT5wb2xpY3ku
ZGZhLCBzdGF0ZSwgb2xkX25hbWUpOwotCXBlcm1zID0gY29tcHV0ZV9tbnRfcGVybXMocHJvZmls
ZS0+cG9saWN5LmRmYSwgc3RhdGUpOworCXBlcm1zID0gKmFhX2xvb2t1cF9wZXJtcyhwcm9maWxl
LT5wb2xpY3kucGVybXMsIHN0YXRlKTsKIAogCWlmIChBQV9NQVlfUElWT1RST09UICYgcGVybXMu
YWxsb3cpCiAJCWVycm9yID0gMDsKZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFybW9yL25ldC5j
IGIvc2VjdXJpdHkvYXBwYXJtb3IvbmV0LmMKaW5kZXggN2VmZTRkMTcyLi44OGU4YTdlYTUgMTAw
NjQ0Ci0tLSBhL3NlY3VyaXR5L2FwcGFybW9yL25ldC5jCisrKyBiL3NlY3VyaXR5L2FwcGFybW9y
L25ldC5jCkBAIC0xMjUsNyArMTI1LDcgQEAgaW50IGFhX3Byb2ZpbGVfYWZfcGVybShzdHJ1Y3Qg
YWFfcHJvZmlsZSAqcHJvZmlsZSwgc3RydWN0IGNvbW1vbl9hdWRpdF9kYXRhICpzYSwKIAlidWZm
ZXJbMV0gPSBjcHVfdG9fYmUxNigodTE2KSB0eXBlKTsKIAlzdGF0ZSA9IGFhX2RmYV9tYXRjaF9s
ZW4ocHJvZmlsZS0+cG9saWN5LmRmYSwgc3RhdGUsIChjaGFyICopICZidWZmZXIsCiAJCQkJIDQp
OwotCWFhX2NvbXB1dGVfcGVybXMocHJvZmlsZS0+cG9saWN5LmRmYSwgc3RhdGUsICZwZXJtcyk7
CisJcGVybXMgPSAqYWFfbG9va3VwX3Blcm1zKHByb2ZpbGUtPnBvbGljeS5wZXJtcywgc3RhdGUp
OwogCWFhX2FwcGx5X21vZGVzX3RvX3Blcm1zKHByb2ZpbGUsICZwZXJtcyk7CiAKIAlyZXR1cm4g
YWFfY2hlY2tfcGVybXMocHJvZmlsZSwgJnBlcm1zLCByZXF1ZXN0LCBzYSwgYXVkaXRfbmV0X2Ni
KTsKZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeS5jIGIvc2VjdXJpdHkvYXBw
YXJtb3IvcG9saWN5LmMKaW5kZXggYzdiODRmYjU2Li5mNGQ1MDdkODEgMTAwNjQ0Ci0tLSBhL3Nl
Y3VyaXR5L2FwcGFybW9yL3BvbGljeS5jCisrKyBiL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeS5j
CkBAIC0yMzMsNyArMjMzLDcgQEAgdm9pZCBhYV9mcmVlX3Byb2ZpbGUoc3RydWN0IGFhX3Byb2Zp
bGUgKnByb2ZpbGUpCiAJa2ZyZWVfc2Vuc2l0aXZlKHByb2ZpbGUtPmRpcm5hbWUpOwogCWFhX3B1
dF9kZmEocHJvZmlsZS0+eG1hdGNoKTsKIAlhYV9wdXRfZGZhKHByb2ZpbGUtPnBvbGljeS5kZmEp
OwotCisJa3ZmcmVlKHByb2ZpbGUtPnBvbGljeS5wZXJtcyk7CiAJaWYgKHByb2ZpbGUtPmRhdGEp
IHsKIAkJcmh0ID0gcHJvZmlsZS0+ZGF0YTsKIAkJcHJvZmlsZS0+ZGF0YSA9IE5VTEw7CmRpZmYg
LS1naXQgYS9zZWN1cml0eS9hcHBhcm1vci9wb2xpY3lfdW5wYWNrLmMgYi9zZWN1cml0eS9hcHBh
cm1vci9wb2xpY3lfdW5wYWNrLmMKaW5kZXggNzAxMmZkODJmLi5kZmIxYjYxNmEgMTAwNjQ0Ci0t
LSBhL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeV91bnBhY2suYworKysgYi9zZWN1cml0eS9hcHBh
cm1vci9wb2xpY3lfdW5wYWNrLmMKQEAgLTY0Miw2ICs2NDIsNTQgQEAgc3RhdGljIGludCBkYXRh
Y21wKHN0cnVjdCByaGFzaHRhYmxlX2NvbXBhcmVfYXJnICphcmcsIGNvbnN0IHZvaWQgKm9iaikK
IAlyZXR1cm4gc3RyY21wKGRhdGEtPmtleSwgKmtleSk7CiB9CiAKK3N0YXRpYyB1MzIgbWFwX290
aGVyKHUzMiB4KQoreworCXJldHVybiAoKHggJiAweDMpIDw8IDgpIHwJLyogU0VUQVRUUi9HRVRB
VFRSICovCisJCSgoeCAmIDB4MWMpIDw8IDE4KSB8CS8qIEFDQ0VQVC9CSU5EL0xJU1RFTiAqLwor
CQkoKHggJiAweDYwKSA8PCAxOSk7CS8qIFNFVE9QVC9HRVRPUFQgKi8KK30KKworc3RhdGljIHN0
cnVjdCBhYV9wZXJtcyBjb21wdXRlX3Blcm1zX2VudHJ5KHN0cnVjdCBhYV9kZmEgKmRmYSwKKwkJ
CQkJICAgdW5zaWduZWQgaW50IHN0YXRlKQoreworCXN0cnVjdCBhYV9wZXJtcyBwZXJtcyA9IHsg
fTsKKworCXBlcm1zLmFsbG93ID0gZGZhX3VzZXJfYWxsb3coZGZhLCBzdGF0ZSk7CisJcGVybXMu
YXVkaXQgPSBkZmFfdXNlcl9hdWRpdChkZmEsIHN0YXRlKTsKKwlwZXJtcy5xdWlldCA9IGRmYV91
c2VyX3F1aWV0KGRmYSwgc3RhdGUpOworCisJLyogZm9yIHY1IHBlcm0gbWFwcGluZyBpbiB0aGUg
cG9saWN5ZGIsIHRoZSBvdGhlciBzZXQgaXMgdXNlZAorCSAqIHRvIGV4dGVuZCB0aGUgZ2VuZXJh
bCBwZXJtIHNldAorCSAqLworCisJcGVybXMuYWxsb3cgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9h
bGxvdyhkZmEsIHN0YXRlKSk7CisJcGVybXMuYXVkaXQgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9h
dWRpdChkZmEsIHN0YXRlKSk7CisJcGVybXMucXVpZXQgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9x
dWlldChkZmEsIHN0YXRlKSk7CisKKwlyZXR1cm4gcGVybXM7Cit9CisKK3N0YXRpYyBzdHJ1Y3Qg
YWFfcGVybXMgKmNvbXB1dGVfcGVybXMoc3RydWN0IGFhX2RmYSAqZGZhKQoreworCWludCBzdGF0
ZTsKKwlpbnQgc3RhdGVfY291bnQ7CisJc3RydWN0IGFhX3Blcm1zICp0YWJsZTsKKworCUFBX0JV
RyghZGZhKTsKKworCXN0YXRlX2NvdW50ID0gZGZhLT50YWJsZXNbWVlURF9JRF9CQVNFXS0+dGRf
bG9sZW47CisJLyogREZBcyBhcmUgcmVzdHJpY3RlZCBmcm9tIGhhdmluZyBhIHN0YXRlX2NvdW50
IG9mIGxlc3MgdGhhbiAyICovCisJdGFibGUgPSBrdmNhbGxvYyhzdGF0ZV9jb3VudCwgc2l6ZW9m
KHN0cnVjdCBhYV9wZXJtcyksIEdGUF9LRVJORUwpOworCWlmICghdGFibGUpCisJCXJldHVybiBO
VUxMOworCisJLyogemVybyBpbml0IHNvIHNraXAgdGhlIHRyYXAgc3RhdGUgKHN0YXRlID09IDAp
ICovCisJZm9yIChzdGF0ZSA9IDE7IHN0YXRlIDwgc3RhdGVfY291bnQ7IHN0YXRlKyspCisJCXRh
YmxlW3N0YXRlXSA9IGNvbXB1dGVfcGVybXNfZW50cnkoZGZhLCBzdGF0ZSk7CisKKwlyZXR1cm4g
dGFibGU7Cit9CisKIC8qKgogICogdW5wYWNrX3Byb2ZpbGUgLSB1bnBhY2sgYSBzZXJpYWxpemVk
IHByb2ZpbGUKICAqIEBlOiBzZXJpYWxpemVkIGRhdGEgZXh0ZW50IGluZm9ybWF0aW9uIChOT1Qg
TlVMTCkKQEAgLTgzNCw2ICs4ODIsMTEgQEAgc3RhdGljIHN0cnVjdCBhYV9wcm9maWxlICp1bnBh
Y2tfcHJvZmlsZShzdHJ1Y3QgYWFfZXh0ICplLCBjaGFyICoqbnNfbmFtZSkKIAkJCWdvdG8gZmFp
bDsKIAl9IGVsc2UKIAkJcHJvZmlsZS0+cG9saWN5LmRmYSA9IGFhX2dldF9kZmEobnVsbGRmYSk7
CisJcHJvZmlsZS0+cG9saWN5LnBlcm1zID0gY29tcHV0ZV9wZXJtcyhwcm9maWxlLT5wb2xpY3ku
ZGZhKTsKKwlpZiAoIXByb2ZpbGUtPnBvbGljeS5wZXJtcykgeworCQlpbmZvID0gImZhaWxlZCB0
byByZW1hcCBwb2xpY3lkYiBwZXJtaXNzaW9uIHRhYmxlIjsKKwkJZ290byBmYWlsOworCX0KIAog
CS8qIGdldCBmaWxlIHJ1bGVzICovCiAJcHJvZmlsZS0+ZmlsZS5kZmEgPSB1bnBhY2tfZGZhKGUp
Owo=


--=-NsEHkOL9wZGf/iPwXBxJ
Content-Disposition: attachment; filename="rebase-02-1cf26c3.patch"
Content-Type: text/x-patch; name="rebase-02-1cf26c3.patch"; charset="UTF-8"
Content-Transfer-Encoding: base64

VGhpcyBpcyBhIHJlYmFzZSBvZiBjb21taXQgMWNmMjZjM2QyYzRjICgiYXBwYXJtb3I6IGZpeCBh
cHBhcm1vciBtZWRpYXRpbmcKbG9ja2luZyBub24tZnMgdW5peCBzb2NrZXRzIikgb250byB0aGUg
Ni4xLjY5IGtlcm5lbCByZWxlYXNlLgoKVGVzdGVkLWJ5OiBNYXRoaWFzIEdpYmJlbnMgPGdpYm1h
dEBkZWJpYW4ub3JnPgoKZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeV91bnBh
Y2suYyBiL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeV91bnBhY2suYwppbmRleCBkZmIxYjYxNmEu
LmUwNTA4NDNmZiAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvcG9saWN5X3VucGFjay5j
CisrKyBiL3NlY3VyaXR5L2FwcGFybW9yL3BvbGljeV91bnBhY2suYwpAQCAtMzEsNiArMzEsNyBA
QAogI2RlZmluZSBLX0FCSV9NQVNLIDB4M2ZmCiAjZGVmaW5lIEZPUkNFX0NPTVBMQUlOX0ZMQUcg
MHg4MDAKICNkZWZpbmUgVkVSU0lPTl9MVChYLCBZKSAoKChYKSAmIEtfQUJJX01BU0spIDwgKChZ
KSAmIEtfQUJJX01BU0spKQorI2RlZmluZSBWRVJTSU9OX0xFKFgsIFkpICgoKFgpICYgS19BQklf
TUFTSykgPD0gKChZKSAmIEtfQUJJX01BU0spKQogI2RlZmluZSBWRVJTSU9OX0dUKFgsIFkpICgo
KFgpICYgS19BQklfTUFTSykgPiAoKFkpICYgS19BQklfTUFTSykpCiAKICNkZWZpbmUgdjUJNQkv
KiBiYXNlIHZlcnNpb24gKi8KQEAgLTY1MCw3ICs2NTEsOCBAQCBzdGF0aWMgdTMyIG1hcF9vdGhl
cih1MzIgeCkKIH0KIAogc3RhdGljIHN0cnVjdCBhYV9wZXJtcyBjb21wdXRlX3Blcm1zX2VudHJ5
KHN0cnVjdCBhYV9kZmEgKmRmYSwKLQkJCQkJICAgdW5zaWduZWQgaW50IHN0YXRlKQorCQkJCQkg
ICB1bnNpZ25lZCBpbnQgc3RhdGUsCisJCQkJCSAgIHUzMiB2ZXJzaW9uKQogewogCXN0cnVjdCBh
YV9wZXJtcyBwZXJtcyA9IHsgfTsKIApAQCAtNjYzLDEzICs2NjUsMTUgQEAgc3RhdGljIHN0cnVj
dCBhYV9wZXJtcyBjb21wdXRlX3Blcm1zX2VudHJ5KHN0cnVjdCBhYV9kZmEgKmRmYSwKIAkgKi8K
IAogCXBlcm1zLmFsbG93IHw9IG1hcF9vdGhlcihkZmFfb3RoZXJfYWxsb3coZGZhLCBzdGF0ZSkp
OworCWlmIChWRVJTSU9OX0xFKHZlcnNpb24sIHY4KSkKKwkJcGVybXMuYWxsb3cgfD0gQUFfTUFZ
X0xPQ0s7CiAJcGVybXMuYXVkaXQgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9hdWRpdChkZmEsIHN0
YXRlKSk7CiAJcGVybXMucXVpZXQgfD0gbWFwX290aGVyKGRmYV9vdGhlcl9xdWlldChkZmEsIHN0
YXRlKSk7CiAKIAlyZXR1cm4gcGVybXM7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgYWFfcGVybXMgKmNv
bXB1dGVfcGVybXMoc3RydWN0IGFhX2RmYSAqZGZhKQorc3RhdGljIHN0cnVjdCBhYV9wZXJtcyAq
Y29tcHV0ZV9wZXJtcyhzdHJ1Y3QgYWFfZGZhICpkZmEsIHUzMiB2ZXJzaW9uKQogewogCWludCBz
dGF0ZTsKIAlpbnQgc3RhdGVfY291bnQ7CkBAIC02ODUsNyArNjg5LDcgQEAgc3RhdGljIHN0cnVj
dCBhYV9wZXJtcyAqY29tcHV0ZV9wZXJtcyhzdHJ1Y3QgYWFfZGZhICpkZmEpCiAKIAkvKiB6ZXJv
IGluaXQgc28gc2tpcCB0aGUgdHJhcCBzdGF0ZSAoc3RhdGUgPT0gMCkgKi8KIAlmb3IgKHN0YXRl
ID0gMTsgc3RhdGUgPCBzdGF0ZV9jb3VudDsgc3RhdGUrKykKLQkJdGFibGVbc3RhdGVdID0gY29t
cHV0ZV9wZXJtc19lbnRyeShkZmEsIHN0YXRlKTsKKwkJdGFibGVbc3RhdGVdID0gY29tcHV0ZV9w
ZXJtc19lbnRyeShkZmEsIHN0YXRlLCB2ZXJzaW9uKTsKIAogCXJldHVybiB0YWJsZTsKIH0KQEAg
LTg4Miw3ICs4ODYsOCBAQCBzdGF0aWMgc3RydWN0IGFhX3Byb2ZpbGUgKnVucGFja19wcm9maWxl
KHN0cnVjdCBhYV9leHQgKmUsIGNoYXIgKipuc19uYW1lKQogCQkJZ290byBmYWlsOwogCX0gZWxz
ZQogCQlwcm9maWxlLT5wb2xpY3kuZGZhID0gYWFfZ2V0X2RmYShudWxsZGZhKTsKLQlwcm9maWxl
LT5wb2xpY3kucGVybXMgPSBjb21wdXRlX3Blcm1zKHByb2ZpbGUtPnBvbGljeS5kZmEpOworCXBy
b2ZpbGUtPnBvbGljeS5wZXJtcyA9IGNvbXB1dGVfcGVybXMocHJvZmlsZS0+cG9saWN5LmRmYSwK
KwkJCQkJICAgICAgZS0+dmVyc2lvbik7CiAJaWYgKCFwcm9maWxlLT5wb2xpY3kucGVybXMpIHsK
IAkJaW5mbyA9ICJmYWlsZWQgdG8gcmVtYXAgcG9saWN5ZGIgcGVybWlzc2lvbiB0YWJsZSI7CiAJ
CWdvdG8gZmFpbDsK


--=-NsEHkOL9wZGf/iPwXBxJ--

--=-HSr67mYslDupqiOqt9Ip
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----

iQIzBAABCgAdFiEE1Bp60H32xfynSJ8cKe7i1uz0QvkFAmWQ7Q8ACgkQKe7i1uz0
Qvl/VRAAlw79AAwBYj0GNJ6YGmMrzD9dBI1EREwnpnDo9JVaq1f1DnmcEZyIXHVw
bfbDylnQ+x+8SylcUyzg6K+ZfSzaw7pkVXu9osCRSSxgPXRZOjcOuOVaWFnsKUud
0qyUKK7ySvvkH+u6rV5VTovsaVC3DsLP9o29dKkw4YJygNfFb7TiDDDRWE6fHSbm
RfPv18w+Dq83Z8D1fO4c2v0fwEefLPAvBn+dPvQqgX/rg39gc8Q9/X0C24Q+l2or
5JWqvxYwRCRX1vRzFuyrStWPknFWg3SsvjWRNZ/ddJqiFNv9KNe7cu72Zf7CPiOJ
jasfFS6rHBybfeqcScpOQ7dZYrag5lPk6oO2YZsJ4SS/TjWZDGyu0qNQO4i1djVF
jH3ksQaWWDW+cPk3ES37GKjHDfcCQ0OiljKrxOCbsOWryFsn/SEBwMaRd28xsa2R
QXsJ4adcp7iq7TJn8TUDFIGi97s7eccTTWmy76aU2ESovLmxLNoksfjOIotpeGwe
kcxN7q0cJDVbDrJHg29Jhmg51MR6/Q6iNHW9ZWuGGsUcwRbWi4x6xjOv6j7bMkNs
c+NXB3vtjtLHxeV4fvgjN4cj43aSP52EqkY0TyWRgHxq7cIszW0jCcis4msyfOrm
i+uYLxKrGtx2e6AQ6anyH9XUGnQ9GapgPggPlHwSoFK+RmGLUO0=
=HyOk
-----END PGP SIGNATURE-----

--=-HSr67mYslDupqiOqt9Ip--

