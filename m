Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from huckleberry.canonical.com (huckleberry.canonical.com [91.189.94.19])
	by mail.lfdr.de (Postfix) with ESMTPS id 7664E25E6AE
	for <lists+apparmor@lfdr.de>; Sat,  5 Sep 2020 11:23:19 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=huckleberry.canonical.com)
	by huckleberry.canonical.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1kEUPg-0003S0-Iy; Sat, 05 Sep 2020 09:23:12 +0000
Received: from youngberry.canonical.com ([91.189.89.112])
 by huckleberry.canonical.com with esmtps
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <john.johansen@canonical.com>) id 1kEUPe-0003Ru-U7
 for apparmor@lists.ubuntu.com; Sat, 05 Sep 2020 09:23:10 +0000
Received: from static-50-53-58-29.bvtn.or.frontiernet.net ([50.53.58.29]
 helo=[192.168.192.153]) by youngberry.canonical.com with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <john.johansen@canonical.com>)
 id 1kEUPe-0008SX-Gc; Sat, 05 Sep 2020 09:23:10 +0000
To: =?UTF-8?Q?Jonas_Gro=c3=9fe_Sundrup?= <jgs-apparmor@letopolis.de>,
 apparmor@lists.ubuntu.com
References: <20200828212408.0002e474@mephala>
From: John Johansen <john.johansen@canonical.com>
Autocrypt: addr=john.johansen@canonical.com; prefer-encrypt=mutual; keydata=
 LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkU1bXJQb0JFQURB
 azE5UHNnVmdCS2tJbW1SMmlzUFE2bzdLSmhUVEtqSmR3VmJrV1NuTm4rbzZVcDVrCm5LUDFm
 NDlFQlFsY2VXZzF5cC9Od2JSOGFkK2VTRU8vdW1hL0srUHFXdkJwdEtDOVNXRDk3Rkc0dUI0
 L2Nhb20KTEVVOTdzTFFNdG52R1dkeHJ4VlJHTTRhbnpXWU1neno1VFptSWlWVFo0M091NVZw
 YVMxVnoxWlN4UDNoL3hLTgpaci9UY1c1V1FhaTh1M1BXVm5ia2poU1pQSHYxQmdoTjY5cXhF
 UG9tckpCbTFnbXR4M1ppVm1GWGx1d1RtVGdKCk9rcEZvbDduYkowaWxuWUhyQTdTWDNDdFIx
 dXBlVXBNYS9XSWFuVk85NldkVGpISElhNDNmYmhtUXViZTR0eFMKM0ZjUUxPSlZxUXN4NmxF
 OUI3cUFwcG05aFExMHFQV3dkZlB5LyswVzZBV3ROdTVBU2lHVkNJbld6bDJIQnFZZAovWmxs
 OTN6VXErTklvQ244c0RBTTlpSCt3dGFHRGNKeXdJR0luK2VkS050SzcyQU1nQ2hUZy9qMVpv
 V0g2WmVXClBqdVVmdWJWelp0bzFGTW9HSi9TRjRNbWRRRzFpUU50ZjRzRlpiRWdYdXk5Y0dp
 MmJvbUYwenZ5QkpTQU5weGwKS05CRFlLek42S3owOUhVQWtqbEZNTmdvbUwvY2pxZ0FCdEF4
 NTlMK2RWSVpmYUYyODFwSWNVWnp3dmg1K0pvRwplT1c1dUJTTWJFN0wzOG5zem9veWtJSjVY
 ckFjaGtKeE5mejdrK0ZuUWVLRWtOekVkMkxXYzNRRjRCUVpZUlQ2ClBISGdhM1JneWtXNSsx
 d1RNcUpJTGRtdGFQYlhyRjNGdm5WMExSUGN2NHhLeDdCM2ZHbTd5Z2Rvb3dBUkFRQUIKdEIx
 S2IyaHVJRXB2YUdGdWMyVnVJRHhxYjJodVFHcHFiWGd1Ym1WMFBva0NPZ1FUQVFvQUpBSWJB
 d1VMQ1FnSApBd1VWQ2drSUN3VVdBZ01CQUFJZUFRSVhnQVVDVG8wWVZ3SVpBUUFLQ1JBRkx6
 WndHTlhEMkx4SkQvOVRKWkNwCndsbmNUZ1llcmFFTWVEZmtXdjhjMUlzTTFqMEFtRTRWdEwr
 ZkU3ODBaVlA5Z2tqZ2tkWVN4dDdlY0VUUFRLTWEKWlNpc3JsMVJ3cVUwb29nWGRYUVNweHJH
 SDAxaWN1LzJuMGpjWVNxWUtnZ1B4eTc4QkdzMkxacTRYUGZKVFptSApaR25YR3EvZURyL21T
 bmowYWF2QkptTVo2amJpUHo2eUh0QllQWjlmZG84YnRjendQNDFZZVdvSXUyNi84SUk2CmYw
 WG0zVkM1b0FhOHY3UmQrUldaYThUTXdsaHpIRXh4ZWwzanRJN0l6ek9zbm1FOS84RG0wQVJE
 NWlUTENYd1IKMWN3SS9KOUJGL1MxWHY4UE4xaHVUM0l0Q05kYXRncDh6cW9Ka2dQVmptdnlM
 NjRRM2ZFa1liZkhPV3NhYmE5LwprQVZ0Qk56OVJURmg3SUhEZkVDVmFUb3VqQmQ3QnRQcXIr
 cUlqV0ZhZEpEM0k1ZUxDVkp2VnJyb2xyQ0FUbEZ0Ck4zWWtRczZKbjFBaUlWSVUzYkhSOEdq
 ZXZnejVMbDZTQ0dIZ1Jya3lScG5TWWFVL3VMZ24zN042QVl4aS9RQUwKK2J5M0N5RUZManpX
 QUV2eVE4YnEzSXVjbjdKRWJoUy9KLy9kVXFMb2VVZjh0c0dpMDB6bXJJVFpZZUZZQVJoUQpN
 dHNmaXpJclZEdHoxaVBmL1pNcDVnUkJuaXlqcFhuMTMxY20zTTNndjZIclFzQUdubjhBSnJ1
 OEdEaTVYSllJCmNvLzEreC9xRWlOMm5DbGFBT3BiaHpOMmVVdlBEWTVXMHEzYkEvWnAybWZH
 NTJ2YlJJK3RRMEJyMUhkL3ZzbnQKVUhPOTAzbU1aZXAyTnpOM0JaNXFFdlB2RzRyVzVacTJE
 cHliV2JRclNtOW9iaUJLYjJoaGJuTmxiaUE4YW05bwpiaTVxYjJoaGJuTmxia0JqWVc1dmJt
 bGpZV3d1WTI5dFBva0NOd1FUQVFvQUlRVUNUbzBYV2dJYkF3VUxDUWdICkF3VVZDZ2tJQ3dV
 V0FnTUJBQUllQVFJWGdBQUtDUkFGTHpad0dOWEQySXRNRC85anliYzg3ZE00dUFIazZ5Tk0K
 TjBZL0JGbW10VFdWc09CaHFPbm9iNGkzOEJyRE8yQzFoUUNQQ1FlNExMczEvNHB0ZW92UXQ4
 QjJGeXJQVmp3Zwo3alpUSE5LNzRyNmxDQ1Z4eDN5dTFCN1U5UG80VlRrY3NsVmIxL3FtV3V4
 OFhXY040eXZrVHFsTCtHeHB5Sm45CjlaWmZmWEpjNk9oNlRtT2ZiS0d2TXV1djVhclNJQTNK
 SEZMZjlhTHZadEExaXNKVXI3cFM5YXBnOXVUVUdVcDcKd2ZWMFdUNlQzZUczbXRVVTJ1cDVK
 VjQ4NTBMMDVqSFM2dVdpZS9ZK3lmSk9iaXlyeE4vNlpxVzVHb25oTEJxLwptc3pjVjV2QlQz
 QkRWZTNSdkY2WGRNOU9oUG4xK1k4MXg1NCt2UTExM044aUx3RjdHR2ExNFp5SVZBTlpEMEkw
 CkhqUnZhMmsvUnFJUlR6S3l1UEg1cGtsY0tIVlBFRk1tT3pNVCtGT294Tmp2Uys3K3dHMktN
 RFlFbUhQcjFQSkIKWlNaZUh6SzE5dGZhbFBNcHBGeGkrc3lZTGFnTjBtQjdKSFF3WTdjclV1
 T0RoeWNxNjBZVnoxdGFFeWd1M1l2MgoyL0kxRUNHSHZLSEc2d2M5MG80M0MvZWxIRUNYbkVo
 N3RLcGxEY3BJQytPQ21NeEtIaFI0NitYY1p2Z3c0RGdiCjdjYTgzZVFSM0NHODlMdlFwVzJM
 TEtFRUJEajdoWmhrTGJra1BSWm0zdzhKWTQ0YXc4VnRneFdkblNFTUNMeEwKSU9OaDZ1Wjcv
 L0RZVnRjSWFNSllrZWJhWnRHZENwMElnVVpiMjQvVmR2WkNZYk82MkhrLzNWbzFuWHdIVUVz
 Mwo2RC92MWJUMFJaRmk2OUxnc0NjT2N4NGdZTGtDRFFST1pxejZBUkFBb3F3NmtrQmhXeU0x
 ZnZnYW1BVmplWjZuCktFZm5SV2JrQzk0TDFFc0pMdXAzV2IyWDBBQk5PSFNrYlNENHBBdUMy
 dEtGL0VHQnQ1Q1A3UWRWS1JHY1F6QWQKNmIyYzFJZHk5Ukx3Nnc0Z2krbm4vZDFQbTFra1lo
 a1NpNXpXYUlnMG01UlFVaytFbDh6a2Y1dGNFLzFOMFo1TwpLMkpoandGdTViWDBhMGw0Y0ZH
 V1ZRRWNpVk1ES1J0eE1qRXRrM1N4RmFsbTZaZFEycHAyODIyY2xucTR6WjltCld1MWQyd2F4
 aXorYjVJYTR3ZURZYTduNDFVUmNCRVViSkFnbmljSmtKdENUd3lJeElXMktuVnlPcmp2a1F6
 SUIKdmFQMEZkUDJ2dlpvUE1kbENJek9sSWtQTGd4RTBJV3VlVFhlQkpoTnMwMXBiOGJMcW1U
 SU1sdTRMdkJFTEEvdgplaWFqajVzOHk1NDJIL2FIc2ZCZjRNUVVoSHhPL0JaVjdoMDZLU1Vm
 SWFZN09nQWdLdUdOQjNVaWFJVVM1K2E5CmduRU9RTER4S1J5L2E3UTF2OVMrTnZ4KzdqOGlI
 M2prUUpoeFQ2WkJoWkdSeDBna0gzVCtGMG5ORG01TmFKVXMKYXN3Z0pycUZaa1VHZDJNcm0x
 cW5Ld1hpQXQ4U0ljRU5kcTMzUjBLS0tSQzgwWGd3ajhKbjMwdlhMU0crTk8xRwpIMFVNY0F4
 TXd5L3B2azZMVTVKR2paUjczSjVVTFZoSDRNTGJEZ2dEM21QYWlHOCtmb3RUckpVUHFxaGc5
 aHlVCkVQcFlHN3NxdDc0WG43OStDRVpjakxIenlsNnZBRkUyVzBreGxMdFF0VVpVSE8zNmFm
 RnY4cUdwTzNacVB2akIKVXVhdFhGNnR2VVFDd2YzSDZYTUFFUUVBQVlrQ0h3UVlBUW9BQ1FV
 Q1RtYXMrZ0liREFBS0NSQUZMelp3R05YRAoyRC9YRC8wZGRNLzRhaTFiK1RsMWp6bkthalgz
 a0crTWVFWWVJNGY0MHZjbzNyT0xyblJHRk9jYnl5ZlZGNjlNCktlcGllNE93b0kxamNUVTBB
 RGVjbmJXbkROSHByMFNjenhCTXJvM2Juckxoc212anVuVFlJdnNzQlp0QjRhVkoKanVMSUxQ
 VWxuaEZxYTdmYlZxMFpRamJpVi9ydDJqQkVOZG05cGJKWjZHam5wWUljQWJQQ0NhL2ZmTDQv
 U1FSUwpZSFhvaEdpaVM0eTVqQlRtSzVsdGZld0xPdzAyZmtleEgrSUpGcnJHQlhEU2c2bjJT
 Z3hubisrTkYzNGZYY205CnBpYXczbUtzSUNtKzBoZE5oNGFmR1o2SVdWOFBHMnRlb29WRHA0
 ZFlpaCsreFgvWFM4ekJDYzFPOXc0bnpsUDIKZ0t6bHFTV2JoaVdwaWZSSkJGYTRXdEFlSlRk
 WFlkMzdqL0JJNFJXV2hueXc3YUFQTkdqMzN5dEdITlVmNlJvMgovanRqNHRGMXkvUUZYcWpK
 Ry93R2pwZHRSZmJ0VWpxTEhJc3ZmUE5OSnEvOTU4cDc0bmRBQ2lkbFdTSHpqK09wCjI2S3Bi
 Rm5td05PMHBzaVVzbmh2SEZ3UE8vdkFibDNSc1I1KzBSbytodnMyY0VtUXV2OXIvYkRsQ2Zw
 enAydDMKY0srcmh4VXFpc094OERaZnoxQm5rYW9DUkZidnZ2ays3TC9mb21QbnRHUGtxSmNp
 WUU4VEdIa1p3MWhPa3UrNApPb00yR0I1bkVEbGorMlRGL2pMUStFaXBYOVBrUEpZdnhmUmxD
 NmRLOFBLS2ZYOUtkZm1BSWNnSGZuVjFqU24rCjh5SDJkakJQdEtpcVcwSjY5YUlzeXg3aVYv
 MDNwYVBDakpoN1hxOXZBenlkTjVVL1VBPT0KPTZQL2IKLS0tLS1FTkQgUEdQIFBVQkxJQyBL
 RVkgQkxPQ0stLS0tLQo=
Organization: Canonical
Message-ID: <ec488116-30cf-47e9-ccfd-fe83d1b282ec@canonical.com>
Date: Sat, 5 Sep 2020 02:23:08 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <20200828212408.0002e474@mephala>
Content-Language: en-US
Subject: Re: [apparmor] Kernel-regression?
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>

T24gOC8yOC8yMCAxMjoyNCBQTSwgSm9uYXMgR3Jvw59lIFN1bmRydXAgd3JvdGU6Cj4gSGksCj4g
Cj4gSSBhcHBhcmVudGx5IGp1c3QgcmFuIGludG8gYSBrZXJuZWwgcmVncmVzc2lvbiB3aXRoIEFw
cEFybW9yIGFuZCBJJ20KPiBsb29raW5nIGZvciB0aGUgY29ycmVjdCBidWd0cmFja2VyIG5vdy4K
PiAKPiBUaGUgc2l0dWF0aW9uIGF0IGhhbmQgaXMgcm91Z2hseSB0aGUgZm9sbG93aW5nOgo+IAo+
IC91c3IvYmluL2VsZW1lbnQtZGVza3RvcAo+ICAgaXMgYSBiYXNoLXNjcmlwdCwgdGhlcmVmb3Jl
IHNwYXducyBhIGJhc2gKPiAgICAgc3Bhd25zICJlbGVjdHJvbiAvdXNyL2xpYi9lbGVtZW50L2Vs
ZW1lbnQuYXNhciIKPiAKPiBJIGhhdmUgYSBwcm9maWxlIGZvciAvdXNyL2Jpbi9lbGVtZW50LWRl
c2t0b3AgY29udGFpbmVyaXppbmcgdGhpcyBzdGFjawo+IHVzaW5nIGl4IGZvciBleGVjdXRpb24u
IFRoaXMsIGlmIEkgaGF2ZSB0aGlzIGNvcnJlY3RseSwgc2hvdWxkIHNwYXduCj4gZXZlcnkgc3Vi
cHJvY2VzcyBvZiB0aGUgYWZvcmVtZW50aW9uZWQgZXhlY3V0YWJsZSBpbiB0aGUgc2FtZSBwcm9m
aWxlLAo+IGhlbmNlIHRoaXMgc2hvdWxkIGFsc28gd29yayByZWN1cnNpdmVseS4KPiBJIG9ic2Vy
dmUgdGhlIHByb2JsZW0gc3BlY2lmaWNhbGx5IGZvciB0aGUgZWxlbWVudC1kZXNrdG9wLXByb2Zp
bGUsIEkKPiBoYXZlIG90aGVyIEFwcEFybW9yLXByb2ZpbGVzIHRoYXQgc3RpbGwgd29yayBhcyBp
bnRlbmRlZC4KPiAKPiBJdCBkb2VzIHdvcmsgb24gTGludXggNS44LjEsIGJ1dCBpdCBhcHBhcmVu
dGx5IGRvZXNuJ3QgYW55bW9yZSBvbiA1LjguMgo+IGFuZCA1LjguMywgd2hlcmUgSSBnZXQgYSBw
ZXJtaXNzaW9uIGRlbmllZCBmb3IgYmFzaCBmb3IKClRoaXMgd291bGQgcG9pbnQgdG8gYSBrZXJu
ZWwgY2hhbmdlLiBEbyB5b3Uga25vdyBob3cgdG8gYmlzZWN0PyBPciBhcmUKeW91IHdpbGxpbmcg
dG8gdGVzdCBkZWJ1ZyBrZXJuZWxzIGJ1aWx0IGZvciB5b3UgYmFzZWQgb24gYSBiaXNlY3QuCgpU
aGUgb3RoZXIgb3B0aW9uIGlzIHRyeSB0byByZXByb2R1Y2UgbG9jYWxseSBzbyB0aGF0IHdlIGNh
biB0aGVuIGJpc2VjdApiYXNlZCBvbiB0aGF0LgoKPiAvZXRjL2xkLnNvLmNhY2hlIGFzIHdlbGwg
YXMgL3Vzci9saWIvbGlicmVhZGxpbmUuc28uOC4wIChhbGJlaXQgbm90Cj4gY2hhbmdpbmcgdGhl
IEFwcEFybW9yLXByb2ZpbGUsIGFuZCBib3RoIGFyZSB3aGl0ZWxpc3RlZCBmb3IgcmVhZGluZwo+
ICh3aGljaCBpcyB0aGUgcGVybWlzc2lvbiB0aGF0J3MgZGVuaWVkIGJ5IEFwcEFybW9yIGFjY29y
ZGluZyB0byBkbWVzZyksCj4gb25lIHZpYSAiL3Vzci8qKiBybWl4LCIsIHRoZSBvdGhlciB2aWEg
Ii9ldGMvbGQuc28uY2FjaGUgbXIsIiB0aGVyZWZvcmUKPiBJIGFtIDkwJSBzdXJlIHRoYXQgdGhp
cyBpcyBub3QgYSBtaXN0YWtlIG9uIG15IHNpZGUgYW5kIDEwJSBzdXJlIHRoYXQKPiBJIG1pc3Nl
ZCBzb21ldGhpbmcsIGJ1dCBkb24ndCBrbm93IHdoYXQpLgo+IApBcmUgZWl0aGVyIHRoZXNlIGZp
bGVzIHN5bWxpbmtzIGFyZSB5b3VyIHN5c3RlbT8KCj4gVGhlIGJ1ZyBzZWVtcyB0byBiZSBpbiB0
aGUgIml4IiwgYXMgZXhwbGljaXRseSB3aGl0ZWxpc3RpbmcgYm90aCBmaWxlcwo+IGluIHRoZSBw
cm9maWxlIG1hbnVhbGx5IGRvZXMgbm90IHJlc29sdmUgdGhlIHNpdHVhdGlvbiwgYXQgbGVhc3Qg
bm90CgppeCBkb2Vzbid0IGluIGFuZCBvZiBpdCBzZWxmIGdpdmUgbW1hcCBleGVjdXRhYmxlIHBl
cm1pc3Npb25zLiBZb3Ugd291bGQKbmVlZCB0byBoYXZlIGxpYnMgaGF2aW5nIHRoZSBtIHBlcm1p
c3Npb24gd2hpY2ggeW91IGRpZCBtZW50aW9uIGFib3ZlLgoKPiBmb3IgbGlicmVhZGxpbmUsIGFu
ZCB0aGUgcHJvY2VzcyB0aGF0IGRpZXMgb24gaXQgaXMgdGhlIGJhc2ggaW4gdGhlCj4gc2Vjb25k
IHN0YWdlLiAoSSBzb21laG93IG1hbmFnZWQgdG8gZml4IGl0IGZvciBsZC5zby5jYWNoZSwgbm90
IHN1cmUgd2h5Cj4gdGhhdCB3b3JrcyB3aGVyZWFzIGZvciBsaWJyZWFkbGluZSBpdCBkb2Vzbid0
KS4KPiAKc3ltbGluaz8gQW5vdGhlciBwb3NzaWJpbGl0eSBpcyBzb21ldGhpbmcgYXJvdW5kIGFu
IGluaGVyaXRlZCBmaWxlCmRlc2NyaXB0b3IgZm9yIGFuIHVuY29uZmluZWQgYmFzaC4KCj4gVGhl
IHF1ZXN0aW9uIG5vdyBpczogd2hpY2ggYnVndHJhY2tlciBkb2VzIHRoaXMgZ28gdG8gdG8gYmUg
YmVzdAo+IHJlcG9ydGVkIGlmIGl0IGNvbnRpbnVlcyB0byBiZSBhIGJ1Zz8gS2VybmVsIG9yIEFw
cEFybW9yLVRvb2xzPwoKWW91IGNhbiByZXBvcnQgYnVncyBob3cgZXZlciB3b3JrcyBiZXN0IGZv
ciB5b3UuIEp1c3QgcmVwb3J0IHRoZW0gdG8KdGhlIG1sIGlmIHlvdSB3YW50LgoKQXMgZm9yIGJ1
ZyB0cmFja2VycwoKRm9yIGtlcm5lbCBpc3N1ZXM6Cmh0dHBzOi8vZ2l0bGFiLmNvbS9hcHBhcm1v
ci9hcHBhcm1vci1rZXJuZWwvLS9pc3N1ZXMKCnlvdSBjb3VsZCBhbHNvIHVzZQpodHRwczovL2dp
dGxhYi5jb20vYXBwYXJtb3IvYXBwYXJtb3IvLS9pc3N1ZXMKd2hpY2ggaXMgdGhlIG1vcmUgYWN0
aXZlIHRyYWNrZXIsIGJ1dCBpcyBwcmVkb21pbmF0ZWx5IHVzZWQgZm9yCnRoZSB1c2Vyc3BhY2Uu
IFRoYXQgc2FpZCBpZiB0aGF0IG9uZSB3b3JrcyBmb3IgeW91IG92ZXIgdGhlIGtlcm5lbApzcGVj
aWZpYyBvbmUsIGZlZWwgZnJlZS4KCllvdSBjYW4gb2YgY291cnNlIHVzZSBhbHRlcm5hdGl2ZSBi
dWcgdHJhY2tlcnMsIGJ1dCBpZiB5b3UgZG8gcGxlYXNlCnNlbmQgc29tZSBraW5kIG9mIG1lc3Nh
Z2UgdG8gdGhlIG1sIGFzIHdlIGRvbid0IGdldCBkaXJlY3Qgbm90aWZpY2F0aW9ucwoKVWJ1bnR1
OiBodHRwczovL2J1Z3MubGF1bmNocGFkLm5ldC9hcHBhcm1vci8Kb3IgZm9yIFVidW50dSBzcGVj
aWZpYzogaHR0cHM6Ly9idWdzLmxhdW5jaHBhZC5uZXQvdWJ1bnR1Lytzb3VyY2UvYXBwYXJtb3IK
CnN1c2U6IGh0dHBzOi8vYnVnemlsbGEub3BlbnN1c2Uub3JnCgpkZWJpYW46IGh0dHBzOi8vYnVn
cy5kZWJpYW4ub3JnCgpvciBpZiB5b3UgYXJlIHN1cmUgaXQgaXMgdGhlIGFwcGFybW9yIGtlcm5l
bCBjb21wb25lbnQgeW91IGNhbiBmaWxlIGl0Cm9uIHRoZSBrZXJuZWwncyBidWd6aWxsYSwgYnV0
IGFnYWluIHBsZWFzZSBtZXNzYWdlIHVzIGJlY2F1c2Ugd2UgZG8gbm90CmdldCBub3RpZmljYXRp
b25zIG9mIGJ1Z3MgZmlsZWQgdGhlcmUuCgoKPiBTZWVtcyB0byBiZSB0aGUga2VybmVsLCBidXQg
SSBkb24ndCBrbm93IGhvdyBBcHBBcm1vciBpcyBpbXBsZW1lbnRlZCwKPiBpZiBpdCdzIHNvbWV0
aGluZyBpbXBsZW1lbnRlZCBpbiBlQlBGIGl0J3MgcG9zc2libHkgbm90IHRoZSBrZXJuZWw/Cj4g
Ckl0IGlzIG5vdCBpbXBsZW1lbnRlZCBpbiBlQlBGLiBJdHMgYW4gTFNNIG1vZHVsZSBpbiB0aGUg
bGludXgga2VybmVsCndpdGggcG9saWN5IGJlaW5nIGJ1aWx0IGludG8gYSBzdGF0ZSBtYWNoaW5l
IGluIHVzZXJzcGFjZSBhbmQgbG9hZGVkCmludG8gdGhlIGtlcm5lbC4KClRoZSBwb2xpY3kgaXMg
ZmxleGlibGUgYnV0IChkZWxpYmVyYXRlbHkpIG5vIHdoZXJlIG5lYXIgYXMgZmxleGlibGUgYXMK
ZUJQRi4gVGhpcyBwcm92aWRlcyBhc3N1cmFuY2VzIG9uIHByb3ZhYmlsaXR5LCBwcm92YWJsZSBt
aW5pbWl6YXRpb24sCmFuZCBjb25zaXN0ZW5jeSBhcm91bmQgY2FjaGluZyBldGMuCgo+IE1heWJl
IEkgaGF2ZSBhbm90aGVyIGlkZWEgZm9yIHRoZSByb290IGNhdXNlLCBidXQgY3VycmVudGx5IEkn
bSBhIGJpdAo+IG91dCBvZiBpZGVhcy4gKE9wZW4gZm9yIGlkZWFzLCB0aG91Z2gsIGlmIGFueW9u
ZSBoYXMgYSBndWVzcyB3aGF0J3MgdGhlCj4gaXNzdWUgYXQgcGxheS4pCj4gCmlmIGl0IHdvcmtl
ZCBpbiA1LjguMSBhbmQgbm90IDUuOC4yIHRoYXQgcmVhbGx5IHNtZWxscyBsaWtlIGEga2VybmVs
Cmlzc3VlLiBNeSBpbW1lZGlhdGUgdHdvIHN1c3BlY3RzIGFyZSB0aGUgbW1hcCBjb2RlIGFuZCBi
cHJtLiBCdXQgSSBuZWVkCnRvIGRpZyBtb3JlLgoKCgotLSAKQXBwQXJtb3IgbWFpbGluZyBsaXN0
CkFwcEFybW9yQGxpc3RzLnVidW50dS5jb20KTW9kaWZ5IHNldHRpbmdzIG9yIHVuc3Vic2NyaWJl
IGF0OiBodHRwczovL2xpc3RzLnVidW50dS5jb20vbWFpbG1hbi9saXN0aW5mby9hcHBhcm1vcgo=
