Return-Path: <apparmor-bounces@lists.ubuntu.com>
X-Original-To: lists+apparmor@lfdr.de
Delivered-To: lists+apparmor@lfdr.de
Received: from huckleberry.canonical.com (huckleberry.canonical.com [91.189.94.19])
	by mail.lfdr.de (Postfix) with ESMTPS id 771082FDCC3
	for <lists+apparmor@lfdr.de>; Wed, 20 Jan 2021 23:57:40 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=huckleberry.canonical.com)
	by huckleberry.canonical.com with esmtp (Exim 4.86_2)
	(envelope-from <apparmor-bounces@lists.ubuntu.com>)
	id 1l2MPv-0000yA-5p; Wed, 20 Jan 2021 22:57:35 +0000
Received: from out03.mta.xmission.com ([166.70.13.233])
 by huckleberry.canonical.com with esmtps
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <ebiederm@xmission.com>) id 1l2MPs-0000y3-Eg
 for apparmor@lists.ubuntu.com; Wed, 20 Jan 2021 22:57:32 +0000
Received: from in02.mta.xmission.com ([166.70.13.52])
 by out03.mta.xmission.com with esmtps (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2MPp-009WxF-JN; Wed, 20 Jan 2021 15:57:29 -0700
Received: from ip68-227-160-95.om.om.cox.net ([68.227.160.95]
 helo=x220.xmission.com)
 by in02.mta.xmission.com with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.93)
 (envelope-from <ebiederm@xmission.com>)
 id 1l2MPn-00GoMG-Fv; Wed, 20 Jan 2021 15:57:29 -0700
From: ebiederm@xmission.com (Eric W. Biederman)
To: John Johansen <john.johansen@canonical.com>
References: <87lfcn5mfz.fsf@x220.int.ebiederm.org>
 <c887b7f1-7c50-cd9d-fd97-b89274c2765c@canonical.com>
Date: Wed, 20 Jan 2021 16:56:16 -0600
In-Reply-To: <c887b7f1-7c50-cd9d-fd97-b89274c2765c@canonical.com> (John
 Johansen's message of "Wed, 20 Jan 2021 14:32:35 -0800")
Message-ID: <878s8n43qn.fsf@x220.int.ebiederm.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
X-XM-SPF: eid=1l2MPn-00GoMG-Fv; ; ; mid=<878s8n43qn.fsf@x220.int.ebiederm.org>;
 ; ; hst=in02.mta.xmission.com; ; ; ip=68.227.160.95; ; ;
 frm=ebiederm@xmission.com; ; ; spf=neutral
X-XM-AID: U2FsdGVkX18BBQjsIm9t3nEXl7UMRAlNaYT0CE290Fg=
X-SA-Exim-Connect-IP: 68.227.160.95
X-SA-Exim-Mail-From: ebiederm@xmission.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on sa05.xmission.com
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=8.0 tests=ALL_TRUSTED,BAYES_50,
 DCC_CHECK_NEGATIVE,TR_Symld_Words,T_TM2_M_HEADER_IN_MSG,XMSubLong
 autolearn=disabled version=3.4.2
X-Spam-Report: * -1.0 ALL_TRUSTED Passed through trusted hosts only via SMTP
 *  0.8 BAYES_50 BODY: Bayes spam probability is 40 to 60%
 *      [score: 0.5000] *  0.7 XMSubLong Long Subject
 *  1.5 TR_Symld_Words too many words that have symbols inside
 *  0.0 T_TM2_M_HEADER_IN_MSG BODY: No description available.
 * -0.0 DCC_CHECK_NEGATIVE Not listed in DCC
 *      [sa05 1397; Body=1 Fuz1=1 Fuz2=1]
X-Spam-DCC: XMission; sa05 1397; Body=1 Fuz1=1 Fuz2=1 
X-Spam-Combo: **;John Johansen <john.johansen@canonical.com>
X-Spam-Relay-Country: 
X-Spam-Timing: total 1152 ms - load_scoreonly_sql: 0.07 (0.0%),
 signal_user_changed: 11 (0.9%), b_tie_ro: 9 (0.8%), parse: 1.42 (0.1%),
 extract_message_metadata: 19 (1.7%), get_uri_detail_list: 6 (0.5%),
 tests_pri_-1000: 14 (1.2%), tests_pri_-950: 1.29 (0.1%),
 tests_pri_-900: 0.98 (0.1%), tests_pri_-90: 229 (19.9%), check_bayes:
 209 (18.1%), b_tokenize: 19 (1.7%), b_tok_get_all: 15 (1.3%),
 b_comp_prob: 5 (0.5%), b_tok_touch_all: 163 (14.1%), b_finish: 1.04
 (0.1%), tests_pri_0: 856 (74.3%), check_dkim_signature: 0.91 (0.1%),
 check_dkim_adsp: 3.1 (0.3%), poll_dns_idle: 1.11 (0.1%), tests_pri_10:
 2.2 (0.2%), tests_pri_500: 13 (1.1%), rewrite_mail: 0.00 (0.0%)
X-SA-Exim-Version: 4.2.1 (built Sat, 08 Feb 2020 21:53:50 +0000)
X-SA-Exim-Scanned: Yes (on in02.mta.xmission.com)
Subject: Re: [apparmor] [RFC][PATCH] apparmor: Enforce progressively tighter
	permissions for no_new_privs
X-BeenThere: apparmor@lists.ubuntu.com
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: AppArmor discussion <apparmor.lists.ubuntu.com>
List-Unsubscribe: <https://lists.ubuntu.com/mailman/options/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=unsubscribe>
List-Archive: <https://lists.ubuntu.com/archives/apparmor>
List-Post: <mailto:apparmor@lists.ubuntu.com>
List-Help: <mailto:apparmor-request@lists.ubuntu.com?subject=help>
List-Subscribe: <https://lists.ubuntu.com/mailman/listinfo/apparmor>,
 <mailto:apparmor-request@lists.ubuntu.com?subject=subscribe>
Cc: Kees Cook <keescook@chromium.org>, apparmor@lists.ubuntu.com,
 linux-kernel@vger.kernel.org, Andy Lutomirski <luto@amacapital.net>,
 linux-security-module@vger.kernel.org,
 James Morris <james.l.morris@oracle.com>, James Morris <jmorris@namei.org>,
 Linus Torvalds <torvalds@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: apparmor-bounces@lists.ubuntu.com
Sender: "AppArmor" <apparmor-bounces@lists.ubuntu.com>

ClRMO0RSID8/Pz9zZWxpbnV4IGFuZCBhcHBhcm1vciBpZ25vcmUgbm9fbmV3X3ByaXZzPz8/PwoK
V2hhdD8/Pz8/CgoKSm9obiBKb2hhbnNlbiA8am9obi5qb2hhbnNlbkBjYW5vbmljYWwuY29tPiB3
cml0ZXM6Cgo+IE9uIDEvMjAvMjEgMToyNiBQTSwgRXJpYyBXLiBCaWVkZXJtYW4gd3JvdGU6Cj4+
IAo+PiBUaGUgY3VycmVudCB1bmRlcnN0YW5kaW5nIG9mIGFwcGFybW9yIHdpdGggcmVzcGVjdCB0
byBub19uZXdfcHJpdnMgaXMgYXQKPj4gb2RkcyB3aXRoIGhvdyBub19uZXdfcHJpdnMgaXMgaW1w
bGVtZW50ZWQgYW5kIHVuZGVyc3Rvb2QgYnkgdGhlIHJlc3Qgb2YKPj4gdGhlIGtlcm5lbC4KPj4g
Cj4+IFRoZSBkb2N1bWVudGF0aW9uIG9mIG5vX25ld19wcml2cyBzdGF0ZXM6Cj4+PiBXaXRoIGBg
bm9fbmV3X3ByaXZzYGAgc2V0LCBgYGV4ZWN2ZSgpYGAgcHJvbWlzZXMgbm90IHRvIGdyYW50IHRo
ZQo+Pj4gcHJpdmlsZWdlIHRvIGRvIGFueXRoaW5nIHRoYXQgY291bGQgbm90IGhhdmUgYmVlbiBk
b25lIHdpdGhvdXQgdGhlCj4+PiBleGVjdmUgY2FsbC4KPj4gCj4+IEFuZCByZWFkaW5nIHRocm91
Z2ggdGhlIGtlcm5lbCBleGNlcHQgZm9yIGFwcGFybW9yIHRoYXQgZGVzY3JpcHRpb24KPj4gbWF0
Y2hlcyB3aGF0IGlzIGltcGxlbWVudGVkLgo+PiAKPgo+IFRoYXQgaXMgbm90IGNvcnJlY3QuCj4K
PiBjb21taXQgN2IwZDBiNDBjZDc4ICgic2VsaW51eDogUGVybWl0IGJvdW5kZWQgdHJhbnNpdGlv
bnMgdW5kZXIKPiAgICAgTk9fTkVXX1BSSVZTIG9yIE5PU1VJRC4iKQo+Cj4gQWxsb3dzIGZvciBi
b3VuZCB0cmFuc2l0aW9ucyB1bmRlciBzZWxpbnV4Cj4gYW5kCgpBcyBJIHVuZGVyc3RhbmQgYSBi
b3VuZCB0cmFuc2l0aW9uIGl0IGlzIGEgdHJhbnNpdGlvbiB0byBhIHN0YXRlIHdpdGgKYSBzZXQg
b2YgcGVybWlzc2lvbnMgdGhhdCBhcmUgYSBzdWJzZXQgb2Ygd2hhdCB3YXMgcHJldmlvdXNseSBo
ZWxkLgpXaGljaCBpcyBjb25zaXN0ZW50IHdpdGggdGhlIG1hbmRhdGUgb2Ygbm9fbmV3X3ByaXZz
LgoKPiBjb21taXQgYWY2M2Y0MTkzZjlmIHNlbGludXg6IEdlbmVyYWxpemUgc3VwcG9ydCBmb3Ig
Tk5QL25vc3VpZCBTRUxpbnV4Cj4gICAgIGRvbWFpbiB0cmFuc2l0aW9ucwo+Cj4gZ29lcyBmdXJ0
aGVyIGFuZCAiRGVjb3VwbGUgTk5QL25vc3VpZCBmcm9tIFNFTGludXggdHJhbnNpdGlvbnMiLgoK
WWVzLiAgTG9va2luZyBhdCB0aGF0IGNvbW1pdCBJIGRvIHNlZSB0aGF0IHNlbGludXggYXBwZWFy
cyB0byBiZQpkZWxpYmVyYXRlbHkgaWdub3Jpbmcgbm9fbmV3X3ByaXZzIGluIHNwZWNpZmljIGNh
c2VzLgoKV1RGLgoKPj4gVGhlcmUgYXJlIHR3byBtYWpvciBkaXZlcmdlbmNlcyBvZiBhcHBhcm1v
ciBmcm9tIHRoaXMgZGVmaW5pdGlvbjoKPj4gLSBwcm9jX3NldGF0dHIgZW5mb3JjZXMgbGltaXRh
dGlvbnMgd2hlbiBub19uZXdfcHJpdnMgYXJlIHNldC4KPj4gLSB0aGUgbGltaXRhdGlvbiBpcyBl
bmZvcmNlZCBmcm9tIHRoZSBhcHBhcmVudCB0aW1lIHdoZW4gbm9fbmV3X3ByaXZzIGlzCj4+ICAg
c2V0IGluc3RlYWQgb2YgZ3VhcmFudGVlaW5nIHRoYXQgZWFjaCBleGVjdmUgaGFzIHByb2dyZXNz
aXZlbHkgbW9yZQo+PiAgIG5hcnJvdyBwZXJtaXNzaW9ucy4KPj4gCj4+IFRoZSBjb2RlIGluIGFw
cGFybW9yIHRoYXQgYXR0ZW1wdHMgdG8gZGlzY292ZXIgdGhlIGFwcGFybW9yIGxhYmVsIGF0IHRo
ZQo+PiBwb2ludCB3aGVyZSBub19uZXdfcHJpdnMgaXMgc2V0IGlzIG5vdCByb2J1c3QuICBUaGUg
Y2FwdHVyZSBoYXBwZW5zIGEKPj4gbG9uZyB0aW1lIGFmdGVyIG5vX25ld19wcml2cyBpcyBzZXQu
Cj4+IAo+Cj4geWVzLCBidXQgdGhhdCBzaG91bGRuJ3QgbWF0dGVyLiBBcyBhcHBhcm1vciBoYXMg
bm90IGNoYW5nZWQgaXRzIGxhYmVsCj4gYXQgYW55IHBvaW50IGJldHdlZW4gd2hlbiBub19uZXdf
cHJpdnMgd2FzIHNldCBhbmQgd2hlbiB0aGUgY2hlY2sgaXMKPiBkb25lLiBBcHBBcm1vciBpcyBh
dHRlbXB0aW5nIHRvIGNoYW5nZSBpdCBsYWJlbCwgYW5kIGlmIGl0IGZpbmRzIE5OUAo+IGhhcyBi
ZWVuIHNldCB3ZSBjYXB0dXJlIHdoYXQgdGhlIGNvbmZpbmVtZW50IHdhcy4KPgo+PiBDYXB0dXJp
bmcgdGhlIGxhYmVsIGF0IHRoZSBwb2ludCB3aGVyZSBub19uZXdfcHJpdnMgaXMgc2V0IGlzCj4+
IHByYWN0aWNhbGx5IGltcG9zc2libGUgdG8gaW1wbGVtZW50IHJvYnVzdGx5LiAgVG9kYXkgdGhl
IHJ1bGUgaXMgc3RydWN0Cj4+IGNyZWQgY2FuIG9ubHkgYmUgY2hhbmdlZCBieSBpdCdzIGN1cnJl
bnQgdGFzay4gIFRvZGF5Cj4KPiByaWdodCwgYW5kIGFwcGFybW9yIG9ubHkgZXZlciBoYXMgdGhl
IHRhc2sgdXBkYXRlIGl0cyBvd24gbGFiZWwuCj4KPj4gU0VDQ09NUF9GSUxURVJfRkxBR19UU1lO
QyBzZXRzIG5vX25ld19wcml2cyBmcm9tIGFub3RoZXIgdGhyZWFkLiAgQQo+PiByb2J1c3QgaW1w
bGVtZW50YXRpb24gd291bGQgcmVxdWlyZSBjaGFuZ2luZyBzb21ldGhpbmcgZnVuZGFtZW50YWwg
aW4KPj4gaG93IGNyZWRzIGFyZSBtYW5hZ2VkIGZvciBTRUNDT01QX0ZJTFRFUl9GTEFHX1RTWU5D
IHRvIGJlIGFibGUgdG8KPj4gY2FwdHVyZSB0aGUgY3JlZCBhdCB0aGUgcG9pbnQgaXQgaXMgc2V0
Lgo+PiAKPiBJIGFtIG9wZW4gdG8gc3VwcG9ydGluZyBzb21ldGhpbmcgbGlrZSB0aGF0LgoKSSBj
YW4ndCBzZWUgaG93IGl0IHdvdWxkIGJlIHBvc3NpYmxlIHRvIGJlIHJvYnVzdCB3aXRob3V0IGNv
bXBsZXRlbHkKY2hhbmdpbmcgdGhlIGxvY2tpbmcuICBMb2NraW5nIHRoYXQgcmlnaHQgbm93IGlu
IGEgc2ltcGxlciBtb2RlbCB3ZSBoYXZlCm5vdCBmaWd1cmVkIG91dCBob3cgdG8gbWFrZSBvYnZp
b3VzbHkgY29ycmVjdC4KCj4+IEZ1dGhlcm1vcmUgZ2l2ZW4gdGhlIGNvbnNpc3RlbnQgZG9jdW1l
bnRhdGlvbiBhbmQgaG93IGV2ZXJ5dGhpbmcgZWxzZQo+PiBpbXBsZW1lbnRzIG5vX25ld19wcml2
cywgbm90IGhhdmluZyB0aGUgcGVybWlzc2lvbnMgZ2V0IHByb2dyZXNzaXZlbHkKPgo+IEFnYWlu
IHNlZSBhYm92ZQoKRXhjZXB0IHdoZXJlIHNlbGludXggZGVsaWJlcmF0ZWx5IGlnbm9yZXMgbm9f
bmV3X3ByaXZzIHRoaXMgaXMKY29uc2l0ZW50LgoKPj4gdGlnaHRlciBpcyBhIGZvb3RndW4gYWlt
ZWQgYXQgdXNlcnNwYWNlLiAgSSBmdWxseSBleHBlY3QgaXQgdG8gYnJlYWsgYW55Cj4KPiB0aWdo
dGVyIGlzIHNvbWV3aGF0IHJlbGF0aXZlLCBub3IgaXMgaXQgb25seSBwcm9ncmVzc2l2ZWx5IHRp
Z2h0ZXIgaXQKPiBpcyBib3VuZGVkIGFnYWluc3QgdGhlIHNuYXBzaG90IG9mIHRoZSBsYWJlbCB0
aGF0IHdhcyBvbiB0aGUgdGFzay4KCldoaWNoIGlzIHRoZSBCVUcgSSBhbSByZXBvcnRpbmcuICBJ
dCBzaG91bGQgYmUgcHJvZ3Jlc3NpbmdseSB0aWdodGVyLgoKPj4gc2VjdXJpdHkgc2Vuc2l0aXZl
IHNvZnR3YXJlIHRoYXQgdXNlcyBub19uZXdfcHJpdnMgYW5kIHdhcyBub3QKPj4gZGVsaWJlcmF0
ZWx5IGRlc2lnbmVkIGFuZCB0ZXN0ZWQgYWdhaW5zdCBhcHBhcm1vci4KPj4gCj4KPiBDdXJyZW50
bHkgdGhlIHNpdHVhdGlvbiBoYXMgYmVjb21lIGVpdGhlciBhbiBlaXRoZXIgb3IgY2hvaWNlIGJl
dHdlZW4KPiB0aGUgTFNNIGFuZCBOTlAuIFdlIGFyZSB0cnlpbmcgdG8gd2FsayBhIGJhbGFuY2Uu
IElkZWFsbHkgYXBwYXJtb3IKPiB3b3VsZCBsaWtlIHRvIGRvIHNvbWV0aGluZyBzaW1pbGFyIHRv
IHNlbGludXggYW5kIGRlY291cGxlIHRoZSBsYWJlbAo+IHRyYW5zaXRpb24gZnJvbSBOTlAgYW5k
IG5vc3VpZCB2aWEgYW4gaW50ZXJuYWwgY2FwYWJpbGl0eSwgYnV0IHdlCj4gaGF2ZSBub3QgZ29u
ZSB0aGVyZSB5ZXQuCgpXaHkgZG8geW91IG5lZWQgdG8gZXNjYXBlIG5vX25ld19wcml2cy4gIFdo
eSBkb2VzIGFueW9uZSBuZWVkIHRvIGVzY2FwZQpub19uZXdfcHJpdnM/Cgo+PiBBdm9pZCB0aGUg
cXVlc3Rpb25hYmxlIGFuZCBoYXJkIHRvIGZpeCBpbXBsZW1lbnRhdGlvbiBhbmQgdGhlCj4+IHBv
dGVudGlhbCB0byBjb25mdXNlIHVzZXJzcGFjZSBieSBoYXZpbmcgbm9fbmV3X3ByaXZzIGVuZm9y
Y2UKPj4gcHJvZ3Jlc3NpbnZlbHkgdGlnaHRlciBwZXJtaXNzaW9ucy4KPj4gCj4KPiBUaGlzIHdv
dWxkIGNvbXBsZXRlbHkgYnJlYWsgc2V2ZXJhbCB1c2UgY2FzZXMuCgpFbmZvcmNpbmcgbm9fbmV3
X3ByaXZzIGFzIGRvY3VtZW50ZWQgd291bGQgYnJlYWsgdXNlcnNwYWNlPwoKSXNuJ3QgdGhlIG9w
cG9zaXRlIHRydWUgdGhhdCB5b3UgYXJlIGJyZWFraW5nIHBlb3BsZSBieSBub3QgZW5mb3JjaW5n
Cml0PwoKPj4gRml4ZXM6IDlmY2Y3OGNjYTE5OCAoImFwcGFybW9yOiB1cGRhdGUgZG9tYWluIHRy
YW5zaXRpb25zIHRoYXQgYXJlIHN1YnNldHMgb2YgY29uZmluZW1lbnQgYXQgbm5wIikKPj4gU2ln
bmVkLW9mZi1ieTogRXJpYyBXLiBCaWVkZXJtYW4gPGViaWVkZXJtQHhtaXNzaW9uLmNvbT4KPj4g
LS0tCj4+IAo+PiBJIGNhbWUgYWNjcm9zcyB0aGlzIHdoaWxlIGV4YW1pbmluZyB0aGUgcGxhY2Vz
IGNyZWRfZ3VhcmRfbXV0ZXggaXMKPj4gdXNlZCBhbmQgdHJ5aW5nIHRvIGZpbmQgYSB3YXkgdG8g
bWFrZSB0aG9zZSBjb2RlIHBhdGhzIGxlc3MgaW5zYW5lLgo+PiAKPj4gSWYgaXQgd291bGQgYmUg
bW9yZSBwYWxsYXRhYmxlIEkgd291bGQgbm90IG1pbmQgcmVtb3ZpbmcgdGhlCj4+IHRhc2tfbm9f
bmV3X3ByaXZzIHRlc3QgZW50aXJlbHkgZnJvbSBhYV9jaGFuZ2VfaGF0IGFuZCBhYV9jaGFuZ2Vf
cHJvZmlsZQo+PiBhcyB0aG9zZSBhcmUgbm90IHBhcnQgb2YgZXhlYywgc28gYXJndWFibHkgbm9f
bmV3X3ByaXZzIHNob3VsZCBub3QgY2FyZQo+PiBhYm91dCB0aGVtIGF0IGFsbC4KPj4gCj4+IENh
biB3ZSBwbGVhc2UgZ2V0IHJpZCBvZiB0aGUgaHVnZSBzZW1hbnRpYyB3YXJ0IGFuZCBwYWluIGlu
IHRoZSBpbXBsZW1lbnRhdGlvbj8KPj4gCj4+ICBzZWN1cml0eS9hcHBhcm1vci9kb21haW4uYyAg
ICAgICB8IDM5ICsrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCj4+ICBzZWN1cml0eS9h
cHBhcm1vci9pbmNsdWRlL3Rhc2suaCB8ICA0IC0tLS0KPj4gIHNlY3VyaXR5L2FwcGFybW9yL3Rh
c2suYyAgICAgICAgIHwgIDcgLS0tLS0tCj4+ICAzIGZpbGVzIGNoYW5nZWQsIDQgaW5zZXJ0aW9u
cygrKSwgNDYgZGVsZXRpb25zKC0pCj4+IAo+PiBkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJt
b3IvZG9tYWluLmMgYi9zZWN1cml0eS9hcHBhcm1vci9kb21haW4uYwo+PiBpbmRleCBmOTE5ZWJk
MDQyZmQuLjhmNzcwNTliZjg5MCAxMDA2NDQKPj4gLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvZG9t
YWluLmMKPj4gKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvZG9tYWluLmMKPj4gQEAgLTg2OSwxNyAr
ODY5LDYgQEAgaW50IGFwcGFybW9yX2Jwcm1fY3JlZHNfZm9yX2V4ZWMoc3RydWN0IGxpbnV4X2Jp
bnBybSAqYnBybSkKPj4gIAo+PiAgCWxhYmVsID0gYWFfZ2V0X25ld2VzdF9sYWJlbChjcmVkX2xh
YmVsKGJwcm0tPmNyZWQpKTsKPj4gIAo+PiAtCS8qCj4+IC0JICogRGV0ZWN0IG5vIG5ldyBwcml2
cyBiZWluZyBzZXQsIGFuZCBzdG9yZSB0aGUgbGFiZWwgaXQKPj4gLQkgKiBvY2N1cnJlZCB1bmRl
ci4gSWRlYWxseSB0aGlzIHdvdWxkIGhhcHBlbiB3aGVuIG5ucAo+PiAtCSAqIGlzIHNldCBidXQg
dGhlcmUgaXNuJ3QgYSBnb29kIHdheSB0byBkbyB0aGF0IHlldC4KPj4gLQkgKgo+PiAtCSAqIFRl
c3RpbmcgZm9yIHVuY29uZmluZWQgbXVzdCBiZSBkb25lIGJlZm9yZSB0aGUgc3Vic2V0IHRlc3QK
Pj4gLQkgKi8KPj4gLQlpZiAoKGJwcm0tPnVuc2FmZSAmIExTTV9VTlNBRkVfTk9fTkVXX1BSSVZT
KSAmJiAhdW5jb25maW5lZChsYWJlbCkgJiYKPj4gLQkgICAgIWN0eC0+bm5wKQo+PiAtCQljdHgt
Pm5ucCA9IGFhX2dldF9sYWJlbChsYWJlbCk7Cj4+IC0KPj4gIAkvKiBidWZmZXIgZnJlZWQgYmVs
b3csIG5hbWUgaXMgcG9pbnRlciBpbnRvIGJ1ZmZlciAqLwo+PiAgCWJ1ZmZlciA9IGFhX2dldF9i
dWZmZXIoZmFsc2UpOwo+PiAgCWlmICghYnVmZmVyKSB7Cj4+IEBAIC05MTUsNyArOTA0LDcgQEAg
aW50IGFwcGFybW9yX2Jwcm1fY3JlZHNfZm9yX2V4ZWMoc3RydWN0IGxpbnV4X2JpbnBybSAqYnBy
bSkKPj4gIAkgKi8KPj4gIAlpZiAoKGJwcm0tPnVuc2FmZSAmIExTTV9VTlNBRkVfTk9fTkVXX1BS
SVZTKSAmJgo+PiAgCSAgICAhdW5jb25maW5lZChsYWJlbCkgJiYKPj4gLQkgICAgIWFhX2xhYmVs
X2lzX3VuY29uZmluZWRfc3Vic2V0KG5ldywgY3R4LT5ubnApKSB7Cj4+ICsJICAgICFhYV9sYWJl
bF9pc191bmNvbmZpbmVkX3N1YnNldChuZXcsIGxhYmVsKSkgewo+PiAgCQllcnJvciA9IC1FUEVS
TTsKPj4gIAkJaW5mbyA9ICJubyBuZXcgcHJpdnMiOwo+PiAgCQlnb3RvIGF1ZGl0Owo+PiBAQCAt
MTE1OCwxNiArMTE0Nyw2IEBAIGludCBhYV9jaGFuZ2VfaGF0KGNvbnN0IGNoYXIgKmhhdHNbXSwg
aW50IGNvdW50LCB1NjQgdG9rZW4sIGludCBmbGFncykKPj4gIAlsYWJlbCA9IGFhX2dldF9uZXdl
c3RfY3JlZF9sYWJlbChjcmVkKTsKPj4gIAlwcmV2aW91cyA9IGFhX2dldF9uZXdlc3RfbGFiZWwo
Y3R4LT5wcmV2aW91cyk7Cj4+ICAKPj4gLQkvKgo+PiAtCSAqIERldGVjdCBubyBuZXcgcHJpdnMg
YmVpbmcgc2V0LCBhbmQgc3RvcmUgdGhlIGxhYmVsIGl0Cj4+IC0JICogb2NjdXJyZWQgdW5kZXIu
IElkZWFsbHkgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiBubnAKPj4gLQkgKiBpcyBzZXQgYnV0IHRo
ZXJlIGlzbid0IGEgZ29vZCB3YXkgdG8gZG8gdGhhdCB5ZXQuCj4+IC0JICoKPj4gLQkgKiBUZXN0
aW5nIGZvciB1bmNvbmZpbmVkIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHN1YnNldCB0ZXN0Cj4+
IC0JICovCj4+IC0JaWYgKHRhc2tfbm9fbmV3X3ByaXZzKGN1cnJlbnQpICYmICF1bmNvbmZpbmVk
KGxhYmVsKSAmJiAhY3R4LT5ubnApCj4+IC0JCWN0eC0+bm5wID0gYWFfZ2V0X2xhYmVsKGxhYmVs
KTsKPj4gLQo+PiAgCWlmICh1bmNvbmZpbmVkKGxhYmVsKSkgewo+PiAgCQlpbmZvID0gInVuY29u
ZmluZWQgY2FuIG5vdCBjaGFuZ2VfaGF0IjsKPj4gIAkJZXJyb3IgPSAtRVBFUk07Cj4+IEBAIC0x
MTkzLDcgKzExNzIsNyBAQCBpbnQgYWFfY2hhbmdlX2hhdChjb25zdCBjaGFyICpoYXRzW10sIGlu
dCBjb3VudCwgdTY0IHRva2VuLCBpbnQgZmxhZ3MpCj4+ICAJCSAqIHJlZHVjZSByZXN0cmljdGlv
bnMuCj4+ICAJCSAqLwo+PiAgCQlpZiAodGFza19ub19uZXdfcHJpdnMoY3VycmVudCkgJiYgIXVu
Y29uZmluZWQobGFiZWwpICYmCj4+IC0JCSAgICAhYWFfbGFiZWxfaXNfdW5jb25maW5lZF9zdWJz
ZXQobmV3LCBjdHgtPm5ucCkpIHsKPj4gKwkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1
YnNldChuZXcsIGxhYmVsKSkgewo+PiAgCQkJLyogbm90IGFuIGFwcGFybW9yIGRlbmlhbCBwZXIg
c2UsIHNvIGRvbid0IGxvZyBpdCAqLwo+PiAgCQkJQUFfREVCVUcoIm5vX25ld19wcml2cyAtIGNo
YW5nZV9oYXQgZGVuaWVkIik7Cj4+ICAJCQllcnJvciA9IC1FUEVSTTsKPj4gQEAgLTEyMTQsNyAr
MTE5Myw3IEBAIGludCBhYV9jaGFuZ2VfaGF0KGNvbnN0IGNoYXIgKmhhdHNbXSwgaW50IGNvdW50
LCB1NjQgdG9rZW4sIGludCBmbGFncykKPj4gIAkJICogcmVkdWNlIHJlc3RyaWN0aW9ucy4KPj4g
IAkJICovCj4+ICAJCWlmICh0YXNrX25vX25ld19wcml2cyhjdXJyZW50KSAmJiAhdW5jb25maW5l
ZChsYWJlbCkgJiYKPj4gLQkJICAgICFhYV9sYWJlbF9pc191bmNvbmZpbmVkX3N1YnNldChwcmV2
aW91cywgY3R4LT5ubnApKSB7Cj4+ICsJCSAgICAhYWFfbGFiZWxfaXNfdW5jb25maW5lZF9zdWJz
ZXQocHJldmlvdXMsIGxhYmVsKSkgewo+PiAgCQkJLyogbm90IGFuIGFwcGFybW9yIGRlbmlhbCBw
ZXIgc2UsIHNvIGRvbid0IGxvZyBpdCAqLwo+PiAgCQkJQUFfREVCVUcoIm5vX25ld19wcml2cyAt
IGNoYW5nZV9oYXQgZGVuaWVkIik7Cj4+ICAJCQllcnJvciA9IC1FUEVSTTsKPj4gQEAgLTEzMDMs
MTYgKzEyODIsNiBAQCBpbnQgYWFfY2hhbmdlX3Byb2ZpbGUoY29uc3QgY2hhciAqZnFuYW1lLCBp
bnQgZmxhZ3MpCj4+ICAKPj4gIAlsYWJlbCA9IGFhX2dldF9jdXJyZW50X2xhYmVsKCk7Cj4+ICAK
Pj4gLQkvKgo+PiAtCSAqIERldGVjdCBubyBuZXcgcHJpdnMgYmVpbmcgc2V0LCBhbmQgc3RvcmUg
dGhlIGxhYmVsIGl0Cj4+IC0JICogb2NjdXJyZWQgdW5kZXIuIElkZWFsbHkgdGhpcyB3b3VsZCBo
YXBwZW4gd2hlbiBubnAKPj4gLQkgKiBpcyBzZXQgYnV0IHRoZXJlIGlzbid0IGEgZ29vZCB3YXkg
dG8gZG8gdGhhdCB5ZXQuCj4+IC0JICoKPj4gLQkgKiBUZXN0aW5nIGZvciB1bmNvbmZpbmVkIG11
c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHN1YnNldCB0ZXN0Cj4+IC0JICovCj4+IC0JaWYgKHRhc2tf
bm9fbmV3X3ByaXZzKGN1cnJlbnQpICYmICF1bmNvbmZpbmVkKGxhYmVsKSAmJiAhY3R4LT5ubnAp
Cj4+IC0JCWN0eC0+bm5wID0gYWFfZ2V0X2xhYmVsKGxhYmVsKTsKPj4gLQo+PiAgCWlmICghZnFu
YW1lIHx8ICEqZnFuYW1lKSB7Cj4+ICAJCWFhX3B1dF9sYWJlbChsYWJlbCk7Cj4+ICAJCUFBX0RF
QlVHKCJubyBwcm9maWxlIG5hbWUiKTsKPj4gQEAgLTE0MDksNyArMTM3OCw3IEBAIGludCBhYV9j
aGFuZ2VfcHJvZmlsZShjb25zdCBjaGFyICpmcW5hbWUsIGludCBmbGFncykKPj4gIAkJICogcmVk
dWNlIHJlc3RyaWN0aW9ucy4KPj4gIAkJICovCj4+ICAJCWlmICh0YXNrX25vX25ld19wcml2cyhj
dXJyZW50KSAmJiAhdW5jb25maW5lZChsYWJlbCkgJiYKPj4gLQkJICAgICFhYV9sYWJlbF9pc191
bmNvbmZpbmVkX3N1YnNldChuZXcsIGN0eC0+bm5wKSkgewo+PiArCQkgICAgIWFhX2xhYmVsX2lz
X3VuY29uZmluZWRfc3Vic2V0KG5ldywgbGFiZWwpKSB7Cj4+ICAJCQkvKiBub3QgYW4gYXBwYXJt
b3IgZGVuaWFsIHBlciBzZSwgc28gZG9uJ3QgbG9nIGl0ICovCj4+ICAJCQlBQV9ERUJVRygibm9f
bmV3X3ByaXZzIC0gY2hhbmdlX2hhdCBkZW5pZWQiKTsKPj4gIAkJCWVycm9yID0gLUVQRVJNOwo+
PiBkaWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmggYi9zZWN1cml0
eS9hcHBhcm1vci9pbmNsdWRlL3Rhc2suaAo+PiBpbmRleCBmMTNkMTIzNzNiMjUuLjhhOWMyNThl
MjAxOCAxMDA2NDQKPj4gLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmgKPj4g
KysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvaW5jbHVkZS90YXNrLmgKPj4gQEAgLTE3LDEzICsxNywx
MSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBhYV90YXNrX2N0eCAqdGFza19jdHgoc3RydWN0IHRh
c2tfc3RydWN0ICp0YXNrKQo+PiAgCj4+ICAvKgo+PiAgICogc3RydWN0IGFhX3Rhc2tfY3R4IC0g
aW5mb3JtYXRpb24gZm9yIGN1cnJlbnQgdGFzayBsYWJlbCBjaGFuZ2UKPj4gLSAqIEBubnA6IHNu
YXBzaG90IG9mIGxhYmVsIGF0IHRpbWUgb2Ygbm9fbmV3X3ByaXZzCj4+ICAgKiBAb25leGVjOiBw
cm9maWxlIHRvIHRyYW5zaXRpb24gdG8gb24gbmV4dCBleGVjICAoTUFZIEJFIE5VTEwpCj4+ICAg
KiBAcHJldmlvdXM6IHByb2ZpbGUgdGhlIHRhc2sgbWF5IHJldHVybiB0byAgICAgKE1BWSBCRSBO
VUxMKQo+PiAgICogQHRva2VuOiBtYWdpYyB2YWx1ZSB0aGUgdGFzayBtdXN0IGtub3cgZm9yIHJl
dHVybmluZyB0byBAcHJldmlvdXNfcHJvZmlsZQo+PiAgICovCj4+ICBzdHJ1Y3QgYWFfdGFza19j
dHggewo+PiAtCXN0cnVjdCBhYV9sYWJlbCAqbm5wOwo+PiAgCXN0cnVjdCBhYV9sYWJlbCAqb25l
eGVjOwo+PiAgCXN0cnVjdCBhYV9sYWJlbCAqcHJldmlvdXM7Cj4+ICAJdTY0IHRva2VuOwo+PiBA
QCAtNDIsNyArNDAsNiBAQCBzdHJ1Y3QgYWFfbGFiZWwgKmFhX2dldF90YXNrX2xhYmVsKHN0cnVj
dCB0YXNrX3N0cnVjdCAqdGFzayk7Cj4+ICBzdGF0aWMgaW5saW5lIHZvaWQgYWFfZnJlZV90YXNr
X2N0eChzdHJ1Y3QgYWFfdGFza19jdHggKmN0eCkKPj4gIHsKPj4gIAlpZiAoY3R4KSB7Cj4+IC0J
CWFhX3B1dF9sYWJlbChjdHgtPm5ucCk7Cj4+ICAJCWFhX3B1dF9sYWJlbChjdHgtPnByZXZpb3Vz
KTsKPj4gIAkJYWFfcHV0X2xhYmVsKGN0eC0+b25leGVjKTsKPj4gIAl9Cj4+IEBAIC01Nyw3ICs1
NCw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBhYV9kdXBfdGFza19jdHgoc3RydWN0IGFhX3Rhc2tf
Y3R4ICpuZXcsCj4+ICAJCQkJICAgY29uc3Qgc3RydWN0IGFhX3Rhc2tfY3R4ICpvbGQpCj4+ICB7
Cj4+ICAJKm5ldyA9ICpvbGQ7Cj4+IC0JYWFfZ2V0X2xhYmVsKG5ldy0+bm5wKTsKPj4gIAlhYV9n
ZXRfbGFiZWwobmV3LT5wcmV2aW91cyk7Cj4+ICAJYWFfZ2V0X2xhYmVsKG5ldy0+b25leGVjKTsK
Pj4gIH0KPj4gZGlmZiAtLWdpdCBhL3NlY3VyaXR5L2FwcGFybW9yL3Rhc2suYyBiL3NlY3VyaXR5
L2FwcGFybW9yL3Rhc2suYwo+PiBpbmRleCBkMTcxMzBlZTY3OTUuLjRiOWVjMzcwYTE3MSAxMDA2
NDQKPj4gLS0tIGEvc2VjdXJpdHkvYXBwYXJtb3IvdGFzay5jCj4+ICsrKyBiL3NlY3VyaXR5L2Fw
cGFybW9yL3Rhc2suYwo+PiBAQCAtNDEsNyArNDEsNiBAQCBzdHJ1Y3QgYWFfbGFiZWwgKmFhX2dl
dF90YXNrX2xhYmVsKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaykKPj4gIGludCBhYV9yZXBsYWNl
X2N1cnJlbnRfbGFiZWwoc3RydWN0IGFhX2xhYmVsICpsYWJlbCkKPj4gIHsKPj4gIAlzdHJ1Y3Qg
YWFfbGFiZWwgKm9sZCA9IGFhX2N1cnJlbnRfcmF3X2xhYmVsKCk7Cj4+IC0Jc3RydWN0IGFhX3Rh
c2tfY3R4ICpjdHggPSB0YXNrX2N0eChjdXJyZW50KTsKPj4gIAlzdHJ1Y3QgY3JlZCAqbmV3Owo+
PiAgCj4+ICAJQUFfQlVHKCFsYWJlbCk7Cj4+IEBAIC01NiwxMiArNTUsNiBAQCBpbnQgYWFfcmVw
bGFjZV9jdXJyZW50X2xhYmVsKHN0cnVjdCBhYV9sYWJlbCAqbGFiZWwpCj4+ICAJaWYgKCFuZXcp
Cj4+ICAJCXJldHVybiAtRU5PTUVNOwo+PiAgCj4+IC0JaWYgKGN0eC0+bm5wICYmIGxhYmVsX2lz
X3N0YWxlKGN0eC0+bm5wKSkgewo+PiAtCQlzdHJ1Y3QgYWFfbGFiZWwgKnRtcCA9IGN0eC0+bm5w
Owo+PiAtCj4+IC0JCWN0eC0+bm5wID0gYWFfZ2V0X25ld2VzdF9sYWJlbCh0bXApOwo+PiAtCQlh
YV9wdXRfbGFiZWwodG1wKTsKPj4gLQl9Cj4+ICAJaWYgKHVuY29uZmluZWQobGFiZWwpIHx8IChs
YWJlbHNfbnMob2xkKSAhPSBsYWJlbHNfbnMobGFiZWwpKSkKPj4gIAkJLyoKPj4gIAkJICogaWYg
c3dpdGNoaW5nIHRvIHVuY29uZmluZWQgb3IgYSBkaWZmZXJlbnQgbGFiZWwgbmFtZXNwYWNlCj4+
IAoKRXJpYwoKLS0gCkFwcEFybW9yIG1haWxpbmcgbGlzdApBcHBBcm1vckBsaXN0cy51YnVudHUu
Y29tCk1vZGlmeSBzZXR0aW5ncyBvciB1bnN1YnNjcmliZSBhdDogaHR0cHM6Ly9saXN0cy51YnVu
dHUuY29tL21haWxtYW4vbGlzdGluZm8vYXBwYXJtb3IK
